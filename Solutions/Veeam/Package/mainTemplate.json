{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Nikita Konoplin - Nikita.Konoplin@veeam.com",
    "comments": "Solution template for Veeam"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "watchlist1-id": {
      "type": "string",
      "defaultValue": "job_types_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist2-id": {
      "type": "string",
      "defaultValue": "license_editions_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist3-id": {
      "type": "string",
      "defaultValue": "license_types_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist4-id": {
      "type": "string",
      "defaultValue": "operation_names_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist5-id": {
      "type": "string",
      "defaultValue": "session_states_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist6-id": {
      "type": "string",
      "defaultValue": "vbr_events_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist7-id": {
      "type": "string",
      "defaultValue": "action_results_lookup",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist8-id": {
      "type": "string",
      "defaultValue": "vbr_settings",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist9-id": {
      "type": "string",
      "defaultValue": "vone_settings",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist10-id": {
      "type": "string",
      "defaultValue": "coveware_settings",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "watchlist11-id": {
      "type": "string",
      "defaultValue": "collection_schedule_settings",
      "minLength": 1,
      "metadata": {
        "description": "Unique id for the watchlist"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Veeam Data Platform Monitoring",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    },
    "workbook2-name": {
      "type": "string",
      "defaultValue": "Veeam Security Activities",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "Nikita.Konoplin@veeam.com",
    "_email": "[variables('email')]",
    "_solutionName": "Veeam",
    "_solutionVersion": "3.0.1",
    "solutionId": "veeamsoftware.azure-sentinel-solution-veeamapp",
    "_solutionId": "[variables('solutionId')]",
    "TemplateEmptyArray": "[json('[]')]",
    "uiConfigId1": "VeeamCustomTablesDataConnector",
    "_uiConfigId1": "[variables('uiConfigId1')]",
    "dataConnectorContentId1": "VeeamCustomTablesDataConnector",
    "_dataConnectorContentId1": "[variables('dataConnectorContentId1')]",
    "dataConnectorId1": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
    "_dataConnectorId1": "[variables('dataConnectorId1')]",
    "dataConnectorTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentId1'))))]",
    "dataConnectorVersion1": "1.0.0",
    "_dataConnectorcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentId1'),'-', variables('dataConnectorVersion1'))))]",
    "Veeam-ChangeCollectionTime": "Veeam-ChangeCollectionTime",
    "_Veeam-ChangeCollectionTime": "[variables('Veeam-ChangeCollectionTime')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "Veeam-ChangeCollectionTime",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "blanks": "[replace('b', 'b', '')]",
    "Veeam-CollectVeeamAuthorizationEvents": "Veeam-CollectVeeamAuthorizationEvents",
    "_Veeam-CollectVeeamAuthorizationEvents": "[variables('Veeam-CollectVeeamAuthorizationEvents')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "Veeam-CollectVeeamAuthorizationEvents",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "Veeam-CollectSecurityComplianceAnalyzerResult": "Veeam-CollectSecurityComplianceAnalyzerResult",
    "_Veeam-CollectSecurityComplianceAnalyzerResult": "[variables('Veeam-CollectSecurityComplianceAnalyzerResult')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "Veeam-CollectSecurityComplianceAnalyzerResult",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "Veeam-CollectMalwareEvents": "Veeam-CollectMalwareEvents",
    "_Veeam-CollectMalwareEvents": "[variables('Veeam-CollectMalwareEvents')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "Veeam-CollectMalwareEvents",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "Veeam-CollectVoneAlarms": "Veeam-CollectVoneAlarms",
    "_Veeam-CollectVoneAlarms": "[variables('Veeam-CollectVoneAlarms')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "Veeam-CollectVoneAlarms",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "Veeam-CollectCovewareFindings": "Veeam-CollectCovewareFindings",
    "_Veeam-CollectCovewareFindings": "[variables('Veeam-CollectCovewareFindings')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "Veeam-CollectCovewareFindings",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6'))))]",
    "_playbookcontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId6'),'-', variables('playbookVersion6'))))]",
    "Veeam-CollectConfigurationBackups": "Veeam-CollectConfigurationBackups",
    "_Veeam-CollectConfigurationBackups": "[variables('Veeam-CollectConfigurationBackups')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "Veeam-CollectConfigurationBackups",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7'))))]",
    "_playbookcontentProductId7": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId7'),'-', variables('playbookVersion7'))))]",
    "Veeam-FindCleanRestorePoints": "Veeam-FindCleanRestorePoints",
    "_Veeam-FindCleanRestorePoints": "[variables('Veeam-FindCleanRestorePoints')]",
    "playbookVersion8": "1.0",
    "playbookContentId8": "Veeam-FindCleanRestorePoints",
    "_playbookContentId8": "[variables('playbookContentId8')]",
    "playbookId8": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId8'))]",
    "playbookTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId8'))))]",
    "_playbookcontentProductId8": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId8'),'-', variables('playbookVersion8'))))]",
    "Veeam-PerformScanBackup": "Veeam-PerformScanBackup",
    "_Veeam-PerformScanBackup": "[variables('Veeam-PerformScanBackup')]",
    "playbookVersion9": "1.0",
    "playbookContentId9": "Veeam-PerformScanBackup",
    "_playbookContentId9": "[variables('playbookContentId9')]",
    "playbookId9": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId9'))]",
    "playbookTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId9'))))]",
    "_playbookcontentProductId9": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId9'),'-', variables('playbookVersion9'))))]",
    "Veeam-PerformInstantVMRecovery": "Veeam-PerformInstantVMRecovery",
    "_Veeam-PerformInstantVMRecovery": "[variables('Veeam-PerformInstantVMRecovery')]",
    "playbookVersion10": "1.0",
    "playbookContentId10": "Veeam-PerformInstantVMRecovery",
    "_playbookContentId10": "[variables('playbookContentId10')]",
    "playbookId10": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId10'))]",
    "playbookTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId10'))))]",
    "_playbookcontentProductId10": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId10'),'-', variables('playbookVersion10'))))]",
    "Veeam-ResolveTriggeredAlarm": "Veeam-ResolveTriggeredAlarm",
    "_Veeam-ResolveTriggeredAlarm": "[variables('Veeam-ResolveTriggeredAlarm')]",
    "playbookVersion11": "1.0",
    "playbookContentId11": "Veeam-ResolveTriggeredAlarm",
    "_playbookContentId11": "[variables('playbookContentId11')]",
    "playbookId11": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId11'))]",
    "playbookTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId11'))))]",
    "_playbookcontentProductId11": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId11'),'-', variables('playbookVersion11'))))]",
    "Veeam-StartSecurityComplianceAnalyzer": "Veeam-StartSecurityComplianceAnalyzer",
    "_Veeam-StartSecurityComplianceAnalyzer": "[variables('Veeam-StartSecurityComplianceAnalyzer')]",
    "playbookVersion12": "1.0",
    "playbookContentId12": "Veeam-StartSecurityComplianceAnalyzer",
    "_playbookContentId12": "[variables('playbookContentId12')]",
    "playbookId12": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId12'))]",
    "playbookTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId12'))))]",
    "_playbookcontentProductId12": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId12'),'-', variables('playbookVersion12'))))]",
    "Veeam-PerformConfigurationBackupOnIncident": "Veeam-PerformConfigurationBackupOnIncident",
    "_Veeam-PerformConfigurationBackupOnIncident": "[variables('Veeam-PerformConfigurationBackupOnIncident')]",
    "playbookVersion13": "1.0",
    "playbookContentId13": "Veeam-PerformConfigurationBackupOnIncident",
    "_playbookContentId13": "[variables('playbookContentId13')]",
    "playbookId13": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId13'))]",
    "playbookTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId13'))))]",
    "_playbookcontentProductId13": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId13'),'-', variables('playbookVersion13'))))]",
    "Veeam-StartQuickBackup": "Veeam-StartQuickBackup",
    "_Veeam-StartQuickBackup": "[variables('Veeam-StartQuickBackup')]",
    "playbookVersion14": "1.0",
    "playbookContentId14": "Veeam-StartQuickBackup",
    "_playbookContentId14": "[variables('playbookContentId14')]",
    "playbookId14": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId14'))]",
    "playbookTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId14'))))]",
    "_playbookcontentProductId14": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId14'),'-', variables('playbookVersion14'))))]",
    "Veeam-SetupConnectionsPlaybook": "Veeam-SetupConnectionsPlaybook",
    "_Veeam-SetupConnectionsPlaybook": "[variables('Veeam-SetupConnectionsPlaybook')]",
    "playbookVersion15": "1.0",
    "playbookContentId15": "Veeam-SetupConnectionsPlaybook",
    "_playbookContentId15": "[variables('playbookContentId15')]",
    "playbookId15": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId15'))]",
    "playbookTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId15'))))]",
    "_playbookcontentProductId15": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId15'),'-', variables('playbookVersion15'))))]",
    "Job Types Lookup": "Job Types Lookup",
    "_Job Types Lookup": "[variables('Job Types Lookup')]",
    "License Editions Lookup": "License Editions Lookup",
    "_License Editions Lookup": "[variables('License Editions Lookup')]",
    "License Types Lookup": "License Types Lookup",
    "_License Types Lookup": "[variables('License Types Lookup')]",
    "Operation Names Lookup": "Operation Names Lookup",
    "_Operation Names Lookup": "[variables('Operation Names Lookup')]",
    "Session States Lookup": "Session States Lookup",
    "_Session States Lookup": "[variables('Session States Lookup')]",
    "VBR Events Lookup": "VBR Events Lookup",
    "_VBR Events Lookup": "[variables('VBR Events Lookup')]",
    "Action Results Lookup": "Action Results Lookup",
    "_Action Results Lookup": "[variables('Action Results Lookup')]",
    "Veeam Backup & Replication Settings": "Veeam Backup & Replication Settings",
    "_Veeam Backup & Replication Settings": "[variables('Veeam Backup & Replication Settings')]",
    "VONE Settings": "VONE Settings",
    "_VONE Settings": "[variables('VONE Settings')]",
    "Coveware Settings": "Coveware Settings",
    "_Coveware Settings": "[variables('Coveware Settings')]",
    "Veeam Collection Schedule Settings": "Veeam Collection Schedule Settings",
    "_Veeam Collection Schedule Settings": "[variables('Veeam Collection Schedule Settings')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','Veeam_GetJobFinished')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetJobFinished')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Veeam_GetJobFinished-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "Veeam_GetJobFinished-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','Veeam_GetVeeamONEAlarms')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetVeeamONEAlarms')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Veeam_GetVeeamONEAlarms-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "Veeam_GetVeeamONEAlarms-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','Veeam_GetFinishedConfigurationBackupSessions')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetFinishedConfigurationBackupSessions')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Veeam_GetFinishedConfigurationBackupSessions-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "Veeam_GetFinishedConfigurationBackupSessions-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','Veeam_GetSecurityEvents')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetSecurityEvents')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('Veeam_GetSecurityEvents-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "Veeam_GetSecurityEvents-Parser"
    },
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.1",
      "_analyticRulecontentId1": "6d1a5478-e613-44f4-a48f-12cc18568522",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6d1a5478-e613-44f4-a48f-12cc18568522')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6d1a5478-e613-44f4-a48f-12cc18568522')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6d1a5478-e613-44f4-a48f-12cc18568522','-', '1.0.1')))]"
    },
    "analyticRuleObject2": {
      "analyticRuleVersion2": "1.0.1",
      "_analyticRulecontentId2": "fa8d692d-5b00-4a6c-99b3-30b4710efa59",
      "analyticRuleId2": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fa8d692d-5b00-4a6c-99b3-30b4710efa59')]",
      "analyticRuleTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fa8d692d-5b00-4a6c-99b3-30b4710efa59')))]",
      "_analyticRulecontentProductId2": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','fa8d692d-5b00-4a6c-99b3-30b4710efa59','-', '1.0.1')))]"
    },
    "analyticRuleObject3": {
      "analyticRuleVersion3": "1.0.1",
      "_analyticRulecontentId3": "ff3ceb7d-bed0-4ed2-8dbf-1feb9047810f",
      "analyticRuleId3": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ff3ceb7d-bed0-4ed2-8dbf-1feb9047810f')]",
      "analyticRuleTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ff3ceb7d-bed0-4ed2-8dbf-1feb9047810f')))]",
      "_analyticRulecontentProductId3": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ff3ceb7d-bed0-4ed2-8dbf-1feb9047810f','-', '1.0.1')))]"
    },
    "analyticRuleObject4": {
      "analyticRuleVersion4": "1.0.1",
      "_analyticRulecontentId4": "6a90f177-dcaa-44ec-b6e6-723ee8408cb2",
      "analyticRuleId4": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6a90f177-dcaa-44ec-b6e6-723ee8408cb2')]",
      "analyticRuleTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6a90f177-dcaa-44ec-b6e6-723ee8408cb2')))]",
      "_analyticRulecontentProductId4": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6a90f177-dcaa-44ec-b6e6-723ee8408cb2','-', '1.0.1')))]"
    },
    "analyticRuleObject5": {
      "analyticRuleVersion5": "1.0.1",
      "_analyticRulecontentId5": "74c3bda5-cdae-4af3-ab54-daddfbe8bc70",
      "analyticRuleId5": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '74c3bda5-cdae-4af3-ab54-daddfbe8bc70')]",
      "analyticRuleTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('74c3bda5-cdae-4af3-ab54-daddfbe8bc70')))]",
      "_analyticRulecontentProductId5": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','74c3bda5-cdae-4af3-ab54-daddfbe8bc70','-', '1.0.1')))]"
    },
    "analyticRuleObject6": {
      "analyticRuleVersion6": "1.0.1",
      "_analyticRulecontentId6": "4595192f-671b-4724-aa62-093a9724c2f3",
      "analyticRuleId6": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4595192f-671b-4724-aa62-093a9724c2f3')]",
      "analyticRuleTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4595192f-671b-4724-aa62-093a9724c2f3')))]",
      "_analyticRulecontentProductId6": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4595192f-671b-4724-aa62-093a9724c2f3','-', '1.0.1')))]"
    },
    "analyticRuleObject7": {
      "analyticRuleVersion7": "1.0.1",
      "_analyticRulecontentId7": "54c9a609-60db-47b0-82ee-86895c89bd89",
      "analyticRuleId7": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '54c9a609-60db-47b0-82ee-86895c89bd89')]",
      "analyticRuleTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('54c9a609-60db-47b0-82ee-86895c89bd89')))]",
      "_analyticRulecontentProductId7": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','54c9a609-60db-47b0-82ee-86895c89bd89','-', '1.0.1')))]"
    },
    "analyticRuleObject8": {
      "analyticRuleVersion8": "1.0.1",
      "_analyticRulecontentId8": "b8527d36-4cba-49c1-9cab-de9cdc3de879",
      "analyticRuleId8": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b8527d36-4cba-49c1-9cab-de9cdc3de879')]",
      "analyticRuleTemplateSpecName8": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b8527d36-4cba-49c1-9cab-de9cdc3de879')))]",
      "_analyticRulecontentProductId8": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b8527d36-4cba-49c1-9cab-de9cdc3de879','-', '1.0.1')))]"
    },
    "analyticRuleObject9": {
      "analyticRuleVersion9": "1.0.1",
      "_analyticRulecontentId9": "73b4d1d5-c357-4350-bb58-924684a4792a",
      "analyticRuleId9": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '73b4d1d5-c357-4350-bb58-924684a4792a')]",
      "analyticRuleTemplateSpecName9": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('73b4d1d5-c357-4350-bb58-924684a4792a')))]",
      "_analyticRulecontentProductId9": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','73b4d1d5-c357-4350-bb58-924684a4792a','-', '1.0.1')))]"
    },
    "analyticRuleObject10": {
      "analyticRuleVersion10": "1.0.1",
      "_analyticRulecontentId10": "f78e0bb9-2878-4e36-b9c9-6141bff8d3dd",
      "analyticRuleId10": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f78e0bb9-2878-4e36-b9c9-6141bff8d3dd')]",
      "analyticRuleTemplateSpecName10": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f78e0bb9-2878-4e36-b9c9-6141bff8d3dd')))]",
      "_analyticRulecontentProductId10": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f78e0bb9-2878-4e36-b9c9-6141bff8d3dd','-', '1.0.1')))]"
    },
    "analyticRuleObject11": {
      "analyticRuleVersion11": "1.0.1",
      "_analyticRulecontentId11": "72239d5b-ef96-4f15-896f-6cdcd9c53ca7",
      "analyticRuleId11": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '72239d5b-ef96-4f15-896f-6cdcd9c53ca7')]",
      "analyticRuleTemplateSpecName11": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('72239d5b-ef96-4f15-896f-6cdcd9c53ca7')))]",
      "_analyticRulecontentProductId11": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','72239d5b-ef96-4f15-896f-6cdcd9c53ca7','-', '1.0.1')))]"
    },
    "analyticRuleObject12": {
      "analyticRuleVersion12": "1.0.1",
      "_analyticRulecontentId12": "73e1d89b-79a6-4ab0-b3bb-5e564fcf10f1",
      "analyticRuleId12": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '73e1d89b-79a6-4ab0-b3bb-5e564fcf10f1')]",
      "analyticRuleTemplateSpecName12": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('73e1d89b-79a6-4ab0-b3bb-5e564fcf10f1')))]",
      "_analyticRulecontentProductId12": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','73e1d89b-79a6-4ab0-b3bb-5e564fcf10f1','-', '1.0.1')))]"
    },
    "analyticRuleObject13": {
      "analyticRuleVersion13": "1.0.1",
      "_analyticRulecontentId13": "2b3b59eb-ea7c-45f6-9df8-8dbaed632317",
      "analyticRuleId13": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2b3b59eb-ea7c-45f6-9df8-8dbaed632317')]",
      "analyticRuleTemplateSpecName13": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2b3b59eb-ea7c-45f6-9df8-8dbaed632317')))]",
      "_analyticRulecontentProductId13": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2b3b59eb-ea7c-45f6-9df8-8dbaed632317','-', '1.0.1')))]"
    },
    "analyticRuleObject14": {
      "analyticRuleVersion14": "1.0.1",
      "_analyticRulecontentId14": "9f0d4171-9a9f-42e4-acbf-9093dd4203de",
      "analyticRuleId14": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9f0d4171-9a9f-42e4-acbf-9093dd4203de')]",
      "analyticRuleTemplateSpecName14": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9f0d4171-9a9f-42e4-acbf-9093dd4203de')))]",
      "_analyticRulecontentProductId14": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9f0d4171-9a9f-42e4-acbf-9093dd4203de','-', '1.0.1')))]"
    },
    "analyticRuleObject15": {
      "analyticRuleVersion15": "1.0.1",
      "_analyticRulecontentId15": "1f1634e5-585e-4187-ac5b-6d0e157bd2ea",
      "analyticRuleId15": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1f1634e5-585e-4187-ac5b-6d0e157bd2ea')]",
      "analyticRuleTemplateSpecName15": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1f1634e5-585e-4187-ac5b-6d0e157bd2ea')))]",
      "_analyticRulecontentProductId15": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1f1634e5-585e-4187-ac5b-6d0e157bd2ea','-', '1.0.1')))]"
    },
    "analyticRuleObject16": {
      "analyticRuleVersion16": "1.0.1",
      "_analyticRulecontentId16": "18833d01-703a-438d-8ac6-84faa82e9b52",
      "analyticRuleId16": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '18833d01-703a-438d-8ac6-84faa82e9b52')]",
      "analyticRuleTemplateSpecName16": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('18833d01-703a-438d-8ac6-84faa82e9b52')))]",
      "_analyticRulecontentProductId16": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','18833d01-703a-438d-8ac6-84faa82e9b52','-', '1.0.1')))]"
    },
    "analyticRuleObject17": {
      "analyticRuleVersion17": "1.0.1",
      "_analyticRulecontentId17": "90039769-0c32-442b-bb12-5b61224a77a0",
      "analyticRuleId17": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '90039769-0c32-442b-bb12-5b61224a77a0')]",
      "analyticRuleTemplateSpecName17": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('90039769-0c32-442b-bb12-5b61224a77a0')))]",
      "_analyticRulecontentProductId17": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','90039769-0c32-442b-bb12-5b61224a77a0','-', '1.0.1')))]"
    },
    "analyticRuleObject18": {
      "analyticRuleVersion18": "1.0.1",
      "_analyticRulecontentId18": "8777f9e1-db58-4078-a381-4e47a3a2ee01",
      "analyticRuleId18": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8777f9e1-db58-4078-a381-4e47a3a2ee01')]",
      "analyticRuleTemplateSpecName18": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8777f9e1-db58-4078-a381-4e47a3a2ee01')))]",
      "_analyticRulecontentProductId18": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','8777f9e1-db58-4078-a381-4e47a3a2ee01','-', '1.0.1')))]"
    },
    "analyticRuleObject19": {
      "analyticRuleVersion19": "1.0.1",
      "_analyticRulecontentId19": "1edb50b5-fee1-4826-86f9-abaf0e4ce5a5",
      "analyticRuleId19": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1edb50b5-fee1-4826-86f9-abaf0e4ce5a5')]",
      "analyticRuleTemplateSpecName19": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1edb50b5-fee1-4826-86f9-abaf0e4ce5a5')))]",
      "_analyticRulecontentProductId19": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1edb50b5-fee1-4826-86f9-abaf0e4ce5a5','-', '1.0.1')))]"
    },
    "analyticRuleObject20": {
      "analyticRuleVersion20": "1.0.1",
      "_analyticRulecontentId20": "860e201a-deea-4129-8646-fcf8bdd976b0",
      "analyticRuleId20": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '860e201a-deea-4129-8646-fcf8bdd976b0')]",
      "analyticRuleTemplateSpecName20": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('860e201a-deea-4129-8646-fcf8bdd976b0')))]",
      "_analyticRulecontentProductId20": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','860e201a-deea-4129-8646-fcf8bdd976b0','-', '1.0.1')))]"
    },
    "analyticRuleObject21": {
      "analyticRuleVersion21": "1.0.1",
      "_analyticRulecontentId21": "e0d937ca-4582-4c3b-b95b-82fff33ed610",
      "analyticRuleId21": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e0d937ca-4582-4c3b-b95b-82fff33ed610')]",
      "analyticRuleTemplateSpecName21": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e0d937ca-4582-4c3b-b95b-82fff33ed610')))]",
      "_analyticRulecontentProductId21": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e0d937ca-4582-4c3b-b95b-82fff33ed610','-', '1.0.1')))]"
    },
    "analyticRuleObject22": {
      "analyticRuleVersion22": "1.0.1",
      "_analyticRulecontentId22": "cfc967be-0428-4ab0-8c15-06c85649078f",
      "analyticRuleId22": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cfc967be-0428-4ab0-8c15-06c85649078f')]",
      "analyticRuleTemplateSpecName22": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cfc967be-0428-4ab0-8c15-06c85649078f')))]",
      "_analyticRulecontentProductId22": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','cfc967be-0428-4ab0-8c15-06c85649078f','-', '1.0.1')))]"
    },
    "analyticRuleObject23": {
      "analyticRuleVersion23": "1.0.1",
      "_analyticRulecontentId23": "58fcb721-35ec-4ea2-9f29-c99acde676b8",
      "analyticRuleId23": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '58fcb721-35ec-4ea2-9f29-c99acde676b8')]",
      "analyticRuleTemplateSpecName23": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('58fcb721-35ec-4ea2-9f29-c99acde676b8')))]",
      "_analyticRulecontentProductId23": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','58fcb721-35ec-4ea2-9f29-c99acde676b8','-', '1.0.1')))]"
    },
    "analyticRuleObject24": {
      "analyticRuleVersion24": "1.0.1",
      "_analyticRulecontentId24": "a2c6fe48-0d3d-416b-991c-a750ec50d7eb",
      "analyticRuleId24": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a2c6fe48-0d3d-416b-991c-a750ec50d7eb')]",
      "analyticRuleTemplateSpecName24": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a2c6fe48-0d3d-416b-991c-a750ec50d7eb')))]",
      "_analyticRulecontentProductId24": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a2c6fe48-0d3d-416b-991c-a750ec50d7eb','-', '1.0.1')))]"
    },
    "analyticRuleObject25": {
      "analyticRuleVersion25": "1.0.1",
      "_analyticRulecontentId25": "cc47b9d6-a10e-4c5e-94a1-c73a68273e2d",
      "analyticRuleId25": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cc47b9d6-a10e-4c5e-94a1-c73a68273e2d')]",
      "analyticRuleTemplateSpecName25": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cc47b9d6-a10e-4c5e-94a1-c73a68273e2d')))]",
      "_analyticRulecontentProductId25": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','cc47b9d6-a10e-4c5e-94a1-c73a68273e2d','-', '1.0.1')))]"
    },
    "analyticRuleObject26": {
      "analyticRuleVersion26": "1.0.1",
      "_analyticRulecontentId26": "d035188d-d856-4a74-8226-f3bdf65033c4",
      "analyticRuleId26": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd035188d-d856-4a74-8226-f3bdf65033c4')]",
      "analyticRuleTemplateSpecName26": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d035188d-d856-4a74-8226-f3bdf65033c4')))]",
      "_analyticRulecontentProductId26": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d035188d-d856-4a74-8226-f3bdf65033c4','-', '1.0.1')))]"
    },
    "analyticRuleObject27": {
      "analyticRuleVersion27": "1.0.1",
      "_analyticRulecontentId27": "5f6f5a46-42d3-4961-94db-68b6229bc84e",
      "analyticRuleId27": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5f6f5a46-42d3-4961-94db-68b6229bc84e')]",
      "analyticRuleTemplateSpecName27": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5f6f5a46-42d3-4961-94db-68b6229bc84e')))]",
      "_analyticRulecontentProductId27": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5f6f5a46-42d3-4961-94db-68b6229bc84e','-', '1.0.1')))]"
    },
    "analyticRuleObject28": {
      "analyticRuleVersion28": "1.0.1",
      "_analyticRulecontentId28": "8f339b13-02f0-400f-be18-491ec0ba71f1",
      "analyticRuleId28": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8f339b13-02f0-400f-be18-491ec0ba71f1')]",
      "analyticRuleTemplateSpecName28": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8f339b13-02f0-400f-be18-491ec0ba71f1')))]",
      "_analyticRulecontentProductId28": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','8f339b13-02f0-400f-be18-491ec0ba71f1','-', '1.0.1')))]"
    },
    "analyticRuleObject29": {
      "analyticRuleVersion29": "1.0.1",
      "_analyticRulecontentId29": "a053e7ba-e60c-482a-bbd8-89a25c53d905",
      "analyticRuleId29": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a053e7ba-e60c-482a-bbd8-89a25c53d905')]",
      "analyticRuleTemplateSpecName29": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a053e7ba-e60c-482a-bbd8-89a25c53d905')))]",
      "_analyticRulecontentProductId29": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a053e7ba-e60c-482a-bbd8-89a25c53d905','-', '1.0.1')))]"
    },
    "analyticRuleObject30": {
      "analyticRuleVersion30": "1.0.1",
      "_analyticRulecontentId30": "e06ec6d7-d9f6-4675-89bf-03fa8a0e0be0",
      "analyticRuleId30": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e06ec6d7-d9f6-4675-89bf-03fa8a0e0be0')]",
      "analyticRuleTemplateSpecName30": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e06ec6d7-d9f6-4675-89bf-03fa8a0e0be0')))]",
      "_analyticRulecontentProductId30": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e06ec6d7-d9f6-4675-89bf-03fa8a0e0be0','-', '1.0.1')))]"
    },
    "analyticRuleObject31": {
      "analyticRuleVersion31": "1.0.1",
      "_analyticRulecontentId31": "de4cc05b-2e4e-4104-9559-101b4c41c35e",
      "analyticRuleId31": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'de4cc05b-2e4e-4104-9559-101b4c41c35e')]",
      "analyticRuleTemplateSpecName31": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('de4cc05b-2e4e-4104-9559-101b4c41c35e')))]",
      "_analyticRulecontentProductId31": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','de4cc05b-2e4e-4104-9559-101b4c41c35e','-', '1.0.1')))]"
    },
    "analyticRuleObject32": {
      "analyticRuleVersion32": "1.0.1",
      "_analyticRulecontentId32": "d7f23105-6756-43ae-973c-48b7441559d5",
      "analyticRuleId32": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd7f23105-6756-43ae-973c-48b7441559d5')]",
      "analyticRuleTemplateSpecName32": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d7f23105-6756-43ae-973c-48b7441559d5')))]",
      "_analyticRulecontentProductId32": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d7f23105-6756-43ae-973c-48b7441559d5','-', '1.0.1')))]"
    },
    "analyticRuleObject33": {
      "analyticRuleVersion33": "1.0.1",
      "_analyticRulecontentId33": "62008da4-627e-47fe-b78a-62e1e23b3eb9",
      "analyticRuleId33": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '62008da4-627e-47fe-b78a-62e1e23b3eb9')]",
      "analyticRuleTemplateSpecName33": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('62008da4-627e-47fe-b78a-62e1e23b3eb9')))]",
      "_analyticRulecontentProductId33": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','62008da4-627e-47fe-b78a-62e1e23b3eb9','-', '1.0.1')))]"
    },
    "analyticRuleObject34": {
      "analyticRuleVersion34": "1.0.1",
      "_analyticRulecontentId34": "7ddaf8ef-b726-408b-b1a7-a7a4f92cbf6d",
      "analyticRuleId34": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7ddaf8ef-b726-408b-b1a7-a7a4f92cbf6d')]",
      "analyticRuleTemplateSpecName34": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7ddaf8ef-b726-408b-b1a7-a7a4f92cbf6d')))]",
      "_analyticRulecontentProductId34": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7ddaf8ef-b726-408b-b1a7-a7a4f92cbf6d','-', '1.0.1')))]"
    },
    "analyticRuleObject35": {
      "analyticRuleVersion35": "1.0.1",
      "_analyticRulecontentId35": "57a8ff3a-d4aa-456f-9c13-186026bae52e",
      "analyticRuleId35": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '57a8ff3a-d4aa-456f-9c13-186026bae52e')]",
      "analyticRuleTemplateSpecName35": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('57a8ff3a-d4aa-456f-9c13-186026bae52e')))]",
      "_analyticRulecontentProductId35": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','57a8ff3a-d4aa-456f-9c13-186026bae52e','-', '1.0.1')))]"
    },
    "analyticRuleObject36": {
      "analyticRuleVersion36": "1.0.1",
      "_analyticRulecontentId36": "fe6226cd-fee7-4d0d-88d2-160311207b57",
      "analyticRuleId36": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fe6226cd-fee7-4d0d-88d2-160311207b57')]",
      "analyticRuleTemplateSpecName36": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fe6226cd-fee7-4d0d-88d2-160311207b57')))]",
      "_analyticRulecontentProductId36": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','fe6226cd-fee7-4d0d-88d2-160311207b57','-', '1.0.1')))]"
    },
    "analyticRuleObject37": {
      "analyticRuleVersion37": "1.0.1",
      "_analyticRulecontentId37": "a641dbe1-9590-46f8-a6d7-b5f24db6e126",
      "analyticRuleId37": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a641dbe1-9590-46f8-a6d7-b5f24db6e126')]",
      "analyticRuleTemplateSpecName37": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a641dbe1-9590-46f8-a6d7-b5f24db6e126')))]",
      "_analyticRulecontentProductId37": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a641dbe1-9590-46f8-a6d7-b5f24db6e126','-', '1.0.1')))]"
    },
    "analyticRuleObject38": {
      "analyticRuleVersion38": "1.0.1",
      "_analyticRulecontentId38": "dfd1d756-623d-4951-84a5-ce51f726d322",
      "analyticRuleId38": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'dfd1d756-623d-4951-84a5-ce51f726d322')]",
      "analyticRuleTemplateSpecName38": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('dfd1d756-623d-4951-84a5-ce51f726d322')))]",
      "_analyticRulecontentProductId38": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','dfd1d756-623d-4951-84a5-ce51f726d322','-', '1.0.1')))]"
    },
    "analyticRuleObject39": {
      "analyticRuleVersion39": "1.0.1",
      "_analyticRulecontentId39": "14003a45-da0b-47dc-8e20-9711ba7b5112",
      "analyticRuleId39": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '14003a45-da0b-47dc-8e20-9711ba7b5112')]",
      "analyticRuleTemplateSpecName39": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('14003a45-da0b-47dc-8e20-9711ba7b5112')))]",
      "_analyticRulecontentProductId39": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','14003a45-da0b-47dc-8e20-9711ba7b5112','-', '1.0.1')))]"
    },
    "analyticRuleObject40": {
      "analyticRuleVersion40": "1.0.1",
      "_analyticRulecontentId40": "0995ccd8-16d4-4764-83b2-511235ca4e4b",
      "analyticRuleId40": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0995ccd8-16d4-4764-83b2-511235ca4e4b')]",
      "analyticRuleTemplateSpecName40": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('0995ccd8-16d4-4764-83b2-511235ca4e4b')))]",
      "_analyticRulecontentProductId40": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','0995ccd8-16d4-4764-83b2-511235ca4e4b','-', '1.0.1')))]"
    },
    "analyticRuleObject41": {
      "analyticRuleVersion41": "1.0.1",
      "_analyticRulecontentId41": "c9faf1ee-57dd-4f54-8cd1-fcf35a1aa424",
      "analyticRuleId41": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c9faf1ee-57dd-4f54-8cd1-fcf35a1aa424')]",
      "analyticRuleTemplateSpecName41": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c9faf1ee-57dd-4f54-8cd1-fcf35a1aa424')))]",
      "_analyticRulecontentProductId41": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c9faf1ee-57dd-4f54-8cd1-fcf35a1aa424','-', '1.0.1')))]"
    },
    "analyticRuleObject42": {
      "analyticRuleVersion42": "1.0.1",
      "_analyticRulecontentId42": "2034c441-2850-4167-80ed-b4438155836d",
      "analyticRuleId42": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2034c441-2850-4167-80ed-b4438155836d')]",
      "analyticRuleTemplateSpecName42": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2034c441-2850-4167-80ed-b4438155836d')))]",
      "_analyticRulecontentProductId42": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2034c441-2850-4167-80ed-b4438155836d','-', '1.0.1')))]"
    },
    "analyticRuleObject43": {
      "analyticRuleVersion43": "1.0.1",
      "_analyticRulecontentId43": "141d7e3c-a72b-49f7-9e64-57f60c2fa927",
      "analyticRuleId43": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '141d7e3c-a72b-49f7-9e64-57f60c2fa927')]",
      "analyticRuleTemplateSpecName43": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('141d7e3c-a72b-49f7-9e64-57f60c2fa927')))]",
      "_analyticRulecontentProductId43": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','141d7e3c-a72b-49f7-9e64-57f60c2fa927','-', '1.0.1')))]"
    },
    "analyticRuleObject44": {
      "analyticRuleVersion44": "1.0.1",
      "_analyticRulecontentId44": "5601e894-2d3c-42fd-bc71-f0350b1b0bc6",
      "analyticRuleId44": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5601e894-2d3c-42fd-bc71-f0350b1b0bc6')]",
      "analyticRuleTemplateSpecName44": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5601e894-2d3c-42fd-bc71-f0350b1b0bc6')))]",
      "_analyticRulecontentProductId44": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5601e894-2d3c-42fd-bc71-f0350b1b0bc6','-', '1.0.1')))]"
    },
    "analyticRuleObject45": {
      "analyticRuleVersion45": "1.0.1",
      "_analyticRulecontentId45": "ac1a85f1-0e3f-4ae8-9f59-a240fc04b03f",
      "analyticRuleId45": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ac1a85f1-0e3f-4ae8-9f59-a240fc04b03f')]",
      "analyticRuleTemplateSpecName45": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ac1a85f1-0e3f-4ae8-9f59-a240fc04b03f')))]",
      "_analyticRulecontentProductId45": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ac1a85f1-0e3f-4ae8-9f59-a240fc04b03f','-', '1.0.1')))]"
    },
    "analyticRuleObject46": {
      "analyticRuleVersion46": "1.0.1",
      "_analyticRulecontentId46": "4e41c85f-d495-4a23-a218-41b938140dce",
      "analyticRuleId46": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4e41c85f-d495-4a23-a218-41b938140dce')]",
      "analyticRuleTemplateSpecName46": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4e41c85f-d495-4a23-a218-41b938140dce')))]",
      "_analyticRulecontentProductId46": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4e41c85f-d495-4a23-a218-41b938140dce','-', '1.0.1')))]"
    },
    "analyticRuleObject47": {
      "analyticRuleVersion47": "1.0.1",
      "_analyticRulecontentId47": "580da4d1-8e39-4420-855d-3d4f653fe127",
      "analyticRuleId47": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '580da4d1-8e39-4420-855d-3d4f653fe127')]",
      "analyticRuleTemplateSpecName47": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('580da4d1-8e39-4420-855d-3d4f653fe127')))]",
      "_analyticRulecontentProductId47": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','580da4d1-8e39-4420-855d-3d4f653fe127','-', '1.0.1')))]"
    },
    "analyticRuleObject48": {
      "analyticRuleVersion48": "1.0.1",
      "_analyticRulecontentId48": "5220a0b0-ab15-43cf-a77e-2273d35cfe8e",
      "analyticRuleId48": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5220a0b0-ab15-43cf-a77e-2273d35cfe8e')]",
      "analyticRuleTemplateSpecName48": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5220a0b0-ab15-43cf-a77e-2273d35cfe8e')))]",
      "_analyticRulecontentProductId48": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5220a0b0-ab15-43cf-a77e-2273d35cfe8e','-', '1.0.1')))]"
    },
    "analyticRuleObject49": {
      "analyticRuleVersion49": "1.0.1",
      "_analyticRulecontentId49": "b4ea5da0-77a8-400e-ae2b-3ca8fdb779ef",
      "analyticRuleId49": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b4ea5da0-77a8-400e-ae2b-3ca8fdb779ef')]",
      "analyticRuleTemplateSpecName49": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b4ea5da0-77a8-400e-ae2b-3ca8fdb779ef')))]",
      "_analyticRulecontentProductId49": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b4ea5da0-77a8-400e-ae2b-3ca8fdb779ef','-', '1.0.1')))]"
    },
    "analyticRuleObject50": {
      "analyticRuleVersion50": "1.0.1",
      "_analyticRulecontentId50": "61c576ae-f81a-4151-8524-b08c86f206a8",
      "analyticRuleId50": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '61c576ae-f81a-4151-8524-b08c86f206a8')]",
      "analyticRuleTemplateSpecName50": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('61c576ae-f81a-4151-8524-b08c86f206a8')))]",
      "_analyticRulecontentProductId50": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','61c576ae-f81a-4151-8524-b08c86f206a8','-', '1.0.1')))]"
    },
    "analyticRuleObject51": {
      "analyticRuleVersion51": "1.0.1",
      "_analyticRulecontentId51": "f11f245e-f77e-4dc5-95f1-ce602c2a36ba",
      "analyticRuleId51": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f11f245e-f77e-4dc5-95f1-ce602c2a36ba')]",
      "analyticRuleTemplateSpecName51": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f11f245e-f77e-4dc5-95f1-ce602c2a36ba')))]",
      "_analyticRulecontentProductId51": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f11f245e-f77e-4dc5-95f1-ce602c2a36ba','-', '1.0.1')))]"
    },
    "analyticRuleObject52": {
      "analyticRuleVersion52": "1.0.1",
      "_analyticRulecontentId52": "9b5ab4b6-7cca-4779-9784-761b48a58e78",
      "analyticRuleId52": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9b5ab4b6-7cca-4779-9784-761b48a58e78')]",
      "analyticRuleTemplateSpecName52": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9b5ab4b6-7cca-4779-9784-761b48a58e78')))]",
      "_analyticRulecontentProductId52": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9b5ab4b6-7cca-4779-9784-761b48a58e78','-', '1.0.1')))]"
    },
    "analyticRuleObject53": {
      "analyticRuleVersion53": "1.0.1",
      "_analyticRulecontentId53": "594dafa1-e2d5-4f83-b32e-c629cb629b6f",
      "analyticRuleId53": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '594dafa1-e2d5-4f83-b32e-c629cb629b6f')]",
      "analyticRuleTemplateSpecName53": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('594dafa1-e2d5-4f83-b32e-c629cb629b6f')))]",
      "_analyticRulecontentProductId53": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','594dafa1-e2d5-4f83-b32e-c629cb629b6f','-', '1.0.1')))]"
    },
    "analyticRuleObject54": {
      "analyticRuleVersion54": "1.0.1",
      "_analyticRulecontentId54": "94724029-6ec3-4bf7-a0e9-c4e4cba0479f",
      "analyticRuleId54": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '94724029-6ec3-4bf7-a0e9-c4e4cba0479f')]",
      "analyticRuleTemplateSpecName54": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('94724029-6ec3-4bf7-a0e9-c4e4cba0479f')))]",
      "_analyticRulecontentProductId54": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','94724029-6ec3-4bf7-a0e9-c4e4cba0479f','-', '1.0.1')))]"
    },
    "analyticRuleObject55": {
      "analyticRuleVersion55": "1.0.1",
      "_analyticRulecontentId55": "79adb08a-8218-492d-acf0-f8aa596f3444",
      "analyticRuleId55": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '79adb08a-8218-492d-acf0-f8aa596f3444')]",
      "analyticRuleTemplateSpecName55": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('79adb08a-8218-492d-acf0-f8aa596f3444')))]",
      "_analyticRulecontentProductId55": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','79adb08a-8218-492d-acf0-f8aa596f3444','-', '1.0.1')))]"
    },
    "analyticRuleObject56": {
      "analyticRuleVersion56": "1.0.1",
      "_analyticRulecontentId56": "e4828d99-bb06-40b3-8f9d-0f68fb61e9ee",
      "analyticRuleId56": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e4828d99-bb06-40b3-8f9d-0f68fb61e9ee')]",
      "analyticRuleTemplateSpecName56": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e4828d99-bb06-40b3-8f9d-0f68fb61e9ee')))]",
      "_analyticRulecontentProductId56": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e4828d99-bb06-40b3-8f9d-0f68fb61e9ee','-', '1.0.1')))]"
    },
    "analyticRuleObject57": {
      "analyticRuleVersion57": "1.0.1",
      "_analyticRulecontentId57": "31ffa231-72da-49f0-88cd-de08eaf3bc52",
      "analyticRuleId57": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '31ffa231-72da-49f0-88cd-de08eaf3bc52')]",
      "analyticRuleTemplateSpecName57": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('31ffa231-72da-49f0-88cd-de08eaf3bc52')))]",
      "_analyticRulecontentProductId57": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','31ffa231-72da-49f0-88cd-de08eaf3bc52','-', '1.0.1')))]"
    },
    "analyticRuleObject58": {
      "analyticRuleVersion58": "1.0.1",
      "_analyticRulecontentId58": "8e4986ac-7388-4782-b389-0b0288123dbc",
      "analyticRuleId58": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8e4986ac-7388-4782-b389-0b0288123dbc')]",
      "analyticRuleTemplateSpecName58": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8e4986ac-7388-4782-b389-0b0288123dbc')))]",
      "_analyticRulecontentProductId58": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','8e4986ac-7388-4782-b389-0b0288123dbc','-', '1.0.1')))]"
    },
    "analyticRuleObject59": {
      "analyticRuleVersion59": "1.0.1",
      "_analyticRulecontentId59": "7a6f7e95-b574-44ab-b215-f5c32a2378d1",
      "analyticRuleId59": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7a6f7e95-b574-44ab-b215-f5c32a2378d1')]",
      "analyticRuleTemplateSpecName59": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7a6f7e95-b574-44ab-b215-f5c32a2378d1')))]",
      "_analyticRulecontentProductId59": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7a6f7e95-b574-44ab-b215-f5c32a2378d1','-', '1.0.1')))]"
    },
    "analyticRuleObject60": {
      "analyticRuleVersion60": "1.0.1",
      "_analyticRulecontentId60": "3caa6e6d-a3e2-4776-be97-15d20e2675ed",
      "analyticRuleId60": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3caa6e6d-a3e2-4776-be97-15d20e2675ed')]",
      "analyticRuleTemplateSpecName60": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3caa6e6d-a3e2-4776-be97-15d20e2675ed')))]",
      "_analyticRulecontentProductId60": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','3caa6e6d-a3e2-4776-be97-15d20e2675ed','-', '1.0.1')))]"
    },
    "analyticRuleObject61": {
      "analyticRuleVersion61": "1.0.2",
      "_analyticRulecontentId61": "9a7c80ef-8dc2-4b07-834d-b9ca18d603f7",
      "analyticRuleId61": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9a7c80ef-8dc2-4b07-834d-b9ca18d603f7')]",
      "analyticRuleTemplateSpecName61": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9a7c80ef-8dc2-4b07-834d-b9ca18d603f7')))]",
      "_analyticRulecontentProductId61": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9a7c80ef-8dc2-4b07-834d-b9ca18d603f7','-', '1.0.2')))]"
    },
    "analyticRuleObject62": {
      "analyticRuleVersion62": "1.0.1",
      "_analyticRulecontentId62": "401e91cb-b53f-41a5-b066-1c028b3b51db",
      "analyticRuleId62": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '401e91cb-b53f-41a5-b066-1c028b3b51db')]",
      "analyticRuleTemplateSpecName62": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('401e91cb-b53f-41a5-b066-1c028b3b51db')))]",
      "_analyticRulecontentProductId62": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','401e91cb-b53f-41a5-b066-1c028b3b51db','-', '1.0.1')))]"
    },
    "analyticRuleObject63": {
      "analyticRuleVersion63": "1.0.1",
      "_analyticRulecontentId63": "88b9223c-29ff-48a9-a745-c553aa0dbae2",
      "analyticRuleId63": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '88b9223c-29ff-48a9-a745-c553aa0dbae2')]",
      "analyticRuleTemplateSpecName63": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('88b9223c-29ff-48a9-a745-c553aa0dbae2')))]",
      "_analyticRulecontentProductId63": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','88b9223c-29ff-48a9-a745-c553aa0dbae2','-', '1.0.1')))]"
    },
    "analyticRuleObject64": {
      "analyticRuleVersion64": "1.0.1",
      "_analyticRulecontentId64": "effd8410-3119-41c8-a228-9c0c8ce10d67",
      "analyticRuleId64": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'effd8410-3119-41c8-a228-9c0c8ce10d67')]",
      "analyticRuleTemplateSpecName64": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('effd8410-3119-41c8-a228-9c0c8ce10d67')))]",
      "_analyticRulecontentProductId64": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','effd8410-3119-41c8-a228-9c0c8ce10d67','-', '1.0.1')))]"
    },
    "analyticRuleObject65": {
      "analyticRuleVersion65": "1.0.1",
      "_analyticRulecontentId65": "b42424a6-10f4-447b-92a0-55ac38f4a475",
      "analyticRuleId65": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b42424a6-10f4-447b-92a0-55ac38f4a475')]",
      "analyticRuleTemplateSpecName65": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b42424a6-10f4-447b-92a0-55ac38f4a475')))]",
      "_analyticRulecontentProductId65": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b42424a6-10f4-447b-92a0-55ac38f4a475','-', '1.0.1')))]"
    },
    "analyticRuleObject66": {
      "analyticRuleVersion66": "1.0.1",
      "_analyticRulecontentId66": "6881f4f5-f58e-43d7-a05e-b5d05a4c09f9",
      "analyticRuleId66": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6881f4f5-f58e-43d7-a05e-b5d05a4c09f9')]",
      "analyticRuleTemplateSpecName66": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6881f4f5-f58e-43d7-a05e-b5d05a4c09f9')))]",
      "_analyticRulecontentProductId66": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6881f4f5-f58e-43d7-a05e-b5d05a4c09f9','-', '1.0.1')))]"
    },
    "analyticRuleObject67": {
      "analyticRuleVersion67": "1.0.1",
      "_analyticRulecontentId67": "3fefd6c5-bbe9-49a9-95b2-d4b8a5591d9c",
      "analyticRuleId67": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '3fefd6c5-bbe9-49a9-95b2-d4b8a5591d9c')]",
      "analyticRuleTemplateSpecName67": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('3fefd6c5-bbe9-49a9-95b2-d4b8a5591d9c')))]",
      "_analyticRulecontentProductId67": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','3fefd6c5-bbe9-49a9-95b2-d4b8a5591d9c','-', '1.0.1')))]"
    },
    "analyticRuleObject68": {
      "analyticRuleVersion68": "1.0.1",
      "_analyticRulecontentId68": "4d8f5244-cb56-4e95-ba65-0a7bec114a13",
      "analyticRuleId68": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4d8f5244-cb56-4e95-ba65-0a7bec114a13')]",
      "analyticRuleTemplateSpecName68": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4d8f5244-cb56-4e95-ba65-0a7bec114a13')))]",
      "_analyticRulecontentProductId68": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4d8f5244-cb56-4e95-ba65-0a7bec114a13','-', '1.0.1')))]"
    },
    "analyticRuleObject69": {
      "analyticRuleVersion69": "1.0.1",
      "_analyticRulecontentId69": "ebdd9cf8-c41c-460e-95d8-e5bc3cd9763e",
      "analyticRuleId69": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ebdd9cf8-c41c-460e-95d8-e5bc3cd9763e')]",
      "analyticRuleTemplateSpecName69": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ebdd9cf8-c41c-460e-95d8-e5bc3cd9763e')))]",
      "_analyticRulecontentProductId69": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ebdd9cf8-c41c-460e-95d8-e5bc3cd9763e','-', '1.0.1')))]"
    },
    "analyticRuleObject70": {
      "analyticRuleVersion70": "1.0.1",
      "_analyticRulecontentId70": "e92ba6bb-53ea-4347-b1a6-2e015298bbdc",
      "analyticRuleId70": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e92ba6bb-53ea-4347-b1a6-2e015298bbdc')]",
      "analyticRuleTemplateSpecName70": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e92ba6bb-53ea-4347-b1a6-2e015298bbdc')))]",
      "_analyticRulecontentProductId70": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e92ba6bb-53ea-4347-b1a6-2e015298bbdc','-', '1.0.1')))]"
    },
    "analyticRuleObject71": {
      "analyticRuleVersion71": "1.0.1",
      "_analyticRulecontentId71": "56d70592-077e-4e7b-9d8a-b5d8b0a6a52b",
      "analyticRuleId71": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '56d70592-077e-4e7b-9d8a-b5d8b0a6a52b')]",
      "analyticRuleTemplateSpecName71": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('56d70592-077e-4e7b-9d8a-b5d8b0a6a52b')))]",
      "_analyticRulecontentProductId71": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','56d70592-077e-4e7b-9d8a-b5d8b0a6a52b','-', '1.0.1')))]"
    },
    "analyticRuleObject72": {
      "analyticRuleVersion72": "1.0.1",
      "_analyticRulecontentId72": "6e4d1832-2cf9-410d-a5e2-c12b33c7d9f7",
      "analyticRuleId72": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6e4d1832-2cf9-410d-a5e2-c12b33c7d9f7')]",
      "analyticRuleTemplateSpecName72": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6e4d1832-2cf9-410d-a5e2-c12b33c7d9f7')))]",
      "_analyticRulecontentProductId72": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6e4d1832-2cf9-410d-a5e2-c12b33c7d9f7','-', '1.0.1')))]"
    },
    "analyticRuleObject73": {
      "analyticRuleVersion73": "1.0.1",
      "_analyticRulecontentId73": "1f6897bf-a05a-47b2-a5f9-4ba6fd34f715",
      "analyticRuleId73": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1f6897bf-a05a-47b2-a5f9-4ba6fd34f715')]",
      "analyticRuleTemplateSpecName73": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1f6897bf-a05a-47b2-a5f9-4ba6fd34f715')))]",
      "_analyticRulecontentProductId73": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1f6897bf-a05a-47b2-a5f9-4ba6fd34f715','-', '1.0.1')))]"
    },
    "analyticRuleObject74": {
      "analyticRuleVersion74": "1.0.1",
      "_analyticRulecontentId74": "a8ebf22b-a050-434c-8095-2267f206257a",
      "analyticRuleId74": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a8ebf22b-a050-434c-8095-2267f206257a')]",
      "analyticRuleTemplateSpecName74": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a8ebf22b-a050-434c-8095-2267f206257a')))]",
      "_analyticRulecontentProductId74": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a8ebf22b-a050-434c-8095-2267f206257a','-', '1.0.1')))]"
    },
    "analyticRuleObject75": {
      "analyticRuleVersion75": "1.0.1",
      "_analyticRulecontentId75": "f4cad1aa-a1e2-46dc-bf09-6cf8dc67f0ca",
      "analyticRuleId75": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f4cad1aa-a1e2-46dc-bf09-6cf8dc67f0ca')]",
      "analyticRuleTemplateSpecName75": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f4cad1aa-a1e2-46dc-bf09-6cf8dc67f0ca')))]",
      "_analyticRulecontentProductId75": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f4cad1aa-a1e2-46dc-bf09-6cf8dc67f0ca','-', '1.0.1')))]"
    },
    "analyticRuleObject76": {
      "analyticRuleVersion76": "1.0.1",
      "_analyticRulecontentId76": "5367e8fc-a150-468f-84f2-90ac1dabef15",
      "analyticRuleId76": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5367e8fc-a150-468f-84f2-90ac1dabef15')]",
      "analyticRuleTemplateSpecName76": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5367e8fc-a150-468f-84f2-90ac1dabef15')))]",
      "_analyticRulecontentProductId76": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5367e8fc-a150-468f-84f2-90ac1dabef15','-', '1.0.1')))]"
    },
    "analyticRuleObject77": {
      "analyticRuleVersion77": "1.0.1",
      "_analyticRulecontentId77": "af97a601-8fac-4628-bdad-5fc0511236b2",
      "analyticRuleId77": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'af97a601-8fac-4628-bdad-5fc0511236b2')]",
      "analyticRuleTemplateSpecName77": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('af97a601-8fac-4628-bdad-5fc0511236b2')))]",
      "_analyticRulecontentProductId77": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','af97a601-8fac-4628-bdad-5fc0511236b2','-', '1.0.1')))]"
    },
    "analyticRuleObject78": {
      "analyticRuleVersion78": "1.0.1",
      "_analyticRulecontentId78": "88a61215-b3e6-4c78-8acd-9078d9bcfdc3",
      "analyticRuleId78": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '88a61215-b3e6-4c78-8acd-9078d9bcfdc3')]",
      "analyticRuleTemplateSpecName78": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('88a61215-b3e6-4c78-8acd-9078d9bcfdc3')))]",
      "_analyticRulecontentProductId78": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','88a61215-b3e6-4c78-8acd-9078d9bcfdc3','-', '1.0.1')))]"
    },
    "analyticRuleObject79": {
      "analyticRuleVersion79": "1.0.1",
      "_analyticRulecontentId79": "e06b913f-7698-4b2c-96e6-d47a9f4f5de8",
      "analyticRuleId79": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e06b913f-7698-4b2c-96e6-d47a9f4f5de8')]",
      "analyticRuleTemplateSpecName79": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e06b913f-7698-4b2c-96e6-d47a9f4f5de8')))]",
      "_analyticRulecontentProductId79": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e06b913f-7698-4b2c-96e6-d47a9f4f5de8','-', '1.0.1')))]"
    },
    "analyticRuleObject80": {
      "analyticRuleVersion80": "1.0.1",
      "_analyticRulecontentId80": "5fda37e0-d67c-4e8d-b277-90e5eac2172c",
      "analyticRuleId80": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5fda37e0-d67c-4e8d-b277-90e5eac2172c')]",
      "analyticRuleTemplateSpecName80": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5fda37e0-d67c-4e8d-b277-90e5eac2172c')))]",
      "_analyticRulecontentProductId80": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5fda37e0-d67c-4e8d-b277-90e5eac2172c','-', '1.0.1')))]"
    },
    "analyticRuleObject81": {
      "analyticRuleVersion81": "1.0.1",
      "_analyticRulecontentId81": "e9b9efa5-4e19-4716-840b-51ef2feeaad1",
      "analyticRuleId81": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e9b9efa5-4e19-4716-840b-51ef2feeaad1')]",
      "analyticRuleTemplateSpecName81": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e9b9efa5-4e19-4716-840b-51ef2feeaad1')))]",
      "_analyticRulecontentProductId81": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e9b9efa5-4e19-4716-840b-51ef2feeaad1','-', '1.0.1')))]"
    },
    "analyticRuleObject82": {
      "analyticRuleVersion82": "1.0.1",
      "_analyticRulecontentId82": "9f37ded4-f27a-4ef6-b5e6-de6430070808",
      "analyticRuleId82": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9f37ded4-f27a-4ef6-b5e6-de6430070808')]",
      "analyticRuleTemplateSpecName82": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9f37ded4-f27a-4ef6-b5e6-de6430070808')))]",
      "_analyticRulecontentProductId82": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9f37ded4-f27a-4ef6-b5e6-de6430070808','-', '1.0.1')))]"
    },
    "analyticRuleObject83": {
      "analyticRuleVersion83": "1.0.1",
      "_analyticRulecontentId83": "c4c6cb50-9fc3-4ca9-a2df-22d527240309",
      "analyticRuleId83": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c4c6cb50-9fc3-4ca9-a2df-22d527240309')]",
      "analyticRuleTemplateSpecName83": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c4c6cb50-9fc3-4ca9-a2df-22d527240309')))]",
      "_analyticRulecontentProductId83": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c4c6cb50-9fc3-4ca9-a2df-22d527240309','-', '1.0.1')))]"
    },
    "analyticRuleObject84": {
      "analyticRuleVersion84": "1.0.1",
      "_analyticRulecontentId84": "bad9d4b8-41cb-41ba-82c8-e20e771b3440",
      "analyticRuleId84": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'bad9d4b8-41cb-41ba-82c8-e20e771b3440')]",
      "analyticRuleTemplateSpecName84": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('bad9d4b8-41cb-41ba-82c8-e20e771b3440')))]",
      "_analyticRulecontentProductId84": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','bad9d4b8-41cb-41ba-82c8-e20e771b3440','-', '1.0.1')))]"
    },
    "analyticRuleObject85": {
      "analyticRuleVersion85": "1.0.1",
      "_analyticRulecontentId85": "4dc85727-573c-4722-8173-026e2a1d20db",
      "analyticRuleId85": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '4dc85727-573c-4722-8173-026e2a1d20db')]",
      "analyticRuleTemplateSpecName85": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('4dc85727-573c-4722-8173-026e2a1d20db')))]",
      "_analyticRulecontentProductId85": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','4dc85727-573c-4722-8173-026e2a1d20db','-', '1.0.1')))]"
    },
    "analyticRuleObject86": {
      "analyticRuleVersion86": "1.0.1",
      "_analyticRulecontentId86": "12006091-95a7-4f21-b474-f74b0480a138",
      "analyticRuleId86": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '12006091-95a7-4f21-b474-f74b0480a138')]",
      "analyticRuleTemplateSpecName86": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('12006091-95a7-4f21-b474-f74b0480a138')))]",
      "_analyticRulecontentProductId86": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','12006091-95a7-4f21-b474-f74b0480a138','-', '1.0.1')))]"
    },
    "analyticRuleObject87": {
      "analyticRuleVersion87": "1.0.1",
      "_analyticRulecontentId87": "cbe9fcb2-8767-4965-887e-350710145386",
      "analyticRuleId87": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cbe9fcb2-8767-4965-887e-350710145386')]",
      "analyticRuleTemplateSpecName87": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cbe9fcb2-8767-4965-887e-350710145386')))]",
      "_analyticRulecontentProductId87": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','cbe9fcb2-8767-4965-887e-350710145386','-', '1.0.1')))]"
    },
    "analyticRuleObject88": {
      "analyticRuleVersion88": "1.0.1",
      "_analyticRulecontentId88": "35fb4771-9b8f-47f7-bd5b-3085d584f7ce",
      "analyticRuleId88": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '35fb4771-9b8f-47f7-bd5b-3085d584f7ce')]",
      "analyticRuleTemplateSpecName88": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('35fb4771-9b8f-47f7-bd5b-3085d584f7ce')))]",
      "_analyticRulecontentProductId88": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','35fb4771-9b8f-47f7-bd5b-3085d584f7ce','-', '1.0.1')))]"
    },
    "analyticRuleObject89": {
      "analyticRuleVersion89": "1.0.1",
      "_analyticRulecontentId89": "40b8e739-1077-42d8-9501-b68736c2c4d2",
      "analyticRuleId89": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '40b8e739-1077-42d8-9501-b68736c2c4d2')]",
      "analyticRuleTemplateSpecName89": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('40b8e739-1077-42d8-9501-b68736c2c4d2')))]",
      "_analyticRulecontentProductId89": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','40b8e739-1077-42d8-9501-b68736c2c4d2','-', '1.0.1')))]"
    },
    "analyticRuleObject90": {
      "analyticRuleVersion90": "1.0.1",
      "_analyticRulecontentId90": "7cf8c19b-6cd2-4d0c-814b-45d34e68568b",
      "analyticRuleId90": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7cf8c19b-6cd2-4d0c-814b-45d34e68568b')]",
      "analyticRuleTemplateSpecName90": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7cf8c19b-6cd2-4d0c-814b-45d34e68568b')))]",
      "_analyticRulecontentProductId90": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7cf8c19b-6cd2-4d0c-814b-45d34e68568b','-', '1.0.1')))]"
    },
    "analyticRuleObject91": {
      "analyticRuleVersion91": "1.0.1",
      "_analyticRulecontentId91": "be47e508-e35b-4c63-979b-a75b72102344",
      "analyticRuleId91": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'be47e508-e35b-4c63-979b-a75b72102344')]",
      "analyticRuleTemplateSpecName91": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('be47e508-e35b-4c63-979b-a75b72102344')))]",
      "_analyticRulecontentProductId91": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','be47e508-e35b-4c63-979b-a75b72102344','-', '1.0.1')))]"
    },
    "analyticRuleObject92": {
      "analyticRuleVersion92": "1.0.1",
      "_analyticRulecontentId92": "1c23715c-3a28-4b98-b135-fece6e7dcb8b",
      "analyticRuleId92": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1c23715c-3a28-4b98-b135-fece6e7dcb8b')]",
      "analyticRuleTemplateSpecName92": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1c23715c-3a28-4b98-b135-fece6e7dcb8b')))]",
      "_analyticRulecontentProductId92": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1c23715c-3a28-4b98-b135-fece6e7dcb8b','-', '1.0.1')))]"
    },
    "analyticRuleObject93": {
      "analyticRuleVersion93": "1.0.1",
      "_analyticRulecontentId93": "e1d0d9ce-b7c9-4e28-883d-04429f80d6d7",
      "analyticRuleId93": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'e1d0d9ce-b7c9-4e28-883d-04429f80d6d7')]",
      "analyticRuleTemplateSpecName93": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('e1d0d9ce-b7c9-4e28-883d-04429f80d6d7')))]",
      "_analyticRulecontentProductId93": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','e1d0d9ce-b7c9-4e28-883d-04429f80d6d7','-', '1.0.1')))]"
    },
    "analyticRuleObject94": {
      "analyticRuleVersion94": "1.0.1",
      "_analyticRulecontentId94": "b7409bbb-6f0c-43c4-bb63-b20add5eb717",
      "analyticRuleId94": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b7409bbb-6f0c-43c4-bb63-b20add5eb717')]",
      "analyticRuleTemplateSpecName94": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b7409bbb-6f0c-43c4-bb63-b20add5eb717')))]",
      "_analyticRulecontentProductId94": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b7409bbb-6f0c-43c4-bb63-b20add5eb717','-', '1.0.1')))]"
    },
    "analyticRuleObject95": {
      "analyticRuleVersion95": "1.0.1",
      "_analyticRulecontentId95": "06ba509c-606e-4967-baee-21815ae61f8e",
      "analyticRuleId95": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '06ba509c-606e-4967-baee-21815ae61f8e')]",
      "analyticRuleTemplateSpecName95": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('06ba509c-606e-4967-baee-21815ae61f8e')))]",
      "_analyticRulecontentProductId95": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','06ba509c-606e-4967-baee-21815ae61f8e','-', '1.0.1')))]"
    },
    "analyticRuleObject96": {
      "analyticRuleVersion96": "1.0.1",
      "_analyticRulecontentId96": "ecf98b4a-3986-4739-879d-dd446e839153",
      "analyticRuleId96": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ecf98b4a-3986-4739-879d-dd446e839153')]",
      "analyticRuleTemplateSpecName96": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ecf98b4a-3986-4739-879d-dd446e839153')))]",
      "_analyticRulecontentProductId96": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ecf98b4a-3986-4739-879d-dd446e839153','-', '1.0.1')))]"
    },
    "analyticRuleObject97": {
      "analyticRuleVersion97": "1.0.1",
      "_analyticRulecontentId97": "ceb625a3-a8d7-4a42-9ea1-40f01c337ecd",
      "analyticRuleId97": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ceb625a3-a8d7-4a42-9ea1-40f01c337ecd')]",
      "analyticRuleTemplateSpecName97": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ceb625a3-a8d7-4a42-9ea1-40f01c337ecd')))]",
      "_analyticRulecontentProductId97": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ceb625a3-a8d7-4a42-9ea1-40f01c337ecd','-', '1.0.1')))]"
    },
    "analyticRuleObject98": {
      "analyticRuleVersion98": "1.0.1",
      "_analyticRulecontentId98": "19ed623e-1b1c-45e0-ac74-c1e629fbf117",
      "analyticRuleId98": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '19ed623e-1b1c-45e0-ac74-c1e629fbf117')]",
      "analyticRuleTemplateSpecName98": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('19ed623e-1b1c-45e0-ac74-c1e629fbf117')))]",
      "_analyticRulecontentProductId98": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','19ed623e-1b1c-45e0-ac74-c1e629fbf117','-', '1.0.1')))]"
    },
    "analyticRuleObject99": {
      "analyticRuleVersion99": "1.0.1",
      "_analyticRulecontentId99": "d92b2d65-1037-41e2-8d04-c18b8403d895",
      "analyticRuleId99": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd92b2d65-1037-41e2-8d04-c18b8403d895')]",
      "analyticRuleTemplateSpecName99": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d92b2d65-1037-41e2-8d04-c18b8403d895')))]",
      "_analyticRulecontentProductId99": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d92b2d65-1037-41e2-8d04-c18b8403d895','-', '1.0.1')))]"
    },
    "analyticRuleObject100": {
      "analyticRuleVersion100": "1.0.1",
      "_analyticRulecontentId100": "fda79d00-9e6a-46f8-b7a2-2bdccd5f598e",
      "analyticRuleId100": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'fda79d00-9e6a-46f8-b7a2-2bdccd5f598e')]",
      "analyticRuleTemplateSpecName100": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('fda79d00-9e6a-46f8-b7a2-2bdccd5f598e')))]",
      "_analyticRulecontentProductId100": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','fda79d00-9e6a-46f8-b7a2-2bdccd5f598e','-', '1.0.1')))]"
    },
    "analyticRuleObject101": {
      "analyticRuleVersion101": "1.0.1",
      "_analyticRulecontentId101": "afec0070-2b46-4366-a272-e2d9cc8a50f2",
      "analyticRuleId101": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'afec0070-2b46-4366-a272-e2d9cc8a50f2')]",
      "analyticRuleTemplateSpecName101": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('afec0070-2b46-4366-a272-e2d9cc8a50f2')))]",
      "_analyticRulecontentProductId101": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','afec0070-2b46-4366-a272-e2d9cc8a50f2','-', '1.0.1')))]"
    },
    "analyticRuleObject102": {
      "analyticRuleVersion102": "1.0.1",
      "_analyticRulecontentId102": "da25b390-b97a-4ea4-abe3-5bbd7f90642c",
      "analyticRuleId102": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'da25b390-b97a-4ea4-abe3-5bbd7f90642c')]",
      "analyticRuleTemplateSpecName102": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('da25b390-b97a-4ea4-abe3-5bbd7f90642c')))]",
      "_analyticRulecontentProductId102": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','da25b390-b97a-4ea4-abe3-5bbd7f90642c','-', '1.0.1')))]"
    },
    "analyticRuleObject103": {
      "analyticRuleVersion103": "1.0.1",
      "_analyticRulecontentId103": "16183d97-c348-4f72-a943-27e80c9dfbd5",
      "analyticRuleId103": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '16183d97-c348-4f72-a943-27e80c9dfbd5')]",
      "analyticRuleTemplateSpecName103": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('16183d97-c348-4f72-a943-27e80c9dfbd5')))]",
      "_analyticRulecontentProductId103": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','16183d97-c348-4f72-a943-27e80c9dfbd5','-', '1.0.1')))]"
    },
    "analyticRuleObject104": {
      "analyticRuleVersion104": "1.0.1",
      "_analyticRulecontentId104": "c4d891cd-4b22-419c-8f40-7603eb1cc3a3",
      "analyticRuleId104": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c4d891cd-4b22-419c-8f40-7603eb1cc3a3')]",
      "analyticRuleTemplateSpecName104": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c4d891cd-4b22-419c-8f40-7603eb1cc3a3')))]",
      "_analyticRulecontentProductId104": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c4d891cd-4b22-419c-8f40-7603eb1cc3a3','-', '1.0.1')))]"
    },
    "analyticRuleObject105": {
      "analyticRuleVersion105": "1.0.1",
      "_analyticRulecontentId105": "ef029652-d004-44e9-a70a-48dd71818aaa",
      "analyticRuleId105": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ef029652-d004-44e9-a70a-48dd71818aaa')]",
      "analyticRuleTemplateSpecName105": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ef029652-d004-44e9-a70a-48dd71818aaa')))]",
      "_analyticRulecontentProductId105": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ef029652-d004-44e9-a70a-48dd71818aaa','-', '1.0.1')))]"
    },
    "analyticRuleObject106": {
      "analyticRuleVersion106": "1.0.1",
      "_analyticRulecontentId106": "71711b77-486c-41d0-9de0-dcc411fa7b05",
      "analyticRuleId106": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '71711b77-486c-41d0-9de0-dcc411fa7b05')]",
      "analyticRuleTemplateSpecName106": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('71711b77-486c-41d0-9de0-dcc411fa7b05')))]",
      "_analyticRulecontentProductId106": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','71711b77-486c-41d0-9de0-dcc411fa7b05','-', '1.0.1')))]"
    },
    "analyticRuleObject107": {
      "analyticRuleVersion107": "1.0.1",
      "_analyticRulecontentId107": "25111c10-44b5-4275-996d-d62f15a7d072",
      "analyticRuleId107": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '25111c10-44b5-4275-996d-d62f15a7d072')]",
      "analyticRuleTemplateSpecName107": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('25111c10-44b5-4275-996d-d62f15a7d072')))]",
      "_analyticRulecontentProductId107": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','25111c10-44b5-4275-996d-d62f15a7d072','-', '1.0.1')))]"
    },
    "analyticRuleObject108": {
      "analyticRuleVersion108": "1.0.1",
      "_analyticRulecontentId108": "d297961f-f8a3-4f84-865d-ec3a07641699",
      "analyticRuleId108": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd297961f-f8a3-4f84-865d-ec3a07641699')]",
      "analyticRuleTemplateSpecName108": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d297961f-f8a3-4f84-865d-ec3a07641699')))]",
      "_analyticRulecontentProductId108": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d297961f-f8a3-4f84-865d-ec3a07641699','-', '1.0.1')))]"
    },
    "analyticRuleObject109": {
      "analyticRuleVersion109": "1.0.1",
      "_analyticRulecontentId109": "f920ac64-dfd0-4dea-9b7c-acecf1ea2b28",
      "analyticRuleId109": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'f920ac64-dfd0-4dea-9b7c-acecf1ea2b28')]",
      "analyticRuleTemplateSpecName109": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('f920ac64-dfd0-4dea-9b7c-acecf1ea2b28')))]",
      "_analyticRulecontentProductId109": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','f920ac64-dfd0-4dea-9b7c-acecf1ea2b28','-', '1.0.1')))]"
    },
    "analyticRuleObject110": {
      "analyticRuleVersion110": "1.0.1",
      "_analyticRulecontentId110": "73e36985-d65d-4852-b3cc-5e8f4b64b39c",
      "analyticRuleId110": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '73e36985-d65d-4852-b3cc-5e8f4b64b39c')]",
      "analyticRuleTemplateSpecName110": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('73e36985-d65d-4852-b3cc-5e8f4b64b39c')))]",
      "_analyticRulecontentProductId110": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','73e36985-d65d-4852-b3cc-5e8f4b64b39c','-', '1.0.1')))]"
    },
    "analyticRuleObject111": {
      "analyticRuleVersion111": "1.0.1",
      "_analyticRulecontentId111": "7fb6d1b6-48e4-442b-ba4d-1b5fb5fa379b",
      "analyticRuleId111": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7fb6d1b6-48e4-442b-ba4d-1b5fb5fa379b')]",
      "analyticRuleTemplateSpecName111": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7fb6d1b6-48e4-442b-ba4d-1b5fb5fa379b')))]",
      "_analyticRulecontentProductId111": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7fb6d1b6-48e4-442b-ba4d-1b5fb5fa379b','-', '1.0.1')))]"
    },
    "analyticRuleObject112": {
      "analyticRuleVersion112": "1.0.1",
      "_analyticRulecontentId112": "7ad4b9ff-8089-4b70-b98e-a2ca995611e9",
      "analyticRuleId112": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '7ad4b9ff-8089-4b70-b98e-a2ca995611e9')]",
      "analyticRuleTemplateSpecName112": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('7ad4b9ff-8089-4b70-b98e-a2ca995611e9')))]",
      "_analyticRulecontentProductId112": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','7ad4b9ff-8089-4b70-b98e-a2ca995611e9','-', '1.0.1')))]"
    },
    "analyticRuleObject113": {
      "analyticRuleVersion113": "1.0.1",
      "_analyticRulecontentId113": "c0ead324-d8e8-484d-b590-9639f5ac5d93",
      "analyticRuleId113": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'c0ead324-d8e8-484d-b590-9639f5ac5d93')]",
      "analyticRuleTemplateSpecName113": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('c0ead324-d8e8-484d-b590-9639f5ac5d93')))]",
      "_analyticRulecontentProductId113": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','c0ead324-d8e8-484d-b590-9639f5ac5d93','-', '1.0.1')))]"
    },
    "analyticRuleObject114": {
      "analyticRuleVersion114": "1.0.1",
      "_analyticRulecontentId114": "21ef1e12-75ac-43be-a77e-d2cee4c69225",
      "analyticRuleId114": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '21ef1e12-75ac-43be-a77e-d2cee4c69225')]",
      "analyticRuleTemplateSpecName114": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('21ef1e12-75ac-43be-a77e-d2cee4c69225')))]",
      "_analyticRulecontentProductId114": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','21ef1e12-75ac-43be-a77e-d2cee4c69225','-', '1.0.1')))]"
    },
    "analyticRuleObject115": {
      "analyticRuleVersion115": "1.0.1",
      "_analyticRulecontentId115": "b5785a66-3722-4bdc-9d12-bb40f2cf4824",
      "analyticRuleId115": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'b5785a66-3722-4bdc-9d12-bb40f2cf4824')]",
      "analyticRuleTemplateSpecName115": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('b5785a66-3722-4bdc-9d12-bb40f2cf4824')))]",
      "_analyticRulecontentProductId115": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','b5785a66-3722-4bdc-9d12-bb40f2cf4824','-', '1.0.1')))]"
    },
    "analyticRuleObject116": {
      "analyticRuleVersion116": "1.0.1",
      "_analyticRulecontentId116": "176abf3c-392a-47bd-b565-a4ecfd0ff7ec",
      "analyticRuleId116": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '176abf3c-392a-47bd-b565-a4ecfd0ff7ec')]",
      "analyticRuleTemplateSpecName116": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('176abf3c-392a-47bd-b565-a4ecfd0ff7ec')))]",
      "_analyticRulecontentProductId116": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','176abf3c-392a-47bd-b565-a4ecfd0ff7ec','-', '1.0.1')))]"
    },
    "analyticRuleObject117": {
      "analyticRuleVersion117": "1.0.1",
      "_analyticRulecontentId117": "1a9e31d6-2116-4ff1-8ee7-abc957c34350",
      "analyticRuleId117": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '1a9e31d6-2116-4ff1-8ee7-abc957c34350')]",
      "analyticRuleTemplateSpecName117": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('1a9e31d6-2116-4ff1-8ee7-abc957c34350')))]",
      "_analyticRulecontentProductId117": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','1a9e31d6-2116-4ff1-8ee7-abc957c34350','-', '1.0.1')))]"
    },
    "analyticRuleObject118": {
      "analyticRuleVersion118": "1.0.1",
      "_analyticRulecontentId118": "d48f9671-adc0-45e5-a477-670ef38bc132",
      "analyticRuleId118": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'd48f9671-adc0-45e5-a477-670ef38bc132')]",
      "analyticRuleTemplateSpecName118": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('d48f9671-adc0-45e5-a477-670ef38bc132')))]",
      "_analyticRulecontentProductId118": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','d48f9671-adc0-45e5-a477-670ef38bc132','-', '1.0.1')))]"
    },
    "analyticRuleObject119": {
      "analyticRuleVersion119": "1.0.1",
      "_analyticRulecontentId119": "37d97c4d-a42f-495b-a523-376416b278b5",
      "analyticRuleId119": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '37d97c4d-a42f-495b-a523-376416b278b5')]",
      "analyticRuleTemplateSpecName119": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('37d97c4d-a42f-495b-a523-376416b278b5')))]",
      "_analyticRulecontentProductId119": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','37d97c4d-a42f-495b-a523-376416b278b5','-', '1.0.1')))]"
    },
    "analyticRuleObject120": {
      "analyticRuleVersion120": "1.0.1",
      "_analyticRulecontentId120": "8bb38c66-ca2a-4ad0-9b49-1e60368f8a19",
      "analyticRuleId120": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '8bb38c66-ca2a-4ad0-9b49-1e60368f8a19')]",
      "analyticRuleTemplateSpecName120": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('8bb38c66-ca2a-4ad0-9b49-1e60368f8a19')))]",
      "_analyticRulecontentProductId120": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','8bb38c66-ca2a-4ad0-9b49-1e60368f8a19','-', '1.0.1')))]"
    },
    "analyticRuleObject121": {
      "analyticRuleVersion121": "1.0.1",
      "_analyticRulecontentId121": "cab7396a-9a18-45e7-b685-945e8bf825cb",
      "analyticRuleId121": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'cab7396a-9a18-45e7-b685-945e8bf825cb')]",
      "analyticRuleTemplateSpecName121": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('cab7396a-9a18-45e7-b685-945e8bf825cb')))]",
      "_analyticRulecontentProductId121": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','cab7396a-9a18-45e7-b685-945e8bf825cb','-', '1.0.1')))]"
    },
    "analyticRuleObject122": {
      "analyticRuleVersion122": "1.0.1",
      "_analyticRulecontentId122": "04530ba4-b26e-4a83-8057-a4fc286de848",
      "analyticRuleId122": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '04530ba4-b26e-4a83-8057-a4fc286de848')]",
      "analyticRuleTemplateSpecName122": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('04530ba4-b26e-4a83-8057-a4fc286de848')))]",
      "_analyticRulecontentProductId122": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','04530ba4-b26e-4a83-8057-a4fc286de848','-', '1.0.1')))]"
    },
    "analyticRuleObject123": {
      "analyticRuleVersion123": "1.0.1",
      "_analyticRulecontentId123": "2a860019-0eda-4b49-bc62-8f683aed4929",
      "analyticRuleId123": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2a860019-0eda-4b49-bc62-8f683aed4929')]",
      "analyticRuleTemplateSpecName123": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2a860019-0eda-4b49-bc62-8f683aed4929')))]",
      "_analyticRulecontentProductId123": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2a860019-0eda-4b49-bc62-8f683aed4929','-', '1.0.1')))]"
    },
    "analyticRuleObject124": {
      "analyticRuleVersion124": "1.0.1",
      "_analyticRulecontentId124": "ae880194-5766-46d3-a17b-c8c53e9ca96c",
      "analyticRuleId124": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'ae880194-5766-46d3-a17b-c8c53e9ca96c')]",
      "analyticRuleTemplateSpecName124": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('ae880194-5766-46d3-a17b-c8c53e9ca96c')))]",
      "_analyticRulecontentProductId124": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','ae880194-5766-46d3-a17b-c8c53e9ca96c','-', '1.0.1')))]"
    },
    "analyticRuleObject125": {
      "analyticRuleVersion125": "1.0.1",
      "_analyticRulecontentId125": "0e76e420-fa55-4718-adc6-40a1a76411af",
      "analyticRuleId125": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '0e76e420-fa55-4718-adc6-40a1a76411af')]",
      "analyticRuleTemplateSpecName125": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('0e76e420-fa55-4718-adc6-40a1a76411af')))]",
      "_analyticRulecontentProductId125": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','0e76e420-fa55-4718-adc6-40a1a76411af','-', '1.0.1')))]"
    },
    "analyticRuleObject126": {
      "analyticRuleVersion126": "1.0.1",
      "_analyticRulecontentId126": "6117e317-4b90-4bcc-a71f-0c1f29d82ce3",
      "analyticRuleId126": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '6117e317-4b90-4bcc-a71f-0c1f29d82ce3')]",
      "analyticRuleTemplateSpecName126": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('6117e317-4b90-4bcc-a71f-0c1f29d82ce3')))]",
      "_analyticRulecontentProductId126": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','6117e317-4b90-4bcc-a71f-0c1f29d82ce3','-', '1.0.1')))]"
    },
    "analyticRuleObject127": {
      "analyticRuleVersion127": "1.0.1",
      "_analyticRulecontentId127": "128ea2a4-1047-4f28-ad55-b1b88357d172",
      "analyticRuleId127": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '128ea2a4-1047-4f28-ad55-b1b88357d172')]",
      "analyticRuleTemplateSpecName127": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('128ea2a4-1047-4f28-ad55-b1b88357d172')))]",
      "_analyticRulecontentProductId127": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','128ea2a4-1047-4f28-ad55-b1b88357d172','-', '1.0.1')))]"
    },
    "analyticRuleObject128": {
      "analyticRuleVersion128": "1.0.1",
      "_analyticRulecontentId128": "384e92a7-103c-4a47-945d-381ae9653f91",
      "analyticRuleId128": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '384e92a7-103c-4a47-945d-381ae9653f91')]",
      "analyticRuleTemplateSpecName128": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('384e92a7-103c-4a47-945d-381ae9653f91')))]",
      "_analyticRulecontentProductId128": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','384e92a7-103c-4a47-945d-381ae9653f91','-', '1.0.1')))]"
    },
    "analyticRuleObject129": {
      "analyticRuleVersion129": "1.0.1",
      "_analyticRulecontentId129": "a21eccd5-0148-4f88-a5d7-a8f86e9e4d8e",
      "analyticRuleId129": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', 'a21eccd5-0148-4f88-a5d7-a8f86e9e4d8e')]",
      "analyticRuleTemplateSpecName129": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('a21eccd5-0148-4f88-a5d7-a8f86e9e4d8e')))]",
      "_analyticRulecontentProductId129": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','a21eccd5-0148-4f88-a5d7-a8f86e9e4d8e','-', '1.0.1')))]"
    },
    "analyticRuleObject130": {
      "analyticRuleVersion130": "1.0.1",
      "_analyticRulecontentId130": "5b19f19b-d92c-486f-be98-ba2c5945e240",
      "analyticRuleId130": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '5b19f19b-d92c-486f-be98-ba2c5945e240')]",
      "analyticRuleTemplateSpecName130": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('5b19f19b-d92c-486f-be98-ba2c5945e240')))]",
      "_analyticRulecontentProductId130": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','5b19f19b-d92c-486f-be98-ba2c5945e240','-', '1.0.1')))]"
    },
    "analyticRuleObject131": {
      "analyticRuleVersion131": "1.0.1",
      "_analyticRulecontentId131": "2e4fe360-ce67-433b-930e-42f83058dfd0",
      "analyticRuleId131": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '2e4fe360-ce67-433b-930e-42f83058dfd0')]",
      "analyticRuleTemplateSpecName131": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('2e4fe360-ce67-433b-930e-42f83058dfd0')))]",
      "_analyticRulecontentProductId131": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','2e4fe360-ce67-433b-930e-42f83058dfd0','-', '1.0.1')))]"
    },
    "analyticRuleObject132": {
      "analyticRuleVersion132": "1.0.2",
      "_analyticRulecontentId132": "259ef474-836d-4662-86ef-70cb7a38e765",
      "analyticRuleId132": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '259ef474-836d-4662-86ef-70cb7a38e765')]",
      "analyticRuleTemplateSpecName132": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('259ef474-836d-4662-86ef-70cb7a38e765')))]",
      "_analyticRulecontentProductId132": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','259ef474-836d-4662-86ef-70cb7a38e765','-', '1.0.2')))]"
    },
    "workbookVersion1": "1.0.1",
    "workbookContentId1": "VeeamDataPlatformMonitoringWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "workbookVersion2": "1.0.1",
    "workbookContentId2": "VeeamSecurityActivitiesWorkbook",
    "workbookId2": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId2'))]",
    "workbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId2'))))]",
    "_workbookContentId2": "[variables('workbookContentId2')]",
    "_workbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId2'),'-', variables('workbookVersion2'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('dataConnectorTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam data connector with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
              "apiVersion": "2021-03-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GenericUI",
              "properties": {
                "connectorUiConfig": {
                  "id": "[variables('_uiConfigId1')]",
                  "title": "Veeam Data Connector (using Azure Functions)",
                  "publisher": "Veeam",
                  "descriptionMarkdown": "Veeam Data Connector allows you to ingest Veeam telemetry data from multiple custom tables into Microsoft Sentinel.\n\nThe connector supports integration with Veeam Backup & Replication, Veeam ONE and Coveware platforms to provide comprehensive monitoring and security analytics. The data is collected through Azure Functions and stored in custom Log Analytics tables with dedicated Data Collection Rules (DCR) and Data Collection Endpoints (DCE).\n\n**Custom Tables Included:**\n- **VeeamMalwareEvents_CL**: Malware detection events from Veeam Backup & Replication\n- **VeeamSecurityComplianceAnalyzer_CL**: Security & Compliance Analyzer results collected from Veeam backup infrastructure components\n- **VeeamAuthorizationEvents_CL**: Authorization and authentication events\n- **VeeamOneTriggeredAlarms_CL**: Triggered alarms from Veeam ONE servers\n- **VeeamCovewareFindings_CL**: Security findings from Coveware solution\n- **VeeamSessions_CL**: Veeam sessions",
                  "additionalRequirementBanner": "The following queries and workbooks require a parser based on Kusto to work properly. To use **VeeamSyslogEventsV2** alias for Kusto functions in queries and workbooks, see [this instruction](https://aka.ms/sentinel-veeam-function) ",
                  "graphQueries": [
                    {
                      "metricName": "All malware events",
                      "legend": "VeeamMalwareEvents_CL",
                      "baseQuery": "VeeamMalwareEvents_CL"
                    },
                    {
                      "metricName": "Critical malware events",
                      "legend": "VeeamMalwareEvents_CL",
                      "baseQuery": "VeeamMalwareEvents_CL\n| where Severity == \"Critical\""
                    },
                    {
                      "metricName": "Security & Compliance Analyzer results",
                      "legend": "VeeamSecurityComplianceAnalyzer_CL",
                      "baseQuery": "VeeamSecurityComplianceAnalyzer_CL"
                    },
                    {
                      "metricName": "Veeam ONE alarms",
                      "legend": "VeeamOneTriggeredAlarms_CL",
                      "baseQuery": "VeeamOneTriggeredAlarms_CL"
                    },
                    {
                      "metricName": "Authorization events",
                      "legend": "VeeamAuthorizationEvents_CL",
                      "baseQuery": "VeeamAuthorizationEvents_CL"
                    },
                    {
                      "metricName": "Coveware findings",
                      "legend": "VeeamCovewareFindings_CL",
                      "baseQuery": "VeeamCovewareFindings_CL"
                    },
                    {
                      "metricName": "Veeam sessions",
                      "legend": "VeeamSessions_CL",
                      "baseQuery": "VeeamSessions_CL"
                    }
                  ],
                  "sampleQueries": "[variables('TemplateEmptyArray')]",
                  "dataTypes": [
                    {
                      "name": "VeeamMalwareEvents_CL",
                      "lastDataReceivedQuery": "VeeamMalwareEvents_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "VeeamSecurityComplianceAnalyzer_CL",
                      "lastDataReceivedQuery": "VeeamSecurityComplianceAnalyzer_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "VeeamAuthorizationEvents_CL",
                      "lastDataReceivedQuery": "VeeamAuthorizationEvents_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "VeeamOneTriggeredAlarms_CL",
                      "lastDataReceivedQuery": "VeeamOneTriggeredAlarms_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "VeeamCovewareFindings_CL",
                      "lastDataReceivedQuery": "VeeamCovewareFindings_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    },
                    {
                      "name": "VeeamSessions_CL",
                      "lastDataReceivedQuery": "VeeamSessions_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriterias": [
                    {
                      "type": "IsConnectedQuery",
                      "value": [
                        "union VeeamMalwareEvents_CL, VeeamSecurityComplianceAnalyzer_CL, VeeamAuthorizationEvents_CL, VeeamOneTriggeredAlarms_CL, VeeamCovewareFindings_CL, VeeamSessions_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(3d)"
                      ]
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "read and write permissions on the workspace are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      },
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                        "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                        "providerDisplayName": "Keys",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "action": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Microsoft.Web/sites permissions",
                        "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
                      },
                      {
                        "name": "Veeam Infrastructure Access",
                        "description": "Access to Veeam Backup & Replication REST API and Veeam ONE monitoring platform is required. This includes proper authentication credentials and network connectivity."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": ">**NOTE:** This connector uses Azure Functions to connect to Veeam APIs and pull data into Microsoft Sentinel custom tables. This may result in additional data ingestion costs. See the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
                    },
                    {
                      "description": "**STEP 1 - Select the deployment option for Veeam Data Connector and associated Azure Functions**\n\n>**IMPORTANT:** Before you deploy Veeam Data Connector, prepare Workspace Name (can be copied from the following).",
                      "instructions": [
                        {
                          "parameters": {
                            "fillWith": [
                              "WorkspaceName"
                            ],
                            "label": "Workspace Name"
                          },
                          "type": "CopyableLabel"
                        }
                      ]
                    },
                    {
                      "description": "Use this method for automated deployment of the Veeam data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2FAzure-Sentinel%2Fmaster%2FSolutions%2FVeeam%2FData%2520Connectors%2Fazuredeploy_Veeam_API_FunctionApp.json)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Microsoft Sentinel Workspace Name**. \n4. Click **Review + Create**, **Create**.",
                      "title": "Azure Resource Manager (ARM) Template"
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2023-04-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
                "contentId": "[variables('_dataConnectorContentId1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "contentKind": "DataConnector",
        "displayName": "Veeam Data Connector (using Azure Functions)",
        "contentProductId": "[variables('_dataConnectorcontentProductId1')]",
        "id": "[variables('_dataConnectorcontentProductId1')]",
        "version": "[variables('dataConnectorVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', last(split(variables('_dataConnectorId1'),'/'))))]",
      "dependsOn": [
        "[variables('_dataConnectorId1')]"
      ],
      "location": "[parameters('workspace-location')]",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentId1'))]",
        "contentId": "[variables('_dataConnectorContentId1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorVersion1')]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentId1'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "Veeam Data Connector (using Azure Functions)",
          "publisher": "Veeam",
          "descriptionMarkdown": "Veeam Data Connector allows you to ingest Veeam telemetry data from multiple custom tables into Microsoft Sentinel.\n\nThe connector supports integration with Veeam Backup & Replication, Veeam ONE and Coveware platforms to provide comprehensive monitoring and security analytics. The data is collected through Azure Functions and stored in custom Log Analytics tables with dedicated Data Collection Rules (DCR) and Data Collection Endpoints (DCE).\n\n**Custom Tables Included:**\n- **VeeamMalwareEvents_CL**: Malware detection events from Veeam Backup & Replication\n- **VeeamSecurityComplianceAnalyzer_CL**: Security & Compliance Analyzer results collected from Veeam backup infrastructure components\n- **VeeamAuthorizationEvents_CL**: Authorization and authentication events\n- **VeeamOneTriggeredAlarms_CL**: Triggered alarms from Veeam ONE servers\n- **VeeamCovewareFindings_CL**: Security findings from Coveware solution\n- **VeeamSessions_CL**: Veeam sessions",
          "graphQueries": [
            {
              "metricName": "All malware events",
              "legend": "VeeamMalwareEvents_CL",
              "baseQuery": "VeeamMalwareEvents_CL"
            },
            {
              "metricName": "Critical malware events",
              "legend": "VeeamMalwareEvents_CL",
              "baseQuery": "VeeamMalwareEvents_CL\n| where Severity == \"Critical\""
            },
            {
              "metricName": "Security & Compliance Analyzer results",
              "legend": "VeeamSecurityComplianceAnalyzer_CL",
              "baseQuery": "VeeamSecurityComplianceAnalyzer_CL"
            },
            {
              "metricName": "Veeam ONE alarms",
              "legend": "VeeamOneTriggeredAlarms_CL",
              "baseQuery": "VeeamOneTriggeredAlarms_CL"
            },
            {
              "metricName": "Authorization events",
              "legend": "VeeamAuthorizationEvents_CL",
              "baseQuery": "VeeamAuthorizationEvents_CL"
            },
            {
              "metricName": "Coveware findings",
              "legend": "VeeamCovewareFindings_CL",
              "baseQuery": "VeeamCovewareFindings_CL"
            },
            {
              "metricName": "Veeam sessions",
              "legend": "VeeamSessions_CL",
              "baseQuery": "VeeamSessions_CL"
            }
          ],
          "dataTypes": [
            {
              "name": "VeeamMalwareEvents_CL",
              "lastDataReceivedQuery": "VeeamMalwareEvents_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "VeeamSecurityComplianceAnalyzer_CL",
              "lastDataReceivedQuery": "VeeamSecurityComplianceAnalyzer_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "VeeamAuthorizationEvents_CL",
              "lastDataReceivedQuery": "VeeamAuthorizationEvents_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "VeeamOneTriggeredAlarms_CL",
              "lastDataReceivedQuery": "VeeamOneTriggeredAlarms_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "VeeamCovewareFindings_CL",
              "lastDataReceivedQuery": "VeeamCovewareFindings_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            },
            {
              "name": "VeeamSessions_CL",
              "lastDataReceivedQuery": "VeeamSessions_CL\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "union VeeamMalwareEvents_CL, VeeamSecurityComplianceAnalyzer_CL, VeeamAuthorizationEvents_CL, VeeamOneTriggeredAlarms_CL, VeeamCovewareFindings_CL, VeeamSessions_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(3d)"
              ]
            }
          ],
          "sampleQueries": "[variables('TemplateEmptyArray')]",
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "Veeam Infrastructure Access",
                "description": "Access to Veeam Backup & Replication REST API and Veeam ONE monitoring platform is required. This includes proper authentication credentials and network connectivity."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to Veeam APIs and pull data into Microsoft Sentinel custom tables. This may result in additional data ingestion costs. See the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) for details."
            },
            {
              "description": "**STEP 1 - Select the deployment option for Veeam Data Connector and associated Azure Functions**\n\n>**IMPORTANT:** Before you deploy Veeam Data Connector, prepare Workspace Name (can be copied from the following).",
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceName"
                    ],
                    "label": "Workspace Name"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the Veeam data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FAzure%2FAzure-Sentinel%2Fmaster%2FSolutions%2FVeeam%2FData%2520Connectors%2Fazuredeploy_Veeam_API_FunctionApp.json)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Microsoft Sentinel Workspace Name**. \n4. Click **Review + Create**, **Create**.",
              "title": "Azure Resource Manager (ARM) Template"
            }
          ],
          "id": "[variables('_uiConfigId1')]",
          "additionalRequirementBanner": "The following queries and workbooks require a parser based on Kusto to work properly. To use **VeeamSyslogEventsV2** alias for Kusto functions in queries and workbooks, see [this instruction](https://aka.ms/sentinel-veeam-function) "
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-ChangeCollectionTime Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "type": "string",
              "defaultValue": "Veeam-ChangeCollectionTime",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Azure subscription ID"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Name of the resource group containing the Logic Apps to be updated"
              }
            },
            "environmentResourceManagerUrl": {
              "type": "string",
              "defaultValue": "[environment().resourceManager]",
              "metadata": {
                "description": "Resource Manager URL for the Azure environment"
              }
            },
            "logicAppsApiVersion": {
              "type": "string",
              "defaultValue": "2019-05-01",
              "metadata": {
                "description": "API version to use for Logic Apps operations"
              }
            },
            "watchlistName": {
              "type": "string",
              "defaultValue": "collection_schedule_settings",
              "metadata": {
                "description": "Name of the watchlist containing collection schedule settings"
              }
            },
            "defaultRecurrenceInterval": {
              "type": "string",
              "defaultValue": "12",
              "metadata": {
                "description": "Default recurrence interval to use when not specified in watchlist"
              }
            },
            "defaultRecurrenceFrequency": {
              "type": "string",
              "defaultValue": "Hour",
              "metadata": {
                "description": "Default recurrence frequency to use when not specified in watchlist"
              }
            }
          },
          "variables": {
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2018-07-01-preview",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2019-05-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-ChangeCollectionTime",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "watchlistName": {
                      "defaultValue": "[[parameters('watchlistName')]",
                      "type": "String"
                    },
                    "environmentResourceManagerUrl": {
                      "defaultValue": "[[parameters('environmentResourceManagerUrl')]",
                      "type": "String"
                    },
                    "logicAppsApiVersion": {
                      "defaultValue": "[[parameters('logicAppsApiVersion')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "recurrenceInterval": {
                              "default": "[[parameters('defaultRecurrenceInterval')]"
                            },
                            "recurrenceFrequency": {
                              "default": "[[parameters('defaultRecurrenceFrequency')]"
                            }
                          }
                        }
                      }
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_all_Collection_Times": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent(parameters('watchlistName'))}/watchlistItems"
                      }
                    },
                    "Parse_settings": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_all_Collection_Times')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array"
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_all_Collection_Times": [
                          "Succeeded"
                        ]
                      }
                    },
                    "For_each": {
                      "type": "Foreach",
                      "foreach": "@body('Parse_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_setting": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.watchlistItemType": {
                                  "type": "string"
                                },
                                "properties.watchlistItemId": {
                                  "type": "string"
                                },
                                "properties.tenantId": {
                                  "type": "string"
                                },
                                "properties.isDeleted": {
                                  "type": "boolean"
                                },
                                "properties.created": {
                                  "type": "string"
                                },
                                "properties.updated": {
                                  "type": "string"
                                },
                                "properties.createdBy": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.updatedBy": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "CollectionPlaybookName": {
                                      "type": "string"
                                    },
                                    "RecurrenceInterval": {
                                      "type": "string"
                                    },
                                    "TimeUnit": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.entityMapping": {
                                  "type": "object"
                                },
                                "etag": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "systemData": {
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "type": "string"
                                    },
                                    "lastModifiedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Get_Current_Workflow_Definition": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@concat(parameters('environmentResourceManagerUrl'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Logic/workflows/', body('Parse_setting')?['properties.itemsKeyValue']?['CollectionPlaybookName'], '?api-version=', parameters('logicAppsApiVersion'))",
                            "method": "GET",
                            "authentication": {
                              "type": "ManagedServiceIdentity"
                            }
                          },
                          "runAfter": {
                            "Parse_setting": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Parse_Workflow_Definition": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_Current_Workflow_Definition')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties": {
                                  "type": "object",
                                  "properties": {
                                    "provisioningState": {
                                      "type": "string"
                                    },
                                    "createdTime": {
                                      "type": "string"
                                    },
                                    "changedTime": {
                                      "type": "string"
                                    },
                                    "state": {
                                      "type": "string"
                                    },
                                    "version": {
                                      "type": "string"
                                    },
                                    "accessEndpoint": {
                                      "type": "string"
                                    },
                                    "definition": {
                                      "type": "object",
                                      "properties": {
                                        "$schema": {
                                          "type": "string"
                                        },
                                        "contentVersion": {
                                          "type": "string"
                                        },
                                        "parameters": {
                                          "type": "object"
                                        },
                                        "triggers": {
                                          "type": "object"
                                        },
                                        "actions": {
                                          "type": "object"
                                        },
                                        "outputs": {
                                          "type": "object"
                                        }
                                      }
                                    },
                                    "parameters": {
                                      "type": "object"
                                    },
                                    "endpointsConfiguration": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "location": {
                                  "type": "string"
                                },
                                "tags": {
                                  "type": "object"
                                },
                                "identity": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string"
                                    },
                                    "principalId": {
                                      "type": "string"
                                    },
                                    "tenantId": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Get_Current_Workflow_Definition": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Compose_Updated_Definition": {
                          "type": "Compose",
                          "inputs": {
                            "location": "@body('Parse_Workflow_Definition')?['location']",
                            "identity": "@body('Parse_Workflow_Definition')?['identity']",
                            "properties": {
                              "state": "Enabled",
                              "definition": {
                                "$schema": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['$schema']",
                                "contentVersion": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['contentVersion']",
                                "parameters": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['parameters']",
                                "triggers": {
                                  "Every_@{int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))}_@{coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')}": {
                                    "recurrence": {
                                      "interval": "@int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))",
                                      "frequency": "@coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')"
                                    },
                                    "evaluatedRecurrence": {
                                      "interval": "@int(coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['RecurrenceInterval'], '12'))",
                                      "frequency": "@coalesce(body('Parse_setting')?['properties.itemsKeyValue']?['TimeUnit'], 'Hour')"
                                    },
                                    "type": "Recurrence"
                                  }
                                },
                                "actions": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['actions']",
                                "outputs": "@body('Parse_Workflow_Definition')?['properties']?['definition']?['outputs']"
                              },
                              "parameters": "@body('Parse_Workflow_Definition')?['properties']?['parameters']"
                            }
                          },
                          "runAfter": {
                            "Parse_Workflow_Definition": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Update_Events_Workflow": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@concat(parameters('environmentResourceManagerUrl'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Logic/workflows/', body('Parse_setting')?['properties.itemsKeyValue']?['CollectionPlaybookName'], '?api-version=', parameters('logicAppsApiVersion'))",
                            "method": "PUT",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "body": "@outputs('Compose_Updated_Definition')",
                            "authentication": {
                              "type": "ManagedServiceIdentity"
                            }
                          },
                          "runAfter": {
                            "Compose_Updated_Definition": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_settings": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Response_Success": {
                      "type": "Response",
                      "inputs": {
                        "statusCode": 200,
                        "body": {
                          "message": "Successfully updated collection schedule",
                          "processedWorkflows": "@length(body('Parse_settings')?['properties']?['watchlistItems'])"
                        }
                      },
                      "runAfter": {
                        "For_each": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Response_Error": {
                      "type": "Response",
                      "inputs": {
                        "statusCode": 500,
                        "body": {
                          "message": "Failed to update collection schedule",
                          "error": "@actions('For_each')?['error']"
                        }
                      },
                      "runAfter": {
                        "For_each": [
                          "Failed"
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "5498632779764501884"
            },
            "title": "Veeam-ChangeCollectionTime",
            "description": "This Microsoft Sentinel playbook adjusts the recurrence intervals for Veeam collection playbooks based on settings in the collection_schedule_settings watchlist.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group and Log Analytics workspace.",
              "4. Collection schedule settings watchlist configured in Microsoft Sentinel.",
              "5. Logic App Contributor permissions for managing other workflows."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Schedule",
              "Collection",
              "Configuration"
            ],
            "lastUpdateTime": "2025-08-20T00:00:01Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Assign the Logic App Contributor role to the Logic App's managed identity on the Resource Group.",
              "3. Configure the collection_schedule_settings watchlist with required schedule data."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-ChangeCollectionTime",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectVeeamAuthorizationEvents Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectVeeamAuthorizationEvents",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "resourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "string",
              "metadata": {
                "description": "Name of the resource group containing the Microsoft Sentinel workspace"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-CollectVeeamAuthorizationEvents",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "VbrHostName": {
                      "defaultValue": "vbr1",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_24_hours": {
                      "recurrence": {
                        "interval": 24,
                        "frequency": "Hour"
                      },
                      "evaluatedRecurrence": {
                        "interval": 24,
                        "frequency": "Hour"
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      }
                    },
                    "Parse_VBR_settings": {
                      "runAfter": {
                        "Watchlists_-_Get_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Authorization Events": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_VBR": {
                      "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_VBR": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VBR')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Authorization Events": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_authorization_events_collection_is_enabled": {
                          "actions": {
                            "Collect_Authorization_Events_into_VeeamAuthorizationEventsTable_CL": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Veeam Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetAllAuthorizationEventsAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VBR": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_baseUrl": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Base URL']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Collect Authorization Events']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_VBR_settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectVeeamAuthorizationEvents",
            "description": "This Microsoft Sentinel playbook automatically collects Veeam authorization events Veeam Backup & Replication servers on schedule. The playbook gets Veeam Backup & Replication settings from watchlist and calls the GetAllAuthorizationEventsAsync function for each enabled server, ingesting the data into custom tables.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. VBR Settings watchlist configured in Microsoft Sentinel.",
              "6. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Authorization",
              "Collection"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the VBR Settings watchlist is properly configured with the 'Collect Authorization Events' flag set to true on servers from which you want to collect data."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectVeeamAuthorizationEvents",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectSecurityComplianceAnalyzerResult Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectSecurityComplianceAnalyzerResult",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "resourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "string",
              "metadata": {
                "description": "Name of the resource group containing the Microsoft Sentinel workspace"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-CollectSecurityComplianceAnalyzerResult",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "VbrHostName": {
                      "defaultValue": "vbr1",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_24_hours": {
                      "recurrence": {
                        "interval": 24,
                        "frequency": "Hour"
                      },
                      "evaluatedRecurrence": {
                        "interval": 24,
                        "frequency": "Hour"
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      }
                    },
                    "Parse_VBR_settings": {
                      "runAfter": {
                        "Watchlists_-_Get_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Security and Compliance Analyzer Results": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_VBR": {
                      "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_VBR": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VBR')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Security and Compliance Analyzer Results": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_best_practice_analysis_collection_is_enabled": {
                          "actions": {
                            "Collect_Best_Practice_Analysis_into_VeeamBestPracticeAnalysisTable_CL": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Veeam Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetSecurityComplianceAnalyzerResultsAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VBR": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_baseUrl": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Base URL']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_VBR')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_VBR_settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectSecurityComplianceAnalyzerResult",
            "description": "A Microsoft Sentinel playbook that automatically collects Veeam Security Compliance Analyzer results from Veeam Backup & Replication servers on schedule. The playbook gets Veeam Backup & Replication settings from watchlist and calls the GetSecurityComplianceAnalyzerResults function for each enabled server, ingesting the data into custom tables.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. VBR Settings watchlist configured in Microsoft Sentinel.",
              "6. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "BestPractice",
              "Analysis",
              "Collection"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the VBR Settings watchlist is properly configured with the 'Collect Security and Compliance Analyzer Results' flag set to true on servers from which you want to collect data."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectSecurityComplianceAnalyzerResult",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectMalwareEvents Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectMalwareEvents",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "resourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "string",
              "metadata": {
                "description": "Name of the resource group containing the Microsoft Sentinel workspace"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-CollectMalwareEvents",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_1_day": {
                      "recurrence": {
                        "interval": 1,
                        "frequency": "Day"
                      },
                      "evaluatedRecurrence": {
                        "interval": 1,
                        "frequency": "Day"
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      }
                    },
                    "Parse_VBR_settings": {
                      "runAfter": {
                        "Watchlists_-_Get_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Malware Events": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_VBR_server": {
                      "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_VBR_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VBR_server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Malware Events": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_malware_event_collection_is_enabled": {
                          "actions": {
                            "Collect_Malware_Events_into_VeeamMalwareEventsTable_CL": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetAllMalwareEventsAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VBR_server": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_baseUrl": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Base URL']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_VBR_settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectMalwareEvents",
            "description": "A Microsoft Sentinel playbook that automatically collects malware events from Veeam Backup & Replication servers on a schedule. The playbook gets Veeam Backup & Replication settings from watchlist and calls the GetMalwareEvents function for each enabled server, ingesting the data into custom tables.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. VBR Settings watchlist configured in Microsoft Sentinel.",
              "6. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Malware",
              "Collection"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the VBR Settings watchlist is properly configured with the 'Collect Malware Events' flag set to true on servers from which you want to collect data."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectMalwareEvents",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectVeeamONEAlarms Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectVeeamONEAlarms",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "resourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "string",
              "metadata": {
                "description": "Name of the resource group containing the Microsoft Sentinel workspace"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-CollectVeeamONEAlarms",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "VoneHostName": {
                      "defaultValue": "vone1",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_1_day": {
                      "recurrence": {
                        "interval": 1,
                        "frequency": "Day"
                      },
                      "evaluatedRecurrence": {
                        "interval": 1,
                        "frequency": "Day"
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_Veeam_ONE_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vone_settings')}/watchlistItems"
                      }
                    },
                    "Parse_Veeam_ONE_settings": {
                      "runAfter": {
                        "Watchlists_-_Get_Veeam_ONE_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_Veeam_ONE_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Alarms": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_Veeam_ONE_server": {
                      "foreach": "@body('Parse_Veeam_ONE_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_Veeam_ONE_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_Veeam_ONE_server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Alarms": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_alarm_collection_is_enabled": {
                          "actions": {
                            "Collect_Vone_Alarms_into_VoneAlarmsTable_CL": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "voneHostName": "@body('Parse_current_Veeam_ONE_server')?['properties.itemsKeyValue']?['Veeam Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetAllTriggeredAlarmsAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_Veeam_ONE_server": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_baseUrl": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_Veeam_ONE_server')?['properties.itemsKeyValue']?['Base URL']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_Veeam_ONE_server')?['properties.itemsKeyValue']?['Collect Alarms']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_Veeam_ONE_settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectVeeamONEAlarms",
            "description": "This Microsoft Sentinel playbook automatically collects Veeam ONE alarms on a schedule. Retrieves Veeam ONE settings from the watchlist and calls the GetVoneAlarms function for each enabled server, ingesting the data into custom tables.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Veeam ONE Settings watchlist configured in Microsoft Sentinel.",
              "6. Hybrid Connection and Key Vault secrets configured for each Veeam ONE Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "VeeamONE",
              "Alarms",
              "Collection"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the Veeam ONE Settings watchlist is properly configured with the 'Collect Alarms' flag set to true on servers from which you want to collect data."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectVeeamONEAlarms",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectCovewareFindings Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectCovewareFindings",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "resourceGroupName": {
              "defaultValue": "[resourceGroup().name]",
              "type": "string",
              "metadata": {
                "description": "Name of the resource group containing the Microsoft Sentinel workspace"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-CollectCovewareFindings",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[subscription().subscriptionId]",
                      "type": "String"
                    },
                    "Coveware Server Name": {
                      "defaultValue": "CovewareServer01",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_6_hours": {
                      "recurrence": {
                        "interval": 6,
                        "frequency": "Hour"
                      },
                      "evaluatedRecurrence": {
                        "interval": 6,
                        "frequency": "Hour"
                      },
                      "type": "Recurrence"
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_Coveware_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('coveware_settings')}/watchlistItems"
                      }
                    },
                    "Parse_Coveware_Settings": {
                      "runAfter": {
                        "Watchlists_-_Get_Coveware_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_Coveware_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Coveware Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Coveware Findings": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_Coveware_Server": {
                      "foreach": "@body('Parse_Coveware_Settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_Coveware_Server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_Coveware_Server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Coveware Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Coveware Findings": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_Coveware_findings_collection_is_enabled": {
                          "actions": {
                            "Collect_Coveware_Findings_into_CovewareFindingsTable_CL": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "covewareServerName": "@body('Parse_current_Coveware_Server')?['properties.itemsKeyValue']?['Coveware Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetAllCovewareFindingsAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_Coveware_Server": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_baseUrl": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_Coveware_Server')?['properties.itemsKeyValue']?['Base URL']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_Coveware_Server')?['properties.itemsKeyValue']?['Collect Coveware Findings']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_Coveware_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectCovewareFindings",
            "description": "This Microsoft Sentinel playbook automatically collects Coveware findings on a schedule. Retrieves Coveware settings from watchlist and calls the GetCovewareFindings function for each enabled server, ingesting the data into custom tables.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Coveware Settings watchlist configured in Microsoft Sentinel."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Coveware",
              "Collection"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the Coveware Settings watchlist is properly configured with 'Collect Coveware Findings' flag set to true."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId6')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectCovewareFindings",
        "contentProductId": "[variables('_playbookcontentProductId6')]",
        "id": "[variables('_playbookcontentProductId6')]",
        "version": "[variables('playbookVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-CollectConfigurationBackups Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-CollectConfigurationBackups",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Subscription ID where resources are deployed"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Resource group name where Function App is deployed"
              }
            },
            "AzureSentinelConnectionName": {
              "defaultValue": "azuresentinel-connection",
              "type": "string",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId(parameters('subscriptionId'), parameters('resourceGroupName'), 'Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-StartConfigurationBackup",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "workspaceId": {
                      "defaultValue": "[[parameters('workspaceId')]",
                      "type": "String"
                    },
                    "resourceGroupName": {
                      "defaultValue": "[[parameters('resourceGroupName')]",
                      "type": "String"
                    },
                    "subscriptionId": {
                      "defaultValue": "[[parameters('subscriptionId')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "Every_24_Hours": {
                      "type": "Recurrence",
                      "recurrence": {
                        "interval": 24,
                        "frequency": "Hour"
                      }
                    }
                  },
                  "actions": {
                    "Watchlists_-_Get_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      }
                    },
                    "Parse_VBR_settings": {
                      "runAfter": {
                        "Watchlists_-_Get_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Configuration Backups": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "For_each_VBR_server": {
                      "foreach": "@body('Parse_VBR_settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_VBR_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VBR_server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Configuration Backups": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "If_configuration_backup_collection_is_enabled": {
                          "actions": {
                            "StartConfigurationBackupAsync": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/StartConfigurationBackupAsync')]"
                                }
                              }
                            },
                            "Parse_sessionId": {
                              "runAfter": {
                                "StartConfigurationBackupAsync": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@outputs('StartConfigurationBackupAsync')",
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "statusCode": {
                                      "type": "integer"
                                    },
                                    "headers": {
                                      "type": "object",
                                      "properties": {
                                        "Date": {
                                          "type": "string"
                                        },
                                        "Transfer-Encoding": {
                                          "type": "string"
                                        },
                                        "Strict-Transport-Security": {
                                          "type": "string"
                                        },
                                        "x-ms-middleware-request-id": {
                                          "type": "string"
                                        },
                                        "Content-Type": {
                                          "type": "string"
                                        },
                                        "Content-Length": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "body": {
                                      "type": "object",
                                      "properties": {
                                        "sessionType": {
                                          "type": "integer"
                                        },
                                        "state": {
                                          "type": "integer"
                                        },
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "jobId": {
                                          "type": "string"
                                        },
                                        "creationTime": {
                                          "type": "string"
                                        },
                                        "progressPercent": {
                                          "type": "integer"
                                        },
                                        "result": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "integer"
                                            },
                                            "message": {
                                              "type": "string"
                                            },
                                            "isCanceled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "usn": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "Until_state_is_not_stopped": {
                              "actions": {
                                "GetSession": {
                                  "type": "Function",
                                  "inputs": {
                                    "queries": {
                                      "vbrHostName": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']",
                                      "sessionId": "@body('Parse_sessionId')?['body']?['id']"
                                    },
                                    "function": {
                                      "id": "[[concat(variables('functionAppId'), '/functions/GetSessionAsync')]"
                                    }
                                  }
                                },
                                "Parse_session": {
                                  "runAfter": {
                                    "GetSession": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@outputs('GetSession')",
                                    "schema": {
                                      "type": "object",
                                      "properties": {
                                        "statusCode": {
                                          "type": "integer"
                                        },
                                        "headers": {
                                          "type": "object",
                                          "properties": {
                                            "Date": {
                                              "type": "string"
                                            },
                                            "Transfer-Encoding": {
                                              "type": "string"
                                            },
                                            "Request-Context": {
                                              "type": "string"
                                            },
                                            "Content-Type": {
                                              "type": "string"
                                            },
                                            "Content-Length": {
                                              "type": "string"
                                            }
                                          }
                                        },
                                        "body": {
                                          "type": "object",
                                          "properties": {
                                            "sessionType": {
                                              "type": "integer"
                                            },
                                            "state": {
                                              "type": "integer"
                                            },
                                            "id": {
                                              "type": "string"
                                            },
                                            "name": {
                                              "type": "string"
                                            },
                                            "jobId": {
                                              "type": "string"
                                            },
                                            "creationTime": {
                                              "type": "string"
                                            },
                                            "progressPercent": {
                                              "type": "integer"
                                            },
                                            "result": {
                                              "type": "object",
                                              "properties": {
                                                "result": {
                                                  "type": "integer"
                                                },
                                                "message": {
                                                  "type": "string"
                                                },
                                                "isCanceled": {
                                                  "type": "boolean"
                                                }
                                              }
                                            },
                                            "usn": {
                                              "type": "integer"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "Delay": {
                                  "runAfter": {
                                    "Parse_session": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Wait",
                                  "inputs": {
                                    "interval": {
                                      "count": 1,
                                      "unit": "Minute"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "Parse_sessionId": [
                                  "Succeeded"
                                ]
                              },
                              "expression": "@equals(body('Parse_session')?['body']?['state'],1)",
                              "limit": {
                                "timeout": "PT30M"
                              },
                              "type": "Until"
                            },
                            "IngestSessionDataBySessionIdAsync": {
                              "runAfter": {
                                "Until_state_is_not_stopped": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']",
                                  "sessionId": "@body('Parse_sessionId')?['body']?['id']"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/IngestSessionDataBySessionIdAsync')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VBR_server": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Print_server_info": {
                                "type": "Compose",
                                "inputs": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']"
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups']",
                                  "true"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "Parse_VBR_settings": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-CollectConfigurationBackups",
            "description": "A Microsoft Sentinel playbook that automatically runs configuration backup sessions on Veeam Backup & Replication servers on schedule. The playbook gets Veeam Backup & Replication settings from the watchlist, runs the configuration backup session, and collects the session result.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. VBR Settings watchlist configured in Microsoft Sentinel.",
              "6. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Configuration",
              "Backup",
              "Scheduled"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Ensure the VBR Settings watchlist is properly configured with the 'Collect Configuration Backups' flag set to true on servers from which you want to collect data."
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8701067040678761767"
            },
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId7')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-CollectConfigurationBackups",
        "contentProductId": "[variables('_playbookcontentProductId7')]",
        "id": "[variables('_playbookcontentProductId7')]",
        "version": "[variables('playbookVersion7')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName8')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-FindCleanRestorePoints Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion8')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-FindCleanRestorePoints",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-FindCleanRestorePoints",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Parse_custom_fields": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Parse_custom_fields')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "VbrHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineDisplayName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineUuid": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "BackupObjectId": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "For_each_alert": {
                          "foreach": "@outputs('Parse_JSON')?['body']?['VbrHostName']",
                          "actions": {
                            "Set_variable_VbrHostName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrHostName",
                                "value": "@items('For_each_alert')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_alert_2": {
                          "foreach": "@outputs('Parse_JSON')?['body']?['MachineDisplayName']",
                          "actions": {
                            "Set_variable_MachineDisplayName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "MachineDisplayName",
                                "value": "@item()"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_alert": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_MachineDisplayName": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_VbrHostName": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrHostName",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "GetLastCleanRestorePoint": {
                      "runAfter": {
                        "Parse_custom_fields": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@variables('VbrHostName')",
                          "VmName": "@variables('MachineDisplayName')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/GetCleanRestorePointsAsync')]"
                        }
                      }
                    },
                    "Are_there_any_clean_restore_points": {
                      "actions": {
                        "Parse_restore_point": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('GetLastCleanRestorePoint')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "platformName": {
                                  "type": "integer"
                                },
                                "type": {
                                  "type": "integer"
                                },
                                "malwareStatus": {
                                  "type": "integer"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "platformId": {
                                  "type": "string"
                                },
                                "creationTime": {
                                  "type": "string"
                                },
                                "backupId": {
                                  "type": "string"
                                },
                                "sessionId": {
                                  "type": "string"
                                },
                                "allowedOperations": {
                                  "type": "array",
                                  "items": {
                                    "type": "integer"
                                  }
                                },
                                "backupFileId": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Add_last_restore_point_comment": {
                          "runAfter": {
                            "Parse_restore_point": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p class=\"editor-paragraph\"><span style=\"background-color: rgb(255, 255, 255);\">Last clean restore point was created on </span>@{variables('VbrHostName')}<span style=\"background-color: rgb(255, 255, 255);\"> on </span>@{body('Parse_restore_point')?['creationTime']}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "GetLastCleanRestorePoint": [
                          "Succeeded",
                          "TimedOut",
                          "Skipped",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_no_restore_points_comment": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p class=\"editor-paragraph\"><span style=\"background-color: rgb(255, 255, 255);\">No restore points were found on </span>@{variables('VbrHostName')}</p>"
                              },
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@outputs('GetLastCleanRestorePoint')?['statusCode']",
                                404
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Initialize_MachineDisplayName": {
                      "runAfter": {
                        "Initialize_VbrHostName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "MachineDisplayName",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId8'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId8')]",
                "contentId": "[variables('_playbookContentId8')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion8')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-FindCleanRestorePoints",
            "description": "A Microsoft Sentinel playbook with the incident trigger, that finds the last clean restore point for VM, specified in the incident by VbrHostName and MachineDisplayName. If finds a clean restore point, adds its date as incident's comment, and if a clean restore point is not found, adds a comment indicating that.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Backup",
              "RestorePoints",
              "Recovery"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8701067040678761767"
            },
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId8')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-FindCleanRestorePoints",
        "contentProductId": "[variables('_playbookcontentProductId8')]",
        "id": "[variables('_playbookcontentProductId8')]",
        "version": "[variables('playbookVersion8')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName9')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-PerformScanBackup Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion9')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-PerformScanBackup",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-PerformScanBackup",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "IsYara": {
                      "defaultValue": true,
                      "type": "Bool"
                    },
                    "TimeRange": {
                      "defaultValue": "1w1d",
                      "type": "String"
                    },
                    "VbrHostName": {
                      "defaultValue": "vbr1",
                      "type": "String"
                    },
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@listCallbackUrl()"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Parse_sessionId": {
                      "runAfter": {
                        "Add_comment_to_incident": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@outputs('StartBackupScanAV')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "statusCode": {
                              "type": "integer"
                            },
                            "headers": {
                              "type": "object",
                              "properties": {
                                "Date": {
                                  "type": "string"
                                },
                                "Transfer-Encoding": {
                                  "type": "string"
                                },
                                "Request-Context": {
                                  "type": "string"
                                },
                                "Content-Type": {
                                  "type": "string"
                                },
                                "Content-Length": {
                                  "type": "string"
                                }
                              }
                            },
                            "body": {
                              "type": "object",
                              "properties": {
                                "sessionId": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Until_state_is_not_Stopped": {
                      "actions": {
                        "Parse_session": {
                          "runAfter": {
                            "GetSession_": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('GetSession_')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "sessionType": {
                                  "type": "integer"
                                },
                                "state": {
                                  "type": "integer"
                                },
                                "platformName": {
                                  "type": "integer"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "jobId": {
                                  "type": "string"
                                },
                                "creationTime": {
                                  "type": "string"
                                },
                                "progressPercent": {
                                  "type": "integer"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "result": {
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "isCanceled": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "usn": {
                                  "type": "integer"
                                },
                                "platformId": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "GetSession_": {
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@variables('VbrHostName')",
                              "sessionId": "@body('Parse_sessionId')?['body']?['sessionId']"
                            },
                            "function": {
                              "id": "[[format('{0}/functions/GetSessionAsync', variables('functionAppId'))]"
                            }
                          }
                        },
                        "Delay": {
                          "runAfter": {
                            "Parse_session": [
                              "Succeeded"
                            ]
                          },
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 3,
                              "unit": "Minute"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_sessionId": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(body('Parse_session')?['state'],1)",
                      "limit": {
                        "timeout": "PT3H"
                      },
                      "type": "Until"
                    },
                    "Get_variables_from_custom_fields": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_custom_fields": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Get_variables_from_custom_fields')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "VbrHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineDisplayName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineUuid": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "BackupObjectId": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Get_VbrHostName": {
                          "foreach": "@outputs('Parse_custom_fields')?['body']?['VbrHostName']",
                          "actions": {
                            "Set_VbrHostName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrHostName",
                                "value": "@items('Get_VbrHostName')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_custom_fields": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_BackupObjectId": {
                          "foreach": "@outputs('Parse_custom_fields')?['body']?['BackupObjectId']",
                          "actions": {
                            "Set_BackupObjectId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "BackupObjectId",
                                "value": "@items('Get_BackupObjectId')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_VbrHostName": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_MachineDispalyName": {
                          "foreach": "@body('Parse_custom_fields')?['MachineDisplayName']",
                          "actions": {
                            "Set_MachineDispalyName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "MachineDisplayName",
                                "value": "@items('Get_MachineDispalyName')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_BackupObjectId": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_MachineDisplayName": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_VbrHostName": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrHostName",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "StartBackupScanAV": {
                      "runAfter": {
                        "Get_variables_from_custom_fields": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "VbrHostName": "@variables('VbrHostName')",
                          "backupObjectId": "@variables('BackupObjectId')",
                          "vmName": "@variables('MachineDisplayName')"
                        },
                        "function": {
                          "id": "[[format('{0}/functions/StartBackupScanAV', variables('functionAppId'))]"
                        }
                      }
                    },
                    "Initialize_BackupObjectId": {
                      "runAfter": {
                        "Initialize_VbrHostName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "BackupObjectId",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Initialize_MachineDisplayName": {
                      "runAfter": {
                        "Initialize_BackupObjectId": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "MachineDisplayName",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Add_comment_to_incident_(V3)": {
                      "runAfter": {
                        "Result": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p class=\"editor-paragraph\">AV scan for @{variables('MachineDisplayName')} has finished. Details: @{body('Parse_session')?['result']?['message']}.</p><p class=\"editor-paragraph\"><i><em class=\"editor-text-italic\">Incident has been resolved, so you can close it.</em></i></p>"
                        },
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Result": {
                      "runAfter": {
                        "Until_state_is_not_Stopped": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@body('Parse_session')?['result']"
                    },
                    "Add_comment_to_incident": {
                      "runAfter": {
                        "StartBackupScanAV": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p class=\"editor-paragraph\">AV scan for @{variables('MachineDisplayName')} has been started.</p>"
                        },
                        "path": "/Incidents/Comment"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuresentinel', subscription().subscriptionId, variables('workspace-location-inline'))]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId9'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId9')]",
                "contentId": "[variables('_playbookContentId9')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion9')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-PerformScanBackup",
            "description": "This Microsoft Sentinel playbook with an incident trigger performs antivirus scan on Veeam backup using VbrHostName, BackupObjectId, MachineDisplayName custom incident fields to identify backup. Indicates results as incident comments.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Backup",
              "Antivirus",
              "Scan"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId9')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-PerformScanBackup",
        "contentProductId": "[variables('_playbookcontentProductId9')]",
        "id": "[variables('_playbookcontentProductId9')]",
        "version": "[variables('playbookVersion9')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName10')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-PerformInstantVMRecovery Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion10')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-PerformInstantVMRecovery",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-PerformInstantVMRecovery",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.1.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@listCallbackUrl()"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Initialize_VbrHostName": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrHostName",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Initialize_MachineDisplayName": {
                      "runAfter": {
                        "Initialize_VbrHostName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "MachineDisplayName",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Get_variables_from_custom_fields": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_custom_fields": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Get_variables_from_custom_fields')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "VbrHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineDisplayName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineUuid": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "BackupObjectId": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Get_VbrHostName": {
                          "foreach": "@outputs('Parse_custom_fields')?['body']?['VbrHostName']",
                          "actions": {
                            "Set_VbrHostName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrHostName",
                                "value": "@items('Get_VbrHostName')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_custom_fields": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_MachineDispalyName": {
                          "foreach": "@body('Parse_custom_fields')?['MachineDisplayName']",
                          "actions": {
                            "Set_MachineDispalyName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "MachineDisplayName",
                                "value": "@items('Get_MachineDispalyName')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_VbrHostName": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_MachineDisplayName": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "GetLastCleanRestorePointForVMAsync": {
                      "runAfter": {
                        "Get_variables_from_custom_fields": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "VbrHostName": "@variables('VbrHostName')",
                          "vmName": "@variables('MachineDisplayName')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/GetCleanRestorePointsAsync')]"
                        }
                      }
                    },
                    "Does_clean_restore_point_exist": {
                      "runAfter": {
                        "GetLastCleanRestorePointForVMAsync": [
                          "Succeeded",
                          "TimedOut",
                          "Skipped",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_comment": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p class=\"editor-paragraph\">No clean restore points were found for @{variables('MachineDisplayName')}.</p>"
                              },
                              "path": "/Incidents/Comment"
                            }
                          },
                          "Terminate": {
                            "runAfter": {
                              "Add_comment": [
                                "Succeeded"
                              ]
                            },
                            "type": "Terminate",
                            "inputs": {
                              "runStatus": "Cancelled"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@outputs('GetLastCleanRestorePointForVMAsync')?['statusCode']",
                                404
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Parse_restorePointId": {
                      "runAfter": {
                        "Does_clean_restore_point_exist": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('GetLastCleanRestorePointForVMAsync')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "platformName": {
                              "type": "integer"
                            },
                            "type": {
                              "type": "integer"
                            },
                            "malwareStatus": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "platformId": {
                              "type": "string"
                            },
                            "creationTime": {
                              "type": "string"
                            },
                            "backupId": {
                              "type": "string"
                            },
                            "sessionId": {
                              "type": "string"
                            },
                            "allowedOperations": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            },
                            "backupFileId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "StartInstantVMRecoveryAsync": {
                      "runAfter": {
                        "Parse_restorePointId": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "VbrHostName": "@variables('VbrHostName')",
                          "restorePointId": "@body('Parse_restorePointId')?['id']"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/StartInstantVMRecoveryAsync')]"
                        }
                      }
                    },
                    "Parse_sessionId": {
                      "runAfter": {
                        "StartInstantVMRecoveryAsync": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('StartInstantVMRecoveryAsync')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "data": {
                              "type": "object",
                              "properties": {
                                "sessionType": {
                                  "type": "integer"
                                },
                                "state": {
                                  "type": "integer"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "jobId": {
                                  "type": "string"
                                },
                                "creationTime": {
                                  "type": "string"
                                },
                                "progressPercent": {
                                  "type": "integer"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "result": {
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "usn": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "Add_comment_to_incident": {
                      "runAfter": {
                        "Parse_sessionId": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p class=\"editor-paragraph\">Instant VM recovery has started for @{variables('MachineDisplayName')} and restore point @{body('Parse_restorePointId')?['id']}.</p>"
                        },
                        "path": "/Incidents/Comment"
                      }
                    },
                    "Until_state_is_not_Stopped": {
                      "actions": {
                        "GetSession_": {
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@variables('VbrHostName')",
                              "sessionId": "@body('Parse_sessionId')?['data']?['id']"
                            },
                            "function": {
                              "id": "[[concat(variables('functionAppId'), '/functions/GetSessionAsync')]"
                            }
                          }
                        },
                        "Parse_session": {
                          "runAfter": {
                            "GetSession_": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('GetSession_')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "data": {
                                  "type": "object",
                                  "properties": {
                                    "sessionType": {
                                      "type": "integer"
                                    },
                                    "state": {
                                      "type": "integer"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "jobId": {
                                      "type": "string"
                                    },
                                    "creationTime": {
                                      "type": "string"
                                    },
                                    "progressPercent": {
                                      "type": "integer"
                                    },
                                    "result": {
                                      "type": "object",
                                      "properties": {
                                        "result": {
                                          "type": "integer"
                                        },
                                        "message": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "usn": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Delay": {
                          "runAfter": {
                            "Parse_session": [
                              "Succeeded"
                            ]
                          },
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 3,
                              "unit": "Minute"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Add_comment_to_incident": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(body('Parse_session')?['state'],1)",
                      "limit": {
                        "timeout": "PT3H"
                      },
                      "type": "Until"
                    },
                    "Result": {
                      "runAfter": {
                        "Until_state_is_not_Stopped": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@body('Parse_session')?['result']"
                    },
                    "Add_comment_to_incident_(V3)": {
                      "runAfter": {
                        "Result": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p class=\"editor-paragraph\">Instant VM recovery for @{variables('MachineDisplayName')} has finished. Details: @{body('Parse_session')?['result']}.</p><br>"
                        },
                        "path": "/Incidents/Comment"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[format('/subscriptions/{0}/providers/Microsoft.Web/locations/{1}/managedApis/azuresentinel', subscription().subscriptionId, variables('workspace-location-inline'))]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId10'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId10')]",
                "contentId": "[variables('_playbookContentId10')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion10')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-PerformInstantVMRecovery",
            "description": "This Microsoft Sentinel playbook performs instant VM recovery on the vm specified by MachineDisplayName custom field of Microsoft Sentinel's incident custom fields. The playbook automatically finds the latest clean restore point, initiates the instant recovery monitor for its state and indicates results as incident comments.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Security",
              "Veeam",
              "Recovery",
              "Incident Response"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId10')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-PerformInstantVMRecovery",
        "contentProductId": "[variables('_playbookcontentProductId10')]",
        "id": "[variables('_playbookcontentProductId10')]",
        "version": "[variables('playbookVersion10')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName11')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-ResolveTriggeredAlarm Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion11')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-ResolveTriggeredAlarm",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-ResolveTriggeredAlarm",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@listCallbackUrl()"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Parse_Alarm_Details": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Parse_Alarm_Details')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "TriggeredAlarmId": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "VoneHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "For_each_TriggeredAlarmId": {
                          "foreach": "@outputs('Parse_JSON')?['body']?['TriggeredAlarmId']",
                          "actions": {
                            "Set_TriggeredAlarmId_variable": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "TriggeredAlarmId",
                                "value": "@items('For_each_TriggeredAlarmId')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "For_each_VoneHostName": {
                          "foreach": "@outputs('Parse_JSON')?['body']?['VoneHostName']",
                          "actions": {
                            "Set_VoneHostName_variable": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VoneHostName",
                                "value": "@items('For_each_VoneHostName')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_TriggeredAlarmId": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_variables": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Initialize_variables": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "TriggeredAlarmId",
                            "type": "string"
                          },
                          {
                            "name": "VoneHostName",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "ResolveTriggeredAlarm": {
                      "runAfter": {
                        "Parse_Alarm_Details": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "TriggeredAlarmId": "@variables('TriggeredAlarmId')",
                          "voneHostName": "@variables('VoneHostName')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/ResolveTriggeredAlarmAsync')]"
                        }
                      }
                    },
                    "Check_Alarm_Resolution_Result": {
                      "actions": {
                        "Add_success_comment": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p class=\"editor-paragraph\">Alarm with ID @{variables('TriggeredAlarmId')} has been successfully resolved on @{variables('VoneHostName')}.</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "ResolveTriggeredAlarm": [
                          "Succeeded",
                          "TimedOut",
                          "Skipped",
                          "Failed"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_failure_comment": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p class=\"editor-paragraph\">Alarm with ID @{variables('TriggeredAlarmId')} has not been resolved on @{variables('VoneHostName')}. Reason: Function call failed or returned an error.</p>"
                              },
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@outputs('ResolveTriggeredAlarm')?['statusCode']",
                                404
                              ]
                            }
                          },
                          {
                            "not": {
                              "equals": [
                                "@outputs('ResolveTriggeredAlarm')?['statusCode']",
                                500
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId11'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId11')]",
                "contentId": "[variables('_playbookContentId11')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion11')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-ResolveTriggeredAlarm",
            "description": "A Microsoft Sentinel playbook with an incident trigger that resolves Veeam ONE alarms (identified by TriggeredAlarmId custom incident field) on the Veeam ONE server specified by the VoneHostName custom incident field.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "VeeamONE",
              "Alarm",
              "Resolution"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8701067040678761767"
            },
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId11')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-ResolveTriggeredAlarm",
        "contentProductId": "[variables('_playbookcontentProductId11')]",
        "id": "[variables('_playbookcontentProductId11')]",
        "version": "[variables('playbookVersion11')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName12')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-StartSecurityComplianceAnalyzer Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion12')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-StartSecurityComplianceAnalyzer",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-StartSecurityComplianceAnalyzer",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "functionAppName": {
                      "defaultValue": "[[parameters('functionAppName')]",
                      "type": "String"
                    },
                    "VbrHostName": {
                      "defaultValue": "DefaultVbrHostName",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_a_HTTP_request_is_received": {
                      "type": "Request",
                      "kind": "Http"
                    }
                  },
                  "actions": {
                    "StartSecurityComplianceAnalyzer": {
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@parameters('VbrHostName')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/StartSecurityComplianceAnalyzerAsync')]"
                        }
                      }
                    },
                    "Parse_sessionId": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('StartSecurityComplianceAnalyzer')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "sessionType": {
                              "type": "integer"
                            },
                            "state": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "jobId": {
                              "type": "string"
                            },
                            "creationTime": {
                              "type": "string"
                            },
                            "progressPercent": {
                              "type": "integer"
                            },
                            "result": {
                              "type": "object",
                              "properties": {
                                "result": {
                                  "type": "integer"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "isCanceled": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "usn": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "StartSecurityComplianceAnalyzer": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Compose": {
                      "type": "Compose",
                      "inputs": "@body('Parse_sessionId')?['id']",
                      "runAfter": {
                        "Parse_sessionId": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Until_state_is_not_stopped": {
                      "type": "Until",
                      "expression": "@equals(body('Parse_session')?['state'],1)",
                      "limit": {
                        "timeout": "PT30M"
                      },
                      "actions": {
                        "GetSession": {
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@parameters('VbrHostName')",
                              "sessionId": "@body('Parse_sessionId')?['id']"
                            },
                            "function": {
                              "id": "[[concat(variables('functionAppId'), '/functions/GetSessionAsync')]"
                            }
                          }
                        },
                        "Parse_session": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@outputs('GetSession')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "sessionType": {
                                  "type": "integer"
                                },
                                "state": {
                                  "type": "integer"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "jobId": {
                                  "type": "string"
                                },
                                "creationTime": {
                                  "type": "string"
                                },
                                "progressPercent": {
                                  "type": "integer"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "result": {
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "isCanceled": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "usn": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "GetSession": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Delay": {
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 1,
                              "unit": "Minute"
                            }
                          },
                          "runAfter": {
                            "Parse_session": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {
                        "Compose": [
                          "Succeeded"
                        ]
                      }
                    },
                    "GetSecurityComplianceAnalyzerResultsAsync": {
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@parameters('VbrHostName')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/GetSecurityComplianceAnalyzerResultsAsync')]"
                        }
                      },
                      "runAfter": {
                        "Until_state_is_not_stopped": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Compose_output": {
                      "type": "Compose",
                      "inputs": "@body('Parse_session')",
                      "runAfter": {
                        "GetSecurityComplianceAnalyzerResultsAsync": [
                          "Succeeded"
                        ]
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId12'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId12')]",
                "contentId": "[variables('_playbookContentId12')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion12')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-StartSecurityComplianceAnalyzer",
            "description": "This Microsoft Sentinel playbook initiates and monitors Veeam Security and Compliance Analyzer sessions via HTTP trigger.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for the VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "BestPractice",
              "Analyzer",
              "HTTP"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId12')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-StartSecurityComplianceAnalyzer",
        "contentProductId": "[variables('_playbookcontentProductId12')]",
        "id": "[variables('_playbookcontentProductId12')]",
        "version": "[variables('playbookVersion12')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName13')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-PerformConfigurationBackupOnIncident Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion13')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-PerformConfigurationBackupOnIncident",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Subscription ID where resources are deployed"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Resource group name where Function App is deployed"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId(parameters('subscriptionId'), parameters('resourceGroupName'), 'Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-StartConfigurationBackup-Incident",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Initialize_VbrHostName": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrHostName",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Initialize_SessionId": {
                      "runAfter": {
                        "Initialize_VbrHostName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "SessionId",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "Parse_custom_fields": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('Parse_custom_fields')?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "VbrHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Get_VbrHostName": {
                          "foreach": "@outputs('Parse_JSON')?['body']?['VbrHostName']",
                          "actions": {
                            "Set_variable_VbrHostName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrHostName",
                                "value": "@items('Get_VbrHostName')"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_SessionId": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Check_if_VbrHostName_found": {
                      "actions": {
                        "StartConfigurationBackupAsync": {
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@variables('VbrHostName')"
                            },
                            "function": {
                              "id": "[[concat(variables('functionAppId'), '/functions/StartConfigurationBackupAsync')]"
                            }
                          }
                        },
                        "Parse_sessionId": {
                          "runAfter": {
                            "StartConfigurationBackupAsync": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@outputs('StartConfigurationBackupAsync')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "statusCode": {
                                  "type": "integer"
                                },
                                "headers": {
                                  "type": "object",
                                  "properties": {
                                    "Date": {
                                      "type": "string"
                                    },
                                    "Transfer-Encoding": {
                                      "type": "string"
                                    },
                                    "Strict-Transport-Security": {
                                      "type": "string"
                                    },
                                    "x-ms-middleware-request-id": {
                                      "type": "string"
                                    },
                                    "Content-Type": {
                                      "type": "string"
                                    },
                                    "Content-Length": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "body": {
                                  "type": "object",
                                  "properties": {
                                    "sessionType": {
                                      "type": "integer"
                                    },
                                    "state": {
                                      "type": "integer"
                                    },
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "jobId": {
                                      "type": "string"
                                    },
                                    "creationTime": {
                                      "type": "string"
                                    },
                                    "progressPercent": {
                                      "type": "integer"
                                    },
                                    "result": {
                                      "type": "object",
                                      "properties": {
                                        "result": {
                                          "type": "integer"
                                        },
                                        "message": {
                                          "type": "string"
                                        },
                                        "isCanceled": {
                                          "type": "boolean"
                                        }
                                      }
                                    },
                                    "usn": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Set_SessionId": {
                          "runAfter": {
                            "Parse_sessionId": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "SessionId",
                            "value": "@body('Parse_sessionId')?['body']?['id']"
                          }
                        },
                        "Add_backup_started_comment": {
                          "runAfter": {
                            "Set_SessionId": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Configuration backup started on <strong>@{variables('VbrHostName')}</strong> with session ID: <strong>@{variables('SessionId')}</strong></p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Until_state_is_not_stopped": {
                          "actions": {
                            "GetSession": {
                              "type": "Function",
                              "inputs": {
                                "queries": {
                                  "vbrHostName": "@variables('VbrHostName')",
                                  "sessionId": "@variables('SessionId')"
                                },
                                "function": {
                                  "id": "[[concat(variables('functionAppId'), '/functions/GetSessionAsync')]"
                                }
                              }
                            },
                            "Parse_session": {
                              "runAfter": {
                                "GetSession": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@outputs('GetSession')",
                                "schema": {
                                  "type": "object",
                                  "properties": {
                                    "statusCode": {
                                      "type": "integer"
                                    },
                                    "headers": {
                                      "type": "object",
                                      "properties": {
                                        "Date": {
                                          "type": "string"
                                        },
                                        "Transfer-Encoding": {
                                          "type": "string"
                                        },
                                        "Request-Context": {
                                          "type": "string"
                                        },
                                        "Content-Type": {
                                          "type": "string"
                                        },
                                        "Content-Length": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "body": {
                                      "type": "object",
                                      "properties": {
                                        "sessionType": {
                                          "type": "integer"
                                        },
                                        "state": {
                                          "type": "integer"
                                        },
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "jobId": {
                                          "type": "string"
                                        },
                                        "creationTime": {
                                          "type": "string"
                                        },
                                        "progressPercent": {
                                          "type": "integer"
                                        },
                                        "result": {
                                          "type": "object",
                                          "properties": {
                                            "result": {
                                              "type": "integer"
                                            },
                                            "message": {
                                              "type": "string"
                                            },
                                            "isCanceled": {
                                              "type": "boolean"
                                            }
                                          }
                                        },
                                        "usn": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "Delay": {
                              "runAfter": {
                                "Parse_session": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Wait",
                              "inputs": {
                                "interval": {
                                  "count": 1,
                                  "unit": "Minute"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Add_backup_started_comment": [
                              "Succeeded"
                            ]
                          },
                          "expression": "@equals(body('Parse_session')?['body']?['state'],1)",
                          "limit": {
                            "timeout": "PT30M"
                          },
                          "type": "Until"
                        },
                        "IngestSessionDataBySessionIdAsync": {
                          "runAfter": {
                            "Until_state_is_not_stopped": [
                              "Succeeded"
                            ]
                          },
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@variables('VbrHostName')",
                              "sessionId": "@variables('SessionId')"
                            },
                            "function": {
                              "id": "[[concat(variables('functionAppId'), '/functions/IngestSessionDataBySessionIdAsync')]"
                            }
                          }
                        },
                        "Add_backup_completed_comment": {
                          "runAfter": {
                            "IngestSessionDataBySessionIdAsync": [
                              "Succeeded",
                              "Failed",
                              "Skipped",
                              "TimedOut"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Configuration backup completed on <strong>@{variables('VbrHostName')}</strong>. Final result: <strong>@{body('Parse_session')?['body']?['result']?['result']}</strong></p><p>Session data has been ingested into the workspace.</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_custom_fields": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Add_no_hostname_comment": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p><strong>Warning:</strong> No VbrHostName found in incident custom fields. Configuration backup cannot be started.</p><p>Please ensure the incident contains a 'VbrHostName' custom field with the target Veeam server hostname.</p>"
                              },
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "not": {
                              "equals": [
                                "@variables('VbrHostName')",
                                ""
                              ]
                            }
                          }
                        ]
                      },
                      "type": "If"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/', parameters('subscriptionId'), '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId13'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId13')]",
                "contentId": "[variables('_playbookContentId13')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion13')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-PerformConfigurationBackupOnIncident",
            "description": "A Microsoft Sentinel playbook that automatically runs configuration backup session when triggered by an incident. The playbook gets Veeam Backup & Replication settings from incident custom fields, runs the configuration backup session, and collects the session result.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Configuration",
              "Backup",
              "Incident"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8701067040678761767"
            },
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId13')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-PerformConfigurationBackupOnIncident",
        "contentProductId": "[variables('_playbookcontentProductId13')]",
        "id": "[variables('_playbookcontentProductId13')]",
        "version": "[variables('playbookVersion13')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName14')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-StartQuickBackup Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion14')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "Veeam-StartQuickBackup",
              "type": "string",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            }
          },
          "variables": {
            "functionAppId": "[[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-StartQuickBackup",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.1",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    }
                  },
                  "triggers": {
                    "Microsoft_Sentinel_incident": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@listCallbackUrl()"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Initialize_VbrHostName": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrHostName",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Initialize_BackupObjectId": {
                      "runAfter": {
                        "Initialize_VbrHostName": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "BackupObjectId",
                            "type": "string",
                            "value": "none"
                          }
                        ]
                      }
                    },
                    "Get_variables_from_custom_fields": {
                      "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                      "actions": {
                        "Parse_JSON": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@item()?['properties']?['additionalData']?['Custom Details']",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "VbrHostName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineDisplayName": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "MachineUuid": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "BackupObjectId": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Get_VbrHostName": {
                          "foreach": "@body('Parse_JSON')?['VbrHostName']",
                          "actions": {
                            "Set_variable": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrHostName",
                                "value": "@{items('Get_VbrHostName')}"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_JSON": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_BackupObjectId": {
                          "foreach": "@body('Parse_JSON')?['BackupObjectId']",
                          "actions": {
                            "Set_BackupObjectId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "BackupObjectId",
                                "value": "@items('Get_BackupObjectId')"
                              }
                            }
                          },
                          "runAfter": {
                            "Get_VbrHostName": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        }
                      },
                      "runAfter": {
                        "Initialize_BackupObjectId": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "GetBackupObjectByIdAsync": {
                      "runAfter": {
                        "Get_variables_from_custom_fields": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@variables('VbrHostName')",
                          "backupObjectId": "@variables('BackupObjectId')"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/GetBackupObjectByIdAsync')]"
                        }
                      }
                    },
                    "Parse_properties": {
                      "runAfter": {
                        "GetBackupObjectByIdAsync": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('GetBackupObjectByIdAsync')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "ViType": {
                              "type": "string"
                            },
                            "VmHostName": {
                              "type": "string"
                            },
                            "VmName": {
                              "type": "string"
                            },
                            "ObjectId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "StartQuickBackupJobAsync": {
                      "runAfter": {
                        "Parse_properties": [
                          "Succeeded"
                        ]
                      },
                      "type": "Function",
                      "inputs": {
                        "queries": {
                          "vbrHostName": "@variables('VbrHostName')",
                          "ViType": "@body('Parse_properties')?['ViType']",
                          "VmHostName": "@body('Parse_properties')?['VmHostName']",
                          "VmName": "@body('Parse_properties')?['VmName']",
                          "ObjectId": "@body('Parse_properties')?['ObjectId']"
                        },
                        "function": {
                          "id": "[[concat(variables('functionAppId'), '/functions/StartQuickBackupJobAsync')]"
                        }
                      }
                    },
                    "Check_StartQuickBackup_Result": {
                      "runAfter": {
                        "StartQuickBackupJobAsync": [
                          "Succeeded",
                          "Failed"
                        ]
                      },
                      "type": "If",
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@outputs('StartQuickBackupJobAsync')?['statusCode']",
                              200
                            ]
                          }
                        ]
                      },
                      "actions": {
                        "Indicate_starting_with_comment": {
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p class=\"editor-paragraph\">Quick backup for @{variables('VbrHostName')} has started.</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        }
                      },
                      "else": {
                        "actions": {
                          "Indicate_failure_with_comment": {
                            "type": "ApiConnection",
                            "inputs": {
                              "host": {
                                "connection": {
                                  "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                }
                              },
                              "method": "post",
                              "body": {
                                "incidentArmId": "@triggerBody()?['object']?['id']",
                                "message": "<p class=\"editor-paragraph\">Quick backup for @{variables('VbrHostName')} has failed to start.</p>"
                              },
                              "path": "/Incidents/Comment"
                            }
                          }
                        }
                      }
                    },
                    "Parse_session_ID": {
                      "runAfter": {
                        "Check_StartQuickBackup_Result": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('StartQuickBackupJobAsync')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "sessionType": {
                              "type": "integer"
                            },
                            "state": {
                              "type": "integer"
                            },
                            "platformName": {
                              "type": "integer"
                            },
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "jobId": {
                              "type": "string"
                            },
                            "creationTime": {
                              "type": "string"
                            },
                            "progressPercent": {
                              "type": "integer"
                            },
                            "result": {
                              "type": "object",
                              "properties": {
                                "result": {
                                  "type": "integer"
                                },
                                "message": {
                                  "type": "string"
                                },
                                "isCanceled": {
                                  "type": "boolean"
                                }
                              }
                            },
                            "usn": {
                              "type": "integer"
                            },
                            "platformId": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "Until_state_is_not_Stopped": {
                      "actions": {
                        "GetSession_": {
                          "type": "Function",
                          "inputs": {
                            "queries": {
                              "vbrHostName": "@variables('VbrHostName')",
                              "sessionId": "@body('Parse_session_ID')?['id']"
                            },
                            "function": {
                              "id": "[[concat(variables('functionAppId'), '/functions/GetSessionAsync')]"
                            }
                          }
                        },
                        "Parse_session": {
                          "runAfter": {
                            "GetSession_": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('GetSession_')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "sessionType": {
                                  "type": "integer"
                                },
                                "state": {
                                  "type": "integer"
                                },
                                "platformName": {
                                  "type": "integer"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "jobId": {
                                  "type": "string"
                                },
                                "creationTime": {
                                  "type": "string"
                                },
                                "progressPercent": {
                                  "type": "integer"
                                },
                                "result": {
                                  "type": "object",
                                  "properties": {
                                    "result": {
                                      "type": "integer"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "isCanceled": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "usn": {
                                  "type": "integer"
                                },
                                "platformId": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        },
                        "Delay": {
                          "runAfter": {
                            "Parse_session": [
                              "Succeeded"
                            ]
                          },
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 3,
                              "unit": "Minute"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_session_ID": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(body('Parse_session')?['state'],1)",
                      "limit": {
                        "timeout": "PT3H"
                      },
                      "type": "Until"
                    },
                    "Result": {
                      "runAfter": {
                        "Until_state_is_not_Stopped": [
                          "Succeeded"
                        ]
                      },
                      "type": "Compose",
                      "inputs": "@body('Parse_session')?['result']"
                    },
                    "Show_result_as_a_comment": {
                      "runAfter": {
                        "Result": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": {
                          "incidentArmId": "@triggerBody()?['object']?['id']",
                          "message": "<p class=\"editor-paragraph\">Quick backup has finished. Details: @{outputs('Result')}.</p>"
                        },
                        "path": "/Incidents/Comment"
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/',subscription().subscriptionId, '/providers/Microsoft.Web/locations/',variables('workspace-location-inline'),'/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId14'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId14')]",
                "contentId": "[variables('_playbookContentId14')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion14')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-StartQuickBackup",
            "description": "A Microsoft Sentinel playbook with an incident trigger, that performs quick backup support for affected backupObject (specifided by the BackupObjectId incidents custom field) when triggered by Microsoft Sentinel incidents. Indicates results as incident comments.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Hybrid Connection and Key Vault secrets configured for each VBR Server."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "QuickBackup",
              "Support",
              "IncidentResponse"
            ],
            "lastUpdateTime": "2025-08-25T00:00:00Z",
            "parameterTemplateVersion": "1.0.1",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace."
            ],
            "_generator": {
              "name": "bicep",
              "version": "0.36.177.2456",
              "templateHash": "8701067040678761767"
            },
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId14')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-StartQuickBackup",
        "contentProductId": "[variables('_playbookcontentProductId14')]",
        "id": "[variables('_playbookcontentProductId14')]",
        "version": "[variables('playbookVersion14')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName15')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam-SetupConnections Playbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion15')]",
          "parameters": {
            "PlaybookName": {
              "type": "string",
              "defaultValue": "Veeam-SetupConnections",
              "metadata": {
                "description": "Name of the playbook (Logic App) to be created"
              }
            },
            "functionAppName": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Name of the Azure Function App for Veeam integration"
              }
            },
            "keyVaultName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Key Vault"
              }
            },
            "relayNamespaceName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Name of the Azure Relay namespace"
              }
            },
            "workspaceId": {
              "defaultValue": "",
              "type": "string",
              "metadata": {
                "description": "Workspace ID (GUID) of the Log Analytics workspace that contains Microsoft Sentinel"
              }
            },
            "AzureSentinelConnectionName": {
              "type": "string",
              "defaultValue": "azuresentinel-connection",
              "metadata": {
                "description": "The name to use for the Microsoft Sentinel Connector in the Logic App (This will exist as an API Connection in your subscription)"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Azure subscription ID"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Name of the resource group containing the Logic Apps to be updated"
              }
            },
            "keyVaultDomain": {
              "type": "string",
              "defaultValue": "[environment().suffixes.keyVaultDns]",
              "metadata": {
                "description": "The domain suffix for Azure Key Vault (dynamically assigned based on Azure environment)"
              }
            },
            "azureManagementDomain": {
              "type": "string",
              "defaultValue": "[environment().resourceManager]",
              "metadata": {
                "description": "The Azure Management API endpoint (dynamically assigned based on Azure environment)"
              }
            }
          },
          "variables": {
            "newRecurrenceInterval": "12",
            "newRecurrenceFrequency": "Hour",
            "connection-1": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
            "_connection-1": "[[variables('connection-1')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[parameters('AzureSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "properties": {
                "displayName": "[[parameters('AzureSentinelConnectionName')]",
                "api": {
                  "id": "[[variables('_connection-1')]"
                },
                "parameterValueType": "Alternative"
              }
            },
            {
              "type": "Microsoft.Logic/workflows",
              "apiVersion": "2017-07-01",
              "name": "[[parameters('PlaybookName')]",
              "location": "[[variables('workspace-location-inline')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "tags": {
                "hidden-SentinelTemplateName": "Veeam-SetupConnectionsPlaybook",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "subscriptionId": {
                      "type": "String",
                      "defaultValue": "[[parameters('subscriptionId')]"
                    },
                    "resourceGroupName": {
                      "type": "String",
                      "defaultValue": "[[parameters('resourceGroupName')]"
                    },
                    "keyVaultName": {
                      "type": "String",
                      "defaultValue": "[[parameters('keyVaultName')]"
                    },
                    "relayNamespaceName": {
                      "type": "String",
                      "defaultValue": "[[parameters('relayNamespaceName')]"
                    },
                    "functionAppName": {
                      "type": "String",
                      "defaultValue": "[[parameters('functionAppName')]"
                    },
                    "workspaceId": {
                      "type": "String",
                      "defaultValue": "[[parameters('workspaceId')]"
                    },
                    "keyVaultDomain": {
                      "type": "String",
                      "defaultValue": "[[parameters('keyVaultDomain')]"
                    },
                    "azureManagementDomain": {
                      "type": "String",
                      "defaultValue": "[[parameters('azureManagementDomain')]"
                    }
                  },
                  "triggers": {
                    "manual": {
                      "type": "Request",
                      "kind": "Http",
                      "inputs": {
                        "schema": {
                          "type": "object",
                          "properties": {
                            "recurrenceInterval": {
                              "default": "[[variables('newRecurrenceInterval')]"
                            },
                            "recurrenceFrequency": {
                              "default": "[[variables('newRecurrenceFrequency')]"
                            }
                          }
                        }
                      }
                    }
                  },
                  "actions": {
                    "Initialize_Variables": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "VbrUsernameId",
                            "type": "string"
                          },
                          {
                            "name": "VbrPasswordId",
                            "type": "string"
                          },
                          {
                            "name": "VbrServerName",
                            "type": "string",
                            "value": "[variables('blanks')]"
                          },
                          {
                            "name": "VbrBaseUrl",
                            "type": "string",
                            "value": "[variables('blanks')]"
                          },
                          {
                            "name": "VoneUsernameId",
                            "type": "string"
                          },
                          {
                            "name": "VonePasswordId",
                            "type": "string"
                          },
                          {
                            "name": "VoneServerName",
                            "type": "string",
                            "value": "[variables('blanks')]"
                          },
                          {
                            "name": "VoneBaseUrl",
                            "type": "string",
                            "value": "[variables('blanks')]"
                          }
                        ]
                      }
                    },
                    "For_each_VONE_server_set_missing_parameters": {
                      "type": "Foreach",
                      "foreach": "@body('Parse_VONE_Settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "If_any_value_in_watchlist_is_missing": {
                          "type": "If",
                          "expression": {
                            "or": [
                              {
                                "equals": [
                                  "@body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@item()?['properties.itemsKeyValue']?['Key Vault Password ID']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@item()?['properties.itemsKeyValue']?['Key Vault Password ID']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@item()?['properties.itemsKeyValue']?['Key Vault Username ID']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@item()?['properties.itemsKeyValue']?['Key Vault Username ID']",
                                  "@null"
                                ]
                              }
                            ]
                          },
                          "actions": {
                            "Update_Watchlist_Item_With_KeyVault_IDs_VONE": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "body": {
                                  "Veeam Server Name": "@body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Veeam Server Name']",
                                  "Base URL": "@body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Base URL']",
                                  "Collect Alarms": "@if(\r\n or(\r\n  empty(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms']), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms'], null), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms'], '')\r\n ),\r\n 'true', \r\n body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms']\r\n)",
                                  "Key Vault Password ID": "@if(\r\n or(\r\n  empty(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Password ID']), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Password ID'], null), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Password ID'], '')\r\n ),\r\n concat(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Veeam Server Name'], 'Password'), \r\n body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Password ID']\r\n)",
                                  "Key Vault Username ID": "@if(\r\n or(\r\n  empty(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Username ID']), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Username ID'], null), \r\n  equals(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Username ID'], '')\r\n ),\r\n concat(body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Veeam Server Name'], 'Username'), \r\n body('Parse_current_VONE_server')?['properties.itemsKeyValue']?['Key Vault Username ID']\r\n)"
                                },
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vone_settings')}/watchlistItem/@{encodeURIComponent(items('For_each_VONE_server_set_missing_parameters')?['name'])}"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VONE_server": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Parse_current_VONE_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VONE_server_set_missing_parameters')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.watchlistItemType": {
                                  "type": "string"
                                },
                                "properties.watchlistItemId": {
                                  "type": "string"
                                },
                                "properties.tenantId": {
                                  "type": "string"
                                },
                                "properties.isDeleted": {
                                  "type": "boolean"
                                },
                                "properties.created": {
                                  "type": "string"
                                },
                                "properties.updated": {
                                  "type": "string"
                                },
                                "properties.createdBy": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.updatedBy": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Alarms": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.entityMapping": {
                                  "type": "object"
                                },
                                "etag": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "systemData": {
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "type": "string"
                                    },
                                    "lastModifiedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_VONE_Settings": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Watchlists_-_Get_Updated_VONE_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vone_settings')}/watchlistItems"
                      },
                      "runAfter": {
                        "For_each_VONE_server_set_missing_parameters": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Parse_Updated_VONE_Settings": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_Updated_VONE_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.watchlistItemType": {
                                        "type": "string"
                                      },
                                      "properties.watchlistItemId": {
                                        "type": "string"
                                      },
                                      "properties.tenantId": {
                                        "type": "string"
                                      },
                                      "properties.isDeleted": {
                                        "type": "boolean"
                                      },
                                      "properties.created": {
                                        "type": "string"
                                      },
                                      "properties.updated": {
                                        "type": "string"
                                      },
                                      "properties.createdBy": {
                                        "type": "object",
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "objectId": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.updatedBy": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "objectId": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Alarms": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.entityMapping": {
                                        "type": "object"
                                      },
                                      "etag": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "systemData": {
                                        "type": "object",
                                        "properties": {
                                          "createdBy": {
                                            "type": "string"
                                          },
                                          "createdByType": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "lastModifiedBy": {
                                            "type": "string"
                                          },
                                          "lastModifiedByType": {
                                            "type": "string"
                                          },
                                          "lastModifiedAt": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties.watchlistItemType",
                                      "properties.watchlistItemId",
                                      "properties.tenantId",
                                      "properties.isDeleted",
                                      "properties.created",
                                      "properties.updated",
                                      "properties.createdBy",
                                      "properties.updatedBy",
                                      "properties.itemsKeyValue",
                                      "properties.entityMapping",
                                      "etag",
                                      "id",
                                      "name",
                                      "type",
                                      "systemData"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_Updated_VONE_Settings": [
                          "Succeeded"
                        ]
                      }
                    },
                    "For_each_VBR_server_set_missing_parameters": {
                      "type": "Foreach",
                      "foreach": "@body('Parse_VBR_Settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_VBR_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_VBR_server_set_missing_parameters')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Malware Events": {
                                      "type": "string"
                                    },
                                    "Collect Security and Compliance Analyzer Results": {
                                      "type": "string"
                                    },
                                    "Collect Authorization Events": {
                                      "type": "string"
                                    },
                                    "Collect Configuration Backups": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "Check_If_KeyVault_IDs_Missing": {
                          "type": "If",
                          "expression": {
                            "or": [
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Password ID']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Username ID']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Password ID']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Username ID']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events']",
                                  "@null"
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups']",
                                  ""
                                ]
                              },
                              {
                                "equals": [
                                  "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups']",
                                  "@null"
                                ]
                              }
                            ]
                          },
                          "actions": {
                            "Update_Watchlist_Item_With_KeyVault_IDs": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "body": {
                                  "Veeam Server Name": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name']",
                                  "Base URL": "@body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Base URL']",
                                  "Collect Malware Events": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events'], null), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events'], '')), 'true', body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Malware Events'])",
                                  "Collect Security and Compliance Analyzer Results": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results'], null), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results'], '')), 'true', body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results'])",
                                  "Collect Authorization Events": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events'], null), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events'], '')), 'true', body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Authorization Events'])",
                                  "Collect Configuration Backups": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups'], null), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups'], '')), 'true', body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Collect Configuration Backups'])",
                                  "Key Vault Username ID": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Username ID']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Username ID'], null)), concat(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name'], 'Username'), body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Username ID'])",
                                  "Key Vault Password ID": "@if(or(empty(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Password ID']), equals(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Password ID'], null)), concat(body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Veeam Server Name'], 'Password'), body('Parse_current_VBR_server')?['properties.itemsKeyValue']?['Key Vault Password ID'])"
                                },
                                "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItem/@{encodeURIComponent(items('For_each_VBR_server_set_missing_parameters')?['name'])}"
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_VBR_server": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_updated_VONE_server": {
                      "type": "Foreach",
                      "foreach": "@body('Parse_Updated_VONE_Settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Parse_current_updated_VONE_server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_updated_VONE_server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.watchlistItemType": {
                                  "type": "string"
                                },
                                "properties.watchlistItemId": {
                                  "type": "string"
                                },
                                "properties.tenantId": {
                                  "type": "string"
                                },
                                "properties.isDeleted": {
                                  "type": "boolean"
                                },
                                "properties.created": {
                                  "type": "string"
                                },
                                "properties.updated": {
                                  "type": "string"
                                },
                                "properties.createdBy": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.updatedBy": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Alarms": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.entityMapping": {
                                  "type": "object"
                                },
                                "etag": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "systemData": {
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "type": "string"
                                    },
                                    "lastModifiedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        " Are_there_any_events_collected_from_VONE_server": {
                          "type": "If",
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Collect Alarms']",
                                  "true"
                                ]
                              },
                              {
                                "not": {
                                  "equals": [
                                    "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Veeam Server Name']",
                                    "ExampleServerName"
                                  ]
                                }
                              }
                            ]
                          },
                          "actions": {
                            "Set_VonePasswordId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VonePasswordId",
                                "value": "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Key Vault Password ID']"
                              }
                            },
                            "Set_VoneUsernameId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VoneUsernameId",
                                "value": "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Key Vault Username ID']"
                              },
                              "runAfter": {
                                "Set_VonePasswordId": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_VoneServerName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VoneServerName",
                                "value": "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Veeam Server Name']"
                              },
                              "runAfter": {
                                "Set_VoneUsernameId": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Extract_Host_and_Port_VONE": {
                              "type": "Compose",
                              "inputs": {
                                "host": "@split(replace(variables('VoneBaseUrl'), 'https://', ''), ':')[0]",
                                "port": "@if(and(greater(length(split(replace(variables('VoneBaseUrl'), 'https://', ''), ':')), 1), not(equals(last(split(replace(variables('VoneBaseUrl'), 'https://', ''), ':')), ''))), int(last(split(replace(variables('VoneBaseUrl'), 'https://', ''), ':'))), 1239)"
                              },
                              "runAfter": {
                                "Set_VoneBaseUrl": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Setup_KeyVault_Secrets_VONE": {
                              "type": "Scope",
                              "actions": {
                                "Check_Username_Secret_Exists_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VoneUsernameId'), '?api-version=7.4')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  }
                                },
                                "Create_Username_Secret_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VoneUsernameId'), '?api-version=7.4')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "value": "UNDEFINED",
                                      "attributes": {
                                        "enabled": true
                                      },
                                      "tags": {
                                        "source": "playbook",
                                        "vbrServer": "@variables('VoneServerName')",
                                        "type": "username"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Username_Secret_Exists_VONE": [
                                      "Failed"
                                    ]
                                  }
                                },
                                "Check_Password_Secret_Exists_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VonePasswordId'), '?api-version=7.4')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  }
                                },
                                "Create_Password_Secret_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VonePasswordId'), '?api-version=7.4')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "value": "UNDEFINED",
                                      "attributes": {
                                        "enabled": true
                                      },
                                      "tags": {
                                        "source": "playbook",
                                        "vbrServer": "@variables('VoneServerName')",
                                        "type": "password",
                                        "status": "requires_update"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Password_Secret_Exists_VONE": [
                                      "Failed"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Extract_Host_and_Port_VONE": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Setup_Hybrid_Connection_VONE": {
                              "type": "Scope",
                              "actions": {
                                "Check_Hybrid_Connection_Exists_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VoneServerName'), '?api-version=2024-01-01')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  }
                                },
                                "Create_Hybrid_Connection_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VoneServerName'), '?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "requiresClientAuthorization": true,
                                        "userMetadata": "@concat('[{\"key\":\"endpoint\",\"value\":\"', outputs('Extract_Host_and_Port_VONE')?['host'], ':', outputs('Extract_Host_and_Port_VONE')?['port'], '\"}]')"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Hybrid_Connection_Exists_VONE": [
                                      "Failed"
                                    ]
                                  }
                                },
                                "Create_Listener_Rule_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VoneServerName'), '/authorizationRules/defaultListener?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "rights": [
                                          "Listen"
                                        ]
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Hybrid_Connection_VONE": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Create_Sender_Rule_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VoneServerName'), '/authorizationRules/defaultSender?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "rights": [
                                          "Send"
                                        ]
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Listener_Rule_VONE": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Get_Sender_Key_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VoneServerName'), '/authorizationRules/defaultSender/listKeys?api-version=2024-01-01')",
                                    "method": "POST",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Sender_Rule_VONE": [
                                      "Succeeded",
                                      "Skipped"
                                    ]
                                  }
                                },
                                "Check_Function_App_Binding_Exists_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/hybridConnectionNamespaces/', parameters('relayNamespaceName'), '/relays/', variables('VoneServerName'), '?api-version=2022-03-01')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Get_Sender_Key_VONE": [
                                      "Succeeded",
                                      "Skipped"
                                    ]
                                  }
                                },
                                "Bind_To_Function_App_VONE": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/hybridConnectionNamespaces/', parameters('relayNamespaceName'), '/relays/', variables('VoneServerName'), '?api-version=2022-03-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "hostname": "@outputs('Extract_Host_and_Port_VONE')?['host']",
                                        "port": "@outputs('Extract_Host_and_Port_VONE')?['port']",
                                        "relayArmUri": "@if(equals(body('Check_Hybrid_Connection_Exists_VONE')?['id'], null), body('Create_Hybrid_Connection_VONE')?['id'], body('Check_Hybrid_Connection_Exists_VONE')?['id'])",
                                        "relayName": "@variables('VoneServerName')",
                                        "sendKeyName": "defaultSender",
                                        "sendKeyValue": "@body('Get_Sender_Key_VONE')?['primaryKey']",
                                        "serviceBusNamespace": "@parameters('relayNamespaceName')",
                                        "serviceBusSuffix": ".servicebus.windows.net"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Function_App_Binding_Exists_VONE": [
                                      "Failed"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Setup_KeyVault_Secrets_VONE": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_VoneBaseUrl": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VoneBaseUrl",
                                "value": "@body('Parse_current_updated_VONE_server')?['properties.itemsKeyValue']?['Base URL']"
                              },
                              "runAfter": {
                                "Set_VoneServerName": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_updated_VONE_server": [
                              "Succeeded"
                            ]
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_Updated_VONE_Settings": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_updated_VBR_server": {
                      "type": "Foreach",
                      "foreach": "@body('Parse_updated_VBR_Settings')?['properties']?['watchlistItems']",
                      "actions": {
                        "Are_there_any_events_collected_from_VBR_server": {
                          "type": "If",
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@item()?['properties.itemsKeyValue']?['Veeam Server Name']",
                                    "ExampleServerName"
                                  ]
                                }
                              },
                              {
                                "or": [
                                  {
                                    "equals": [
                                      "@body('Parse_current_updated_VBR_Server')?['properties.itemsKeyValue']?['Collect Malware Events']",
                                      "true"
                                    ]
                                  },
                                  {
                                    "equals": [
                                      "@body('Parse_current_updated_VBR_Server')?['properties.itemsKeyValue']?['Collect Security and Compliance Analyzer Results']",
                                      "true"
                                    ]
                                  },
                                  {
                                    "equals": [
                                      "@body('Parse_current_updated_VBR_Server')?['properties.itemsKeyValue']?['Collect Authorization Events']",
                                      "true"
                                    ]
                                  }
                                ]
                              }
                            ]
                          },
                          "actions": {
                            "Extract_Host_and_Port_VBR": {
                              "type": "Compose",
                              "inputs": {
                                "host": "@split(replace(variables('VbrBaseUrl'), 'https://', ''), ':')[0]",
                                "port": "@if(and(greater(length(split(replace(variables('VbrBaseUrl'), 'https://', ''), ':')), 1), not(equals(last(split(replace(variables('VbrBaseUrl'), 'https://', ''), ':')), ''))), int(last(split(replace(variables('VbrBaseUrl'), 'https://', ''), ':'))), 9419)"
                              },
                              "runAfter": {
                                "Set_VbrBaseUrl": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Setup_KeyVault_Secrets_VBR": {
                              "type": "Scope",
                              "actions": {
                                "Check_Username_Secret_Exists_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VbrUsernameId'), '?api-version=7.4')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  }
                                },
                                "Create_Username_Secret_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VbrUsernameId'), '?api-version=7.4')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "value": "UNDEFINED",
                                      "attributes": {
                                        "enabled": true
                                      },
                                      "tags": {
                                        "source": "playbook",
                                        "vbrServer": "@variables('VbrServerName')",
                                        "type": "username"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Username_Secret_Exists_VBR": [
                                      "Failed"
                                    ]
                                  }
                                },
                                "Check_Password_Secret_Exists_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VbrPasswordId'), '?api-version=7.4')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  }
                                },
                                "Create_Password_Secret_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'), '/secrets/', variables('VbrPasswordId'), '?api-version=7.4')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "value": "UNDEFINED",
                                      "attributes": {
                                        "enabled": true
                                      },
                                      "tags": {
                                        "source": "playbook",
                                        "vbrServer": "@variables('VbrServerName')",
                                        "type": "password",
                                        "status": "requires_update"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@concat('https://', parameters('keyVaultName'), parameters('keyVaultDomain'))"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Password_Secret_Exists_VBR": [
                                      "Failed"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Extract_Host_and_Port_VBR": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Setup_Hybrid_Connection_VBR": {
                              "type": "Scope",
                              "actions": {
                                "Check_Hybrid_Connection_Exists_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VbrServerName'), '?api-version=2024-01-01')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  }
                                },
                                "Create_Hybrid_Connection_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VbrServerName'), '?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "requiresClientAuthorization": true,
                                        "userMetadata": "@concat('[{\"key\":\"endpoint\",\"value\":\"', outputs('Extract_Host_and_Port_VBR')?['host'], ':', outputs('Extract_Host_and_Port_VBR')?['port'], '\"}]')"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Hybrid_Connection_Exists_VBR": [
                                      "Failed"
                                    ]
                                  }
                                },
                                "Create_Listener_Rule_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VbrServerName'), '/authorizationRules/defaultListener?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "rights": [
                                          "Listen"
                                        ]
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Hybrid_Connection_VBR": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Create_Sender_Rule_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VbrServerName'), '/authorizationRules/defaultSender?api-version=2024-01-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "rights": [
                                          "Send"
                                        ]
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Listener_Rule_VBR": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Get_Sender_Key_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Relay/namespaces/', parameters('relayNamespaceName'), '/hybridConnections/', variables('VbrServerName'), '/authorizationRules/defaultSender/listKeys?api-version=2024-01-01')",
                                    "method": "POST",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Create_Sender_Rule_VBR": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Check_Function_App_Binding_Exists_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/hybridConnectionNamespaces/', parameters('relayNamespaceName'), '/relays/', variables('VbrServerName'), '?api-version=2022-03-01')",
                                    "method": "GET",
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Get_Sender_Key_VBR": [
                                      "Succeeded"
                                    ]
                                  }
                                },
                                "Bind_To_Function_App_VBR": {
                                  "type": "Http",
                                  "inputs": {
                                    "uri": "@concat(parameters('azureManagementDomain'), '/subscriptions/', parameters('subscriptionId'), '/resourceGroups/', parameters('resourceGroupName'), '/providers/Microsoft.Web/sites/', parameters('functionAppName'), '/hybridConnectionNamespaces/', parameters('relayNamespaceName'), '/relays/', variables('VbrServerName'), '?api-version=2022-03-01')",
                                    "method": "PUT",
                                    "headers": {
                                      "Content-Type": "application/json"
                                    },
                                    "body": {
                                      "properties": {
                                        "hostname": "@outputs('Extract_Host_and_Port_VBR')?['host']",
                                        "port": "@outputs('Extract_Host_and_Port_VBR')?['port']",
                                        "relayArmUri": "@if(equals(body('Check_Hybrid_Connection_Exists_VBR')?['id'], null), body('Create_Hybrid_Connection_VBR')?['id'], body('Check_Hybrid_Connection_Exists_VBR')?['id'])",
                                        "relayName": "@variables('VbrServerName')",
                                        "sendKeyName": "defaultSender",
                                        "sendKeyValue": "@body('Get_Sender_Key_VBR')?['primaryKey']",
                                        "serviceBusNamespace": "@parameters('relayNamespaceName')",
                                        "serviceBusSuffix": ".servicebus.windows.net"
                                      }
                                    },
                                    "authentication": {
                                      "type": "ManagedServiceIdentity",
                                      "audience": "@parameters('azureManagementDomain')"
                                    }
                                  },
                                  "runAfter": {
                                    "Check_Function_App_Binding_Exists_VBR": [
                                      "Failed"
                                    ]
                                  }
                                }
                              },
                              "runAfter": {
                                "Setup_KeyVault_Secrets_VBR": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_VbrPasswordId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrPasswordId",
                                "value": "@item()?['properties.itemsKeyValue']?['Key Vault Password ID']"
                              }
                            },
                            "Set_VbrUsernameId": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrUsernameId",
                                "value": "@item()?['properties.itemsKeyValue']?['Key Vault Username ID']"
                              },
                              "runAfter": {
                                "Set_VbrPasswordId": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_VbrServerName": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrServerName",
                                "value": "@item()?['properties.itemsKeyValue']?['Veeam Server Name']"
                              },
                              "runAfter": {
                                "Set_VbrUsernameId": [
                                  "Succeeded"
                                ]
                              }
                            },
                            "Set_VbrBaseUrl": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "VbrBaseUrl",
                                "value": "@item()?['properties.itemsKeyValue']?['Base URL']"
                              },
                              "runAfter": {
                                "Set_VbrServerName": [
                                  "Succeeded"
                                ]
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_current_updated_VBR_Server": [
                              "Succeeded"
                            ]
                          }
                        },
                        "Parse_current_updated_VBR_Server": {
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@items('For_each_updated_VBR_server')",
                            "schema": {
                              "type": "object",
                              "properties": {
                                "properties.watchlistItemType": {
                                  "type": "string"
                                },
                                "properties.watchlistItemId": {
                                  "type": "string"
                                },
                                "properties.tenantId": {
                                  "type": "string"
                                },
                                "properties.isDeleted": {
                                  "type": "boolean"
                                },
                                "properties.created": {
                                  "type": "string"
                                },
                                "properties.updated": {
                                  "type": "string"
                                },
                                "properties.createdBy": {
                                  "type": "object",
                                  "properties": {
                                    "email": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.updatedBy": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "objectId": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.itemsKeyValue": {
                                  "type": "object",
                                  "properties": {
                                    "Veeam Server Name": {
                                      "type": "string"
                                    },
                                    "Base URL": {
                                      "type": "string"
                                    },
                                    "Collect Malware Events": {
                                      "type": "string"
                                    },
                                    "Collect Security and Compliance Analyzer Results": {
                                      "type": "string"
                                    },
                                    "Collect Authorization Events": {
                                      "type": "string"
                                    },
                                    "Key Vault Username ID": {
                                      "type": "string"
                                    },
                                    "Key Vault Password ID": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "properties.entityMapping": {
                                  "type": "object"
                                },
                                "etag": {
                                  "type": "string"
                                },
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "systemData": {
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string"
                                    },
                                    "createdByType": {
                                      "type": "string"
                                    },
                                    "createdAt": {
                                      "type": "string"
                                    },
                                    "lastModifiedBy": {
                                      "type": "string"
                                    },
                                    "lastModifiedByType": {
                                      "type": "string"
                                    },
                                    "lastModifiedAt": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Parse_updated_VBR_Settings": [
                          "Succeeded"
                        ]
                      },
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Watchlists_-_Get_Updated_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      },
                      "runAfter": {
                        "For_each_VBR_server_set_missing_parameters": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Parse_updated_VBR_Settings": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_Updated_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Malware Events": {
                                            "type": "string"
                                          },
                                          "Collect Security and Compliance Analyzer Results": {
                                            "type": "string"
                                          },
                                          "Collect Authorization Events": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties.itemsKeyValue"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_Updated_VBR_Settings": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Parse_VONE_Settings": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VONE_Settings_')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            },
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.watchlistItemType": {
                                        "type": "string"
                                      },
                                      "properties.watchlistItemId": {
                                        "type": "string"
                                      },
                                      "properties.tenantId": {
                                        "type": "string"
                                      },
                                      "properties.isDeleted": {
                                        "type": "boolean"
                                      },
                                      "properties.created": {
                                        "type": "string"
                                      },
                                      "properties.updated": {
                                        "type": "string"
                                      },
                                      "properties.createdBy": {
                                        "type": "object",
                                        "properties": {
                                          "email": {
                                            "type": "string"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "objectId": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.updatedBy": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string"
                                          },
                                          "objectId": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Alarms": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      "properties.entityMapping": {
                                        "type": "object"
                                      },
                                      "etag": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "type": {
                                        "type": "string"
                                      },
                                      "systemData": {
                                        "type": "object",
                                        "properties": {
                                          "createdBy": {
                                            "type": "string"
                                          },
                                          "createdByType": {
                                            "type": "string"
                                          },
                                          "createdAt": {
                                            "type": "string"
                                          },
                                          "lastModifiedBy": {
                                            "type": "string"
                                          },
                                          "lastModifiedByType": {
                                            "type": "string"
                                          },
                                          "lastModifiedAt": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties.watchlistItemType",
                                      "properties.watchlistItemId",
                                      "properties.tenantId",
                                      "properties.isDeleted",
                                      "properties.created",
                                      "properties.updated",
                                      "properties.createdBy",
                                      "properties.updatedBy",
                                      "properties.itemsKeyValue",
                                      "properties.entityMapping",
                                      "etag",
                                      "id",
                                      "name",
                                      "type",
                                      "systemData"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_VONE_Settings_": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Watchlists_-_Get_VONE_Settings_": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vone_settings')}/watchlistItems"
                      },
                      "runAfter": {
                        "Initialize_Variables": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Watchlists_-_Get_VBR_Settings": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "get",
                        "path": "/Watchlists/subscriptions/@{encodeURIComponent(parameters('subscriptionId'))}/resourceGroups/@{encodeURIComponent(parameters('resourceGroupName'))}/workspaces/@{encodeURIComponent(parameters('workspaceId'))}/watchlists/@{encodeURIComponent('vbr_settings')}/watchlistItems"
                      },
                      "runAfter": {
                        "Initialize_Variables": [
                          "Succeeded"
                        ]
                      }
                    },
                    "Parse_VBR_Settings": {
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Watchlists_-_Get_VBR_Settings')",
                        "schema": {
                          "type": "object",
                          "properties": {
                            "properties": {
                              "type": "object",
                              "properties": {
                                "watchlistItems": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "properties.itemsKeyValue": {
                                        "type": "object",
                                        "properties": {
                                          "Veeam Server Name": {
                                            "type": "string"
                                          },
                                          "Base URL": {
                                            "type": "string"
                                          },
                                          "Collect Malware Events": {
                                            "type": "string"
                                          },
                                          "Collect Security and Compliance Analyzer Results": {
                                            "type": "string"
                                          },
                                          "Collect Authorization Events": {
                                            "type": "string"
                                          },
                                          "Key Vault Password ID": {
                                            "type": "string"
                                          },
                                          "Key Vault Username ID": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "properties.itemsKeyValue"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Watchlists_-_Get_VBR_Settings": [
                          "Succeeded"
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionName": "[[parameters('AzureSentinelConnectionName')]",
                        "connectionId": "[[resourceId('Microsoft.Web/connections', parameters('AzureSentinelConnectionName'))]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId15'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId15')]",
                "contentId": "[variables('_playbookContentId15')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion15')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ],
          "metadata": {
            "title": "Veeam-SetupConnections",
            "description": "A Microsoft Sentinel playbook that configures Key Vault secrets and hybrid connections for Veeam servers. The playbook gets server settings and Key Vault secrets from vbr_settings and vone_settings watchlists, creates Key Vault IDs, and sets all collection flags to True if required.",
            "prerequisites": [
              "1. Microsoft Sentinel workspace configured.",
              "2. Permissions to create Logic Apps and API Connections.",
              "3. Permissions to assign roles to the Resource Group.",
              "4. Veeam Azure Function App deployed and configured.",
              "5. Azure Key Vault configured with appropriate access policies.",
              "6. Azure Relay namespace configured.",
              "7. VBR Settings watchlist configured in Microsoft Sentinel.",
              "8. Veeam ONE Settings watchlist configured in Microsoft Sentinel."
            ],
            "tags": [
              "Automation",
              "Veeam",
              "Setup",
              "Connections"
            ],
            "lastUpdateTime": "2025-09-02T01:02:00Z",
            "parameterTemplateVersion": "1.0.0",
            "postDeployment": [
              "1. Assign the Microsoft Sentinel Contributor role to the Logic App's managed identity on the Microsoft Sentinel workspace.",
              "2. Assign the Key Vault Administrator role to the Logic App's managed identity on the Key Vault resource.",
              "3. Assign the Website Contributor role to the Logic App's managed identity on the Function App resource.",
              "4. Assign the Azure Relay Owner role to the Logic App's managed identity on the Relay Namespace resource.",
              "5. **After playbook is run successfully**, you need to go to the Key Vault and set the password and username for each VBR server. Also, you need to install Hybrid Connections Manager into your network and set up connection there."
            ],
            "releaseNotes": {
              "version": "1.0",
              "title": "[variables('blanks')]",
              "notes": [
                "Initial version"
              ]
            }
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId15')]",
        "contentKind": "Playbook",
        "displayName": "Veeam-SetupConnections",
        "contentProductId": "[variables('_playbookcontentProductId15')]",
        "id": "[variables('_playbookcontentProductId15')]",
        "version": "[variables('playbookVersion15')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist1-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "Job Types Lookup",
        "watchlistAlias": "job_types_lookup",
        "source": "job_types_lookup.csv",
        "description": "Job Types Lookup.",
        "provider": "Microsoft",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "JobType",
        "rawContent": "JobType,JobTypeDescription\r\n0,Backup Job\r\n1,Replication Job\r\n2,Backup Copy Job\r\n3,SureBackup Job\r\n8,Quick Migration\r\n22,Rescan Job\r\n24,File to Tape Job\r\n28,Backup to Tape Job\r\n50,Replication Job\r\n51,Backup Copy Job\r\n52,MS SQL Log Backup Job\r\n54,Oracle Log Backup Job\r\n60,HPE StoreOnce Replication Job\r\n63,Backup Copy Job\r\n65,Backup Copy Job\r\n70,Backup Copy Job\r\n74,PostgreSQL Log Backup Job\r\n78,Entra ID Backup Job\r\n100,Configuration Backup Job\r\n104,Configuration Database Maintenance Job\r\n198,Tape Verification Job\r\n501,Tape Copy Job\r\n202,Restore Job\r\n203,Undo Failover Plan\r\n290,Restore Job\r\n316,CDP Policy\r\n4000,Agent Backup Job (Backup Server)\r\n12000,Agent Backup Job (Backup Server)\r\n12002,Agent Backup Job (Backup Policy)\r\n12003,Agent Backup Job (Backup Server)\r\n12100,Enterprise Plug-in Backup Job\r\n12101,Enterprise Plug-in Log Backup Job\r\n13000,File Backup job\r\n13003,File Backup Copy Job\r\n14000,Backup Job\r\n15000,Storage Snapshot Snapshot-Only Job\r\n15001,Storage Snapshot Backup Job\r\n15002,Storage Snapshot Copy Job\r\n15004,Storage Snapshot Restore Session\r\n18000,Archive Tier Backup Job\r\n18001,Archive Tier Restore Session\r\n18002,Archive Download Session\r\n18003,Archive Tier Synchronization Job\r\n18004,Archive Tier Backup Copy Job\r\n18005,Archive Tier Archiving Job\r\n18006,Publish Disk Session\r\n18008,Object Storage Repository Synchronization Job\r\n24002,Guest OS File Restore Session\r\n33000,SureBackup Scan only\r\n33001,SureBackup Scan only\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist2-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "apiVersion": "2022-08-01",
      "properties": {
        "displayName": "License Editions Lookup",
        "description": "License Editions Lookup.",
        "provider": "Microsoft",
        "source": "license_editions_lookup.csv",
        "defaultDuration": "P1000Y",
        "isDeleted": false,
        "sourceType": "Local file",
        "contentType": "text/csv",
        "numberOfLinesToSkip": 0,
        "rawContent": "Edition,EditionDescription\n-1,No License Installed\n0,Veeam Universal License\n1,Community Edition\n2,Enterprise Edition\n3,Enterprise Plus Edition",
        "itemsSearchKey": "Edition",
        "watchlistAlias": "license_editions_lookup"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist3-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "apiVersion": "2022-08-01",
      "properties": {
        "displayName": "License Types Lookup",
        "description": "License Types Lookup.",
        "sourceType": "Microsoft",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "source": "license_types_lookup.csv",
        "contentType": "text/csv",
        "rawContent": "Type,TypeDescription\n0,No License Installed\n1,Rental License\n2,NFR License\n3,Perpetual License\n4,Evaluation License\n5,Subscription License\n7,Promo License",
        "itemsSearchKey": "Type",
        "numberOfLinesToSkip": 0,
        "provider": "Veeam Software"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist4-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "apiVersion": "2022-08-01",
      "properties": {
        "displayName": "Operation Names Lookup",
        "description": "Operation Names Lookup.",
        "provider": "Microsoft",
        "source": "operation_names_lookup.csv",
        "sourceType": "Local file",
        "contentType": "text/csv",
        "numberOfLinesToSkip": 0,
        "rawContent": "Operation Id,OperationName\n0,Four-eyes authorization has been enabled\n1,Four-eyes authorization has been disabled\n100,Delete backup\n101,Delete log backup\n102,Delete configuration backup\n103,Disable four-eyes authorization\n104,Delete snapshot\n105,Delete infrastructure object\n106,Delete service provider\n107,Delete storage\n108,Update Veeam Backup & Replication security settings\n10000,Other operations",
        "itemsSearchKey": "Operation Id",
        "watchlistAlias": "operation_names_lookup"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist5-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "apiVersion": "2022-08-01",
      "properties": {
        "displayName": "Session States Lookup",
        "description": "Session States Lookup.",
        "provider": "Microsoft",
        "source": "session_states_lookup.csv",
        "sourceType": "Local file",
        "contentType": "text/csv",
        "numberOfLinesToSkip": 0,
        "rawContent": "JobResult,JobResultMessage\n0,Success\n2,Failed\n3,Warning\n5,In progress\n6,Pending\n13,CBT mode",
        "itemsSearchKey": "JobResult",
        "watchlistAlias": "session_states_lookup"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist6-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "apiVersion": "2022-08-01",
      "properties": {
        "displayName": "VBR Events Lookup",
        "description": "Veeam Software Backup & Replication Events Lookup.",
        "provider": "Microsoft",
        "source": "vbr_events_lookup.csv",
        "sourceType": "Local file",
        "contentType": "text/csv",
        "numberOfLinesToSkip": 0,
        "rawContent": "ID,Event Name,Type,Event Group,Severity,Default Severity\n115,Tape Erase Job Started,Veeam Backup & Replication,Security,high,high\n150,Backup Task Finished,Veeam Backup & Replication,Monitoring,none,none\n151,File Backup Job Finished,Veeam Backup & Replication,Monitoring,none,none\n190,Backup Job Finished,Veeam Backup & Replication,Monitoring,none,none\n194,File To Tape Job Finished,Veeam Backup & Replication,Monitoring,none,none\n198,Tape Verification Job,Veeam Backup & Replication,Monitoring,none,none\n200,Tape Copy Job,Veeam Backup & Replication,Monitoring,disabled,none\n251,Restore Task for Hyper-V VM FInished,Veeam Backup & Replication,Monitoring,none,none\n290,Restore Session Finished,Veeam Backup & Replication,Monitoring,none,none\n314,VM with no backup,Veeam ONE,Security,critical,critical\n315,VM with no backup (Hyper-V),Veeam ONE,Security,critical,critical\n331,VM with no replica,Veeam ONE,Security,medium,medium\n332,VM with no replica (Hyper-V),Veeam ONE,Security,critical,critical\n342,Possible ransomware activity (vSphere),Veeam ONE,Security,critical,critical\n344,Possible ransomware activity (Hyper-V),Veeam ONE,Security,critical,critical\n364,Suspicious incremental backup size,Veeam ONE,Security,critical,critical\n365,Backup Copy RPO,Veeam ONE,Security,critical,critical\n369,Unusual job duration,Veeam ONE,Security,medium,medium\n370,Computer with no backup,Veeam ONE,Security,critical,critical\n376,Immutability state,Veeam ONE,Security,medium,medium\n377,Immutability change tracking,Veeam ONE,Security,critical,critical\n378,Job disabled (Veeam Backup for Microsoft 365),Veeam ONE,Security,medium,medium\n381,Unusual job duration (Veeam Backup for Microsoft 365),Veeam ONE,Security,medium,medium\n390,SureBackup Job Finished,Veeam Backup & Replication,Monitoring,none,none\n391,Application with no recent data backup sessions,Veeam ONE,Security,medium,medium\n395,Backup server security & compliance state,Veeam ONE,Security,critical,critical\n403,Veeam malware detection change tracking,Veeam ONE,Security,critical,critical\n450,Backup Copy Task Finished,Veeam Backup & Replication,Monitoring,none,none\n451,File Backup Copy Job Finished,Veeam Backup & Replication,Monitoring,none,none\n490,Backup Copy Job Finished,Veeam Backup & Replication,Monitoring,none,none\n590,File Copy Job Finished,Veeam Backup & Replication,Monitoring,none,none\n592,VM Copy Job Finished,Veeam Backup & Replication,Monitoring,none,none\n610,Quick Migration Finished,Veeam Backup & Replication,Monitoring,none,none\n652,Active Full Backup for Backup Policy Finished,Veeam Backup & Replication,Monitoring,none,none\n790,Agent Backup Job Finished,Veeam Backup & Replication,Monitoring,none,none\n21224,Connection to Backup Repository Lost,Veeam Backup & Replication,Security,critical,critical\n23090,Job Deleted,Veeam Backup & Replication,Security,critical,critical\n23420,Job No Longer Used as Second Destination,Veeam Backup & Replication,Security,high,high\n23630,Tape Media Pool Deleted,Veeam Backup & Replication,Security,information,information\n23631,Tape Media Vault Deleted,Veeam Backup & Replication,Security,information,information\n23632,Tape medium Deleted,Veeam Backup & Replication,Security,high,high\n23633,Tape Library Deleted,Veeam Backup & Replication,Security,information,information\n24020,License Key Expiring,Veeam Backup & Replication,Security,information,information\n24030,License Key Expired,Veeam Backup & Replication,Security,high,high\n24040,License Support Expiring,Veeam Backup & Replication,Security,medium,medium\n24050,License Support Expired,Veeam Backup & Replication,Security,high,high\n24060,License Grace Period Started,Veeam Backup & Replication,Security,medium,medium\n24070,License Limit Exceeded,Veeam Backup & Replication,Security,medium,medium\n24080,License Key Removed,Veeam Backup & Replication,Security,high,high\n24114,Tenant Password Changed,Veeam Backup & Replication,Security,medium,medium\n24131,Cloud Gateway Settings Updated,Veeam Backup & Replication,Security,information,information\n24140,Cloud Gateway Deleted,Veeam Backup & Replication,Security,information,information\n24142,Cloud Gateway Pool Settings Updated,Veeam Backup & Replication,Security,information,information\n24143,Cloud Gateway Pool Deleted,Veeam Backup & Replication,Security,information,information\n24160,Tenant Quota Changed,Veeam Backup & Replication,Security,information,information\n24170,Tenant Quota Deleted,Veeam Backup & Replication,Security,information,information\n25000,Tenant State Changed,Veeam Backup & Replication,Security,information,information\n25210,Subtenant Deleted,Veeam Backup & Replication,Security,high,high\n25220,Subtenant Updated,Veeam Backup & Replication,Security,information,information\n25400,Credential Record Updated,Veeam Backup & Replication,Security,high,high\n25500,Credential Record Deleted,Veeam Backup & Replication,Security,critical,critical\n25700,Hypervisor Host Deleted,Veeam Backup & Replication,Security,information,information\n25800,Hypervisor Host Settings Updated,Veeam Backup & Replication,Security,information,information\n26000,Failover Plan Settings Updated,Veeam Backup & Replication,Security,information,information\n26100,Failover Plan Deleted,Veeam Backup & Replication,Security,medium,medium\n26110,Failover Plan Failed,Veeam Backup & Replication,Security,medium,medium\n26600,Failover Plan Started,Veeam Backup & Replication,Security,high,high\n26700,Failover Plan Stopped,Veeam Backup & Replication,Security,medium,medium\n26800,Tenant Replica Started,Veeam Backup & Replication,Security,information,information\n26900,Tenant Replica Stopped,Veeam Backup & Replication,Security,high,high\n27000,Cloud Replica Permanent Failover Performed by Tenant,Veeam Backup & Replication,Security,high,high\n27200,WAN Accelerator Settings Updated,Veeam Backup & Replication,Security,information,information\n27300,WAN Accelerator Deleted,Veeam Backup & Replication,Security,information,information\n27500,Service Provider Updated,Veeam Backup & Replication,Security,information,information\n27600,Service Provider Deleted,Veeam Backup & Replication,Security,information,information\n27900,Backup Proxy Deleted,Veeam Backup & Replication,Security,information,information\n28100,Backup Repository Settings Updated,Veeam Backup & Replication,Security,medium,medium\n28200,Backup Repository Deleted,Veeam Backup & Replication,Security,critical,critical\n28400,Host Settings Updated,Veeam Backup & Replication,Security,information,information\n28500,Host Deleted,Veeam Backup & Replication,Security,high,high\n28800,Tape Server Deleted,Veeam Backup & Replication,Security,information,information\n28850,NDMP Server Deleted,Veeam Backup & Replication,Security,information,information\n28920,File Share Deleted,Veeam Backup & Replication,Security,high,high\n28940,File Server Settings Updated,Veeam Backup & Replication,Security,information,information\n28950,File Server Deleted,Veeam Backup & Replication,Security,high,high\n28970,Object Storage Settings Updated,Veeam Backup & Replication,Security,medium,medium\n28980,Object Storage Deleted,Veeam Backup & Replication,Security,critical,critical\n29110,Protection Group Settings Updated,Veeam Backup & Replication,Security,information,information\n29120,Protection Group Deleted,Veeam Backup & Replication,Security,high,high\n29140,Objects for Protection Group Changed,Veeam Backup & Replication,Security,information,information\n29150,Objects for Protection Group Deleted,Veeam Backup & Replication,Security,high,high\n29800,Archive Repository Settings Updated,Veeam Backup & Replication,Security,medium,medium\n29900,Archive Repository Deleted,Veeam Backup & Replication,Security,critical,critical\n30100,Scale-Out Backup Repository Settings Updated,Veeam Backup & Replication,Security,high,high\n30200,Scale-Out Backup Repository Deleted,Veeam Backup & Replication,Security,critical,critical\n30400,Application Group Settings Updated,Veeam Backup & Replication,Security,information,information\n30500,Application Group Deleted,Veeam Backup & Replication,Security,information,information\n30700,Virtual Lab Settings Updated,Veeam Backup & Replication,Security,information,information\n30800,Virtual Lab Deleted,Veeam Backup & Replication,Security,information,information\n31000,General Settings Updated,Veeam Backup & Replication,Security,information,information\n31200,User or Group Added,Veeam Backup & Replication,Security,high,high\n31210,Adding User or Group Failed,Veeam Backup & Replication,Security,medium,medium\n31400,User or Group Deleted,Veeam Backup & Replication,Security,critical,critical\n31500,Configuration Backup Job Settings Updated,Veeam Backup & Replication,Security,information,information\n31600,Encryption Password Added,Veeam Backup & Replication,Security,information,information\n31700,Encryption Password Changed,Veeam Backup & Replication,Security,high,high\n31800,Encryption Password Deleted,Veeam Backup & Replication,Security,critical,critical\n31900,SSH Credentials Changed,Veeam Backup & Replication,Security,high,high\n32100,External Repository Settings Updated,Veeam Backup & Replication,Security,information,information\n32120,Objects for Job Deleted,Veeam Backup & Replication,Security,high,high\n32200,External Repository Deleted,Veeam Backup & Replication,Security,critical,critical\n32400,Global Network Traffic Rules Deleted,Veeam Backup & Replication,Security,information,information\n32800,Preferred Networks Deleted,Veeam Backup & Replication,Security,information,information\n36013,Recovery Token Deleted,Veeam Backup & Replication,Security,medium,medium\n36022,Backup Job for Application Backup Policy Finished,Veeam Backup & Replication,Monitoring,none,none\n36023,Backup Task for Application Backup Policy Started,Veeam Backup & Replication,Monitoring,none,none\n36024,Backup Task for Application Backup Policy Finished,Veeam Backup & Replication,Monitoring,none,none\n36026,Log Backup Job for Application Backup Policy Finished,Veeam Backup & Replication,Monitoring,none,none\n40201,Multi-Factor Authentication Disabled,Veeam Backup & Replication,Security,critical,critical\n40202,Multi-Factor Authentication Token Revoked,Veeam Backup & Replication,Security,medium,medium\n40204,Multi-Factor Authentication for User Disabled,Veeam Backup & Replication,Security,critical,critical\n40205,Invalid Code for Multi-Factor Authentication Entered,Veeam Backup & Replication,Security,high,high\n40206,Allowed Attempts for Multi-Factor Authentication Exceeded,Veeam Backup & Replication,Security,critical,critical\n40290,Restore Session Finished,Veeam Backup & Replication,Monitoring,none,none\n40400,Global VM Exclusions Added,Veeam Backup & Replication,Security,high,high\n40500,Global VM Exclusions Deleted,Veeam Backup & Replication,Security,medium,medium\n40600,Global VM Exclusions Changed,Veeam Backup & Replication,Security,high,high\n40700,Configuration Backup Job Finished,Veeam Backup & Replication,Monitoring,none,none\n40800,Configuration Restore Session Finished,Veeam Backup & Replication,Monitoring,none,none\n41200,Detaching Backups Started,Veeam Backup & Replication,Security,information,information\n41401,Storage Settings Updated,Veeam Backup & Replication,Security,information,information\n41402,Storage Deleted,Veeam Backup & Replication,Security,critical,critical\n41600,Malware Activity Detected,Veeam Backup & Replication,Security,critical,critical\n41610,Object Marked as Clean,Veeam Backup & Replication,Security,information,information\n41800,Attempt to Delete Backup Failed,Veeam Backup & Replication,Security,critical,critical\n41810,Attempt to Update Security Object Failed,Veeam Backup & Replication,Security,critical,critical\n42210,Malware Detection Session Finished,Veeam Backup & Replication,Security,information,information\n42220,Restore Point Marked as Infected,Veeam Backup & Replication,Security,critical,critical\n42230,Restore Point Marked as Clean,Veeam Backup & Replication,Security,information,information\n42260,Objects Added to Malware Detection Exclusions,Veeam Backup & Replication,Security,high,high\n42270,Objects Deleted from Malware Detection Exclusions,Veeam Backup & Replication,Security,information,information\n42280,Malware Detection Exclusions List Updated,Veeam Backup & Replication,Security,high,high\n42290,Malware Detection Settings Updated,Veeam Backup & Replication,Security,high,high\n42301,KMS Server Deleted,Veeam Backup & Replication,Security,critical,critical\n42302,KMS Server Settings Updated,Veeam Backup & Replication,Security,high,high\n42401,Four-Eyes Authorization Disabled,Veeam Backup & Replication,Security,critical,critical\n42402,Four-Eyes Authorization Request Created,Veeam Backup & Replication,Security,critical,critical\n42403,Four-Eyes Authorization Request Approved,Veeam Backup & Replication,Monitoring,none,none\n42404,Four-Eyes Authorization Request Rejected,Veeam Backup & Replication,Security,information,information\n42405,Four-Eyes Authorization Request Expired,Veeam Backup & Replication,Security,high,high\n42500,KMS Key Rotation Job Finished,Veeam Backup & Replication,Security,information,information",
        "itemsSearchKey": "ID",
        "watchlistAlias": "vbr_events_lookup"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist7-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "Action Results Lookup",
        "watchlistAlias": "action_results_lookup",
        "source": "action_results_lookup.csv",
        "description": "Action Results Lookup.",
        "provider": "Microsoft",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "JobResult",
        "rawContent": "JobResult,JobResultMessage\r\n-1,None\r\n0,Success\r\n1,Warning\r\n2,Failed\r\n3,Working\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist8-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "Veeam Backup & Replication Settings",
        "watchlistAlias": "vbr_settings",
        "source": "vbr_settings.csv",
        "description": "This watchlist lists Veeam Backup & Replication servers and the event types to collect. To add a server, specify Veeam Server Name and Base URL. Then run the Veeam-SetupConnections Playbook. The playbook sets the collection flags to true and creates keyVaultIds if they are empty. Otherwise, it uses the values you provide to configure Hybrid Connections and Key Vault secrets.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "Veeam Server Name",
        "rawContent": "Veeam Server Name,Base URL,Collect Malware Events,Collect Security and Compliance Analyzer Results,Collect Authorization Events,Collect Configuration Backups,Key Vault Username ID,Key Vault Password ID\r\nExampleServerName,https://ExampleServerName.domain.example:9419,true,true,true,true,ExampleServerNameUsername,ExampleServerNamePassword\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist9-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "VONE Settings",
        "watchlistAlias": "vone_settings",
        "source": "vone_settings.csv",
        "description": "This watchlist lists Veeam ONE servers and a flag that controls event collection. To add a server, specify Veeam Server Name and Base URL. Then run the Veeam-SetupConnections Playbook. The playbook sets the collection flag to true and creates keyVaultIds if they are empty. Otherwise, it uses the values you provide to configure Hybrid Connections and Key Vault secrets.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "Veeam Server Name",
        "rawContent": "Veeam Server Name,Base URL,Collect Alarms,Key Vault Username ID,Key Vault Password ID\r\nExampleServerName,https://ExampleServerName.domain.example:1239,true,ExampleServerNameUsername,ExampleServerNamePassword\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist10-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/Watchlists",
      "properties": {
        "displayName": "Coveware Settings",
        "watchlistAlias": "coveware_settings",
        "source": "coveware_settings.csv",
        "description": "This watchlist defines Coveware server settings for findings data collection. You can disable data collection by setting the Collect Coveware Findings flag to false.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "Coveware Server Name",
        "rawContent": "Coveware Server Name,Collect Coveware Findings,Coveware Base URL,Key Vault Password ID,Key Vault Username ID,Key Vault Client ID\r\nCovewareServer,true,https://api.coveware.com,CovewareServerPasswordId,CovewareServerUsernameId,CovewareServerClientId\r\n"
      },
      "apiVersion": "2022-08-01"
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('watchlist11-id'))]",
      "type": "Microsoft.OperationalInsights/workspaces/providers/watchlists",
      "apiVersion": "2023-02-01",
      "properties": {
        "displayName": "Veeam Collection Schedule Settings",
        "watchlistAlias": "collection_schedule_settings",
        "source": "collection_schedule_settings.csv",
        "description": "This watchlist stores the configuration for schedules and recurrence intervals used by Veeam collection playbooks. To apply the changes, run the Veeam-ChangeCollectionTime playbook.",
        "provider": "Custom",
        "isDeleted": false,
        "defaultDuration": "P1000Y",
        "contentType": "Text/Csv",
        "numberOfLinesToSkip": 0,
        "itemsSearchKey": "CollectionPlaybookName",
        "rawContent": "CollectionPlaybookName,RecurrenceInterval,TimeUnit\r\nVeeam-CollectMalwareEvents,1,Day\r\nVeeam-CollectVeeamAuthorizationEvents,1,Day\r\nVeeam-CollectSecurityComplianceAnalyzerResult,1,Day\r\nVeeam-CollectVeeamONEAlarms,1,Day\r\nVeeam-CollectCovewareFindings,1,Day\r\nVeeam-CollectConfigurationBackups,1,Day\r\n"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_GetJobFinished Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Veeam Job Finished Events",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Veeam_GetJobFinished",
                "query": "let vbr_events_lookup = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nlet action_results_lookup = union isfuzzy=true \n    (datatable(JobResult:string, JobResultMessage:string)[]),\n    (_GetWatchlist(\"action_results_lookup\")); \nlet job_types_lookup = union isfuzzy=true \n    (datatable(JobType:string, JobTypeDescription:string)[]),\n    (_GetWatchlist(\"job_types_lookup\")); \nSyslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId in  (\"150\", \"151\", \"190\", \"194\", \"198\", \"200\", \"250\", \"251\", \"290\", \"390\", \"450\", \"451\", \"490\", \"590\", \"592\", \"610\", \"790\", \"36022\", \"36026\", \"40290\", \"40800\")\n| lookup kind=leftouter (vbr_events_lookup) \n    on $left.instanceId == $right.ID\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend event_module = Type1, original_host = Computer \n| extend Result = extract(\"Result=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend Status = extract(\"Status=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend JobResultCode = case(\n    instanceId in (\"198\", \"290\", \"40290\", \"42210\", \"42500\"), Result,\n    instanceId in (\"150\", \"151\", \"450\", \"451\"), Status,\n    extract(\"JobResult=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n)\n| lookup kind=leftouter (action_results_lookup)\n    on $left.JobResultCode == $right.JobResult\n| extend Platform = extract(\"Platform=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend Version = extract(\"Version=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend JobSessionID = extract(\"JobSessionID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend JobID = extract(\"JobID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend JobType = case ( \n    instanceId == \"198\", \"198\",\n    instanceId == \"290\", \"198\",\n    instanceId == \"40800\", \"40800\",\n    instanceId == \"40290\", \"290\",\n    extract(\"JobType=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n)\n| lookup kind=leftouter (job_types_lookup)\n    on $left.JobType == $right.JobType\n| extend Allowance = Severity != 'disabled'\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult = JobResultCode, JobResultMessage, JobType, JobTypeDescription, Allowance, SyslogMessage\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetJobFinished')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Veeam",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Parser for Veeam Job Finished Events",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Veeam Job Finished Events",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Veeam_GetJobFinished",
        "query": "let vbr_events_lookup = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nlet action_results_lookup = union isfuzzy=true \n    (datatable(JobResult:string, JobResultMessage:string)[]),\n    (_GetWatchlist(\"action_results_lookup\")); \nlet job_types_lookup = union isfuzzy=true \n    (datatable(JobType:string, JobTypeDescription:string)[]),\n    (_GetWatchlist(\"job_types_lookup\")); \nSyslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId in  (\"150\", \"151\", \"190\", \"194\", \"198\", \"200\", \"250\", \"251\", \"290\", \"390\", \"450\", \"451\", \"490\", \"590\", \"592\", \"610\", \"790\", \"36022\", \"36026\", \"40290\", \"40800\")\n| lookup kind=leftouter (vbr_events_lookup) \n    on $left.instanceId == $right.ID\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend event_module = Type1, original_host = Computer \n| extend Result = extract(\"Result=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend Status = extract(\"Status=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend JobResultCode = case(\n    instanceId in (\"198\", \"290\", \"40290\", \"42210\", \"42500\"), Result,\n    instanceId in (\"150\", \"151\", \"450\", \"451\"), Status,\n    extract(\"JobResult=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n)\n| lookup kind=leftouter (action_results_lookup)\n    on $left.JobResultCode == $right.JobResult\n| extend Platform = extract(\"Platform=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend Version = extract(\"Version=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| extend JobSessionID = extract(\"JobSessionID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend JobID = extract(\"JobID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend JobType = case ( \n    instanceId == \"198\", \"198\",\n    instanceId == \"290\", \"198\",\n    instanceId == \"40800\", \"40800\",\n    instanceId == \"40290\", \"290\",\n    extract(\"JobType=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n)\n| lookup kind=leftouter (job_types_lookup)\n    on $left.JobType == $right.JobType\n| extend Allowance = Severity != 'disabled'\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult = JobResultCode, JobResultMessage, JobType, JobTypeDescription, Allowance, SyslogMessage\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetJobFinished')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_GetVeeamONEAlarms Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Veeam ONE Events",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Veeam_GetVeeamONEAlarms",
                "query": "let watchlist = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nSyslog\n| where SyslogMessage has \"predefined_alarm_id\"\n| extend predefined_alarm_id = extract(\"predefined_alarm_id=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| where predefined_alarm_id in (\"395\", \"364\", \"369\", \"391\", \"365\", \"370\", \"314\", \"331\", \"376\", \"377\", \"403\", \"316\", \"342\", \"381\", \"315\", \"332\", \"344\", \"378\")\n| lookup kind=leftouter (watchlist) \n    on $left.predefined_alarm_id == $right.ID\n| extend alarm_details = extract(\"alarm_details=\\\"(?<alarm_details>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend alarm_name = extract(\"alarm_name=\\\"(?<alarm_name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend alarm_type = extract(\"alarm_type=\\\"(?<alarm_type>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend event_module = extract(\"event_module=\\\"(?<event_module>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend eventtype = extract(\"eventtype=\\\"(?<eventtype>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend object_name = extract(\"object_name=\\\"(?<object_name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend object_path = extract(\"object_path=\\\"(?<object_path>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend original_host = extract(\"original_host=\\\"(?<original_host>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend predefined_alarm_id = extract(\"predefined_alarm_id=\\\"(?<predefined_alarm_id>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend severity = extract(\"severity=\\\"(?<severity>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend status_new = extract(\"status_new=\\\"(?<status_new>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend status_old = extract(\"status_old=\\\"(?<status_old>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend VoneHostName=Computer\n| extend SeverityDescription = case(Severity==\"critical\",\"Critical\",\n    Severity==\"high\",\"High\",\n    Severity==\"medium\",\"Medium\",\n    Severity==\"information\",\"Information\", \n    \"Unknown\")\n| project [\"Event Name\"], TimeGenerated, alarm_details, alarm_name, alarm_type, object_name, object_path, predefined_alarm_id, Severity, status_new, status_old, VoneHostName, SeverityDescription, SyslogMessage\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetVeeamONEAlarms')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Veeam",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Parser for Veeam ONE Events",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Veeam ONE Events",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Veeam_GetVeeamONEAlarms",
        "query": "let watchlist = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nSyslog\n| where SyslogMessage has \"predefined_alarm_id\"\n| extend predefined_alarm_id = extract(\"predefined_alarm_id=\\\"(\\\\d+)\\\"\", 1, SyslogMessage)\n| where predefined_alarm_id in (\"395\", \"364\", \"369\", \"391\", \"365\", \"370\", \"314\", \"331\", \"376\", \"377\", \"403\", \"316\", \"342\", \"381\", \"315\", \"332\", \"344\", \"378\")\n| lookup kind=leftouter (watchlist) \n    on $left.predefined_alarm_id == $right.ID\n| extend alarm_details = extract(\"alarm_details=\\\"(?<alarm_details>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend alarm_name = extract(\"alarm_name=\\\"(?<alarm_name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend alarm_type = extract(\"alarm_type=\\\"(?<alarm_type>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend event_module = extract(\"event_module=\\\"(?<event_module>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend eventtype = extract(\"eventtype=\\\"(?<eventtype>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend object_name = extract(\"object_name=\\\"(?<object_name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend object_path = extract(\"object_path=\\\"(?<object_path>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend original_host = extract(\"original_host=\\\"(?<original_host>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend predefined_alarm_id = extract(\"predefined_alarm_id=\\\"(?<predefined_alarm_id>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend severity = extract(\"severity=\\\"(?<severity>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend status_new = extract(\"status_new=\\\"(?<status_new>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend status_old = extract(\"status_old=\\\"(?<status_old>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend VoneHostName=Computer\n| extend SeverityDescription = case(Severity==\"critical\",\"Critical\",\n    Severity==\"high\",\"High\",\n    Severity==\"medium\",\"Medium\",\n    Severity==\"information\",\"Information\", \n    \"Unknown\")\n| project [\"Event Name\"], TimeGenerated, alarm_details, alarm_name, alarm_type, object_name, object_path, predefined_alarm_id, Severity, status_new, status_old, VoneHostName, SeverityDescription, SyslogMessage\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetVeeamONEAlarms')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_GetFinishedConfigurationBackupSessions Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Veeam Configuration Backup Session Finished Events",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Veeam_GetFinishedConfigurationBackupSessions",
                "query": "Syslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId == \"40700\"\n| extend UserName = extract(\"UserName=\\\"(?<UserName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend fullName = extract(\"fullName=\\\"(?<fullName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param3 = extract(\"param3=\\\"(?<param3>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param6 = extract(\"param6=\\\"(?<param6>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Result = extract(\"Result=\\\"(?<Result>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user =  extract(\"user=\\\"(?<user>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend InitiatorName =  extract(\"InitiatorName=\\\"(?<InitiatorName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend src =  extract(\"src=\\\"(?<src>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user = case(\n    isnotnull(user) and user != \"\", \n        user, \n    instanceId in (\"40201\",\"42402\",\"42404\",\"42405\",\"40204\",\"40400\",\"40500\",\"40600\",\"40700\",\"42400\",\"42401\",\"42403\"), \n        iff(isnull(fullName) or fullName == \"\", \"unknown\", fullName), \n    instanceId in (\"36013\"), \n        iff(isnull(InitiatorName) or InitiatorName == \"\", \"unknown\", InitiatorName), \n    instanceId in (\"41800\",\"41810\"), \n        iff(isnull(param3) or param3 == \"\", \"unknown\", param3), \n    instanceId in (\"23090\",\"23420\",\"41402\"), \n        iff(isnull(param6) or param6 == \"\", \"unknown\", param6), \n    instanceId in (\"40205\",\"40206\",\"41610\",\"42301\",\"24080\",\"28200\",\"28500\",\"28920\",\"28950\",\"29120\",\"29150\",\"29900\",\"30200\",\"30500\",\"32120\",\"32200\",\"25500\",\"28100\",\"29800\",\"31600\",\"31700\",\"31800\",\"31900\",\"42260\",\"42270\",\"42280\",\"42302\",\"30100\",\"30400\",\"31500\",\"31210\",\"31400\",\"41600\",\"31200\",\"28970\",\"28980\",\"42230\",\"42220\",\"42290\"), \n        iff(isnull(UserName) or UserName == \"\", \"unknown\", UserName),\n    \"unknown\" \n)\n| extend Result = extract(\"Result:\\\\s*([^\\\\.]*)\", 1, Description)\n| project TimeGenerated, Computer, user, Description,  Result, SyslogMessage, instanceId\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetFinishedConfigurationBackupSessions')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Veeam",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Parser for Veeam Configuration Backup Session Finished Events",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Veeam Configuration Backup Session Finished Events",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Veeam_GetFinishedConfigurationBackupSessions",
        "query": "Syslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId == \"40700\"\n| extend UserName = extract(\"UserName=\\\"(?<UserName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend fullName = extract(\"fullName=\\\"(?<fullName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param3 = extract(\"param3=\\\"(?<param3>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param6 = extract(\"param6=\\\"(?<param6>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Result = extract(\"Result=\\\"(?<Result>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user =  extract(\"user=\\\"(?<user>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend InitiatorName =  extract(\"InitiatorName=\\\"(?<InitiatorName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend src =  extract(\"src=\\\"(?<src>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user = case(\n    isnotnull(user) and user != \"\", \n        user, \n    instanceId in (\"40201\",\"42402\",\"42404\",\"42405\",\"40204\",\"40400\",\"40500\",\"40600\",\"40700\",\"42400\",\"42401\",\"42403\"), \n        iff(isnull(fullName) or fullName == \"\", \"unknown\", fullName), \n    instanceId in (\"36013\"), \n        iff(isnull(InitiatorName) or InitiatorName == \"\", \"unknown\", InitiatorName), \n    instanceId in (\"41800\",\"41810\"), \n        iff(isnull(param3) or param3 == \"\", \"unknown\", param3), \n    instanceId in (\"23090\",\"23420\",\"41402\"), \n        iff(isnull(param6) or param6 == \"\", \"unknown\", param6), \n    instanceId in (\"40205\",\"40206\",\"41610\",\"42301\",\"24080\",\"28200\",\"28500\",\"28920\",\"28950\",\"29120\",\"29150\",\"29900\",\"30200\",\"30500\",\"32120\",\"32200\",\"25500\",\"28100\",\"29800\",\"31600\",\"31700\",\"31800\",\"31900\",\"42260\",\"42270\",\"42280\",\"42302\",\"30100\",\"30400\",\"31500\",\"31210\",\"31400\",\"41600\",\"31200\",\"28970\",\"28980\",\"42230\",\"42220\",\"42290\"), \n        iff(isnull(UserName) or UserName == \"\", \"unknown\", UserName),\n    \"unknown\" \n)\n| extend Result = extract(\"Result:\\\\s*([^\\\\.]*)\", 1, Description)\n| project TimeGenerated, Computer, user, Description,  Result, SyslogMessage, instanceId\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetFinishedConfigurationBackupSessions')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_GetSecurityEvents Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Parser for Veeam Security VBR Events",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "Veeam_GetSecurityEvents",
                "query": "let watchlist = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nSyslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId in (\"115\", \"21224\", \"23090\", \"23420\", \"23630\", \"23631\", \"23632\", \"23633\", \"24020\", \"24030\", \"24040\", \"24050\", \"24060\", \"24070\", \"24080\", \"24114\", \"24131\", \"24140\", \"24142\", \"24143\", \"24160\", \"24170\", \"25000\", \"25210\", \"25220\", \"25400\", \"25500\", \"25700\", \"25800\", \"26000\", \"26100\", \"26110\", \"26600\", \"26700\", \"26800\", \"26900\", \"27000\", \"27200\", \"27300\", \"27500\", \"27600\", \"27900\", \"28100\", \"28200\", \"28400\", \"28500\", \"28800\", \"28850\", \"28920\", \"28940\", \"28950\", \"28970\", \"28980\", \"29110\", \"29120\", \"29140\", \"29150\", \"29800\", \"29900\", \"30100\", \"30200\", \"30400\", \"30500\", \"30700\", \"30800\", \"31000\", \"31200\", \"31210\", \"31400\", \"31500\", \"31600\", \"31700\", \"31800\", \"31900\", \"32100\", \"32120\", \"32200\", \"32400\", \"32800\", \"36013\", \"40201\", \"40202\", \"40204\", \"40205\", \"40206\", \"40400\", \"40500\", \"40600\", \"41200\", \"41401\", \"41402\", \"41600\", \"41610\", \"41800\", \"41810\", \"42210\", \"42220\", \"42230\", \"42260\", \"42270\", \"42280\", \"42290\", \"42301\", \"42302\", \"42401\", \"42402\", \"42404\", \"42405\", \"42500\")\n| lookup kind=leftouter (watchlist) \n    on $left.instanceId == $right.ID\n| extend UserName = extract(\"UserName=\\\"(?<UserName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend fullName = extract(\"fullName=\\\"(?<fullName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param3 = extract(\"param3=\\\"(?<param3>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param6 = extract(\"param6=\\\"(?<param6>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Result = extract(\"Result=\\\"(?<Result>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user =  extract(\"user=\\\"(?<user>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend InitiatorName =  extract(\"InitiatorName=\\\"(?<InitiatorName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend src =  extract(\"src=\\\"(?<src>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user = case(\n    isnotnull(user) and user != \"\", \n        user, \n    instanceId in (\"40201\",\"42402\",\"42404\",\"42405\",\"40204\",\"40400\",\"40500\",\"40600\",\"40700\",\"42400\",\"42401\",\"42403\"), \n        iff(isnull(fullName) or fullName == \"\", \"unknown\", fullName), \n    instanceId in (\"36013\"), \n        iff(isnull(InitiatorName) or InitiatorName == \"\", \"unknown\", InitiatorName), \n    instanceId in (\"41800\",\"41810\"), \n        iff(isnull(param3) or param3 == \"\", \"unknown\", param3), \n    instanceId in (\"23090\",\"23420\",\"41402\"), \n        iff(isnull(param6) or param6 == \"\", \"unknown\", param6), \n    instanceId in (\"40205\",\"40206\",\"41610\",\"42301\",\"24080\",\"28200\",\"28500\",\"28920\",\"28950\",\"29120\",\"29150\",\"29900\",\"30200\",\"30500\",\"32120\",\"32200\",\"25500\",\"28100\",\"29800\",\"31600\",\"31700\",\"31800\",\"31900\",\"42260\",\"42270\",\"42280\",\"42302\",\"30100\",\"30400\",\"31500\",\"31210\",\"31400\",\"41600\",\"31200\",\"28970\",\"28980\",\"42230\",\"42220\",\"42290\"), \n        iff(isnull(UserName) or UserName == \"\", \"unknown\", UserName),\n    \"unknown\" \n)\n| extend src = iff(isnull(src) or src == \"\", \n    iff(isnull(Description) or Description == \"\", \"unknown\", Description), \n    src)\n| extend SeverityDescription = case(Severity==\"critical\",\"Critical\",\n    Severity==\"high\",\"High\",\n    Severity==\"medium\",\"Medium\",\n    Severity==\"information\",\"Information\", \n    \"Unknown\")\n| extend event_module = Type1, original_host = Computer \n| project TimeGenerated, Description, event_module, instanceId, original_host, Severity, src, user, SeverityDescription, [\"Event Name\"], SyslogMessage\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetSecurityEvents')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Veeam",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Parser for Veeam Security VBR Events",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Parser for Veeam Security VBR Events",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "Veeam_GetSecurityEvents",
        "query": "let watchlist = union isfuzzy=true \n    (datatable(ID:string, Severity:string, Type1:string, [\"Event Name\"]:string)[]),\n    (_GetWatchlist(\"vbr_events_lookup\")); \nSyslog\n| where SyslogMessage has \"instanceId\"\n| extend instanceId = extract(\"instanceId=(\\\\d+)\", 1, SyslogMessage)  \n| filter instanceId in (\"115\", \"21224\", \"23090\", \"23420\", \"23630\", \"23631\", \"23632\", \"23633\", \"24020\", \"24030\", \"24040\", \"24050\", \"24060\", \"24070\", \"24080\", \"24114\", \"24131\", \"24140\", \"24142\", \"24143\", \"24160\", \"24170\", \"25000\", \"25210\", \"25220\", \"25400\", \"25500\", \"25700\", \"25800\", \"26000\", \"26100\", \"26110\", \"26600\", \"26700\", \"26800\", \"26900\", \"27000\", \"27200\", \"27300\", \"27500\", \"27600\", \"27900\", \"28100\", \"28200\", \"28400\", \"28500\", \"28800\", \"28850\", \"28920\", \"28940\", \"28950\", \"28970\", \"28980\", \"29110\", \"29120\", \"29140\", \"29150\", \"29800\", \"29900\", \"30100\", \"30200\", \"30400\", \"30500\", \"30700\", \"30800\", \"31000\", \"31200\", \"31210\", \"31400\", \"31500\", \"31600\", \"31700\", \"31800\", \"31900\", \"32100\", \"32120\", \"32200\", \"32400\", \"32800\", \"36013\", \"40201\", \"40202\", \"40204\", \"40205\", \"40206\", \"40400\", \"40500\", \"40600\", \"41200\", \"41401\", \"41402\", \"41600\", \"41610\", \"41800\", \"41810\", \"42210\", \"42220\", \"42230\", \"42260\", \"42270\", \"42280\", \"42290\", \"42301\", \"42302\", \"42401\", \"42402\", \"42404\", \"42405\", \"42500\")\n| lookup kind=leftouter (watchlist) \n    on $left.instanceId == $right.ID\n| extend UserName = extract(\"UserName=\\\"(?<UserName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend fullName = extract(\"fullName=\\\"(?<fullName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param3 = extract(\"param3=\\\"(?<param3>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend param6 = extract(\"param6=\\\"(?<param6>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Result = extract(\"Result=\\\"(?<Result>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user =  extract(\"user=\\\"(?<user>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend InitiatorName =  extract(\"InitiatorName=\\\"(?<InitiatorName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Description =  extract(\"Description=\\\"(?<Description>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend src =  extract(\"src=\\\"(?<src>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend user = case(\n    isnotnull(user) and user != \"\", \n        user, \n    instanceId in (\"40201\",\"42402\",\"42404\",\"42405\",\"40204\",\"40400\",\"40500\",\"40600\",\"40700\",\"42400\",\"42401\",\"42403\"), \n        iff(isnull(fullName) or fullName == \"\", \"unknown\", fullName), \n    instanceId in (\"36013\"), \n        iff(isnull(InitiatorName) or InitiatorName == \"\", \"unknown\", InitiatorName), \n    instanceId in (\"41800\",\"41810\"), \n        iff(isnull(param3) or param3 == \"\", \"unknown\", param3), \n    instanceId in (\"23090\",\"23420\",\"41402\"), \n        iff(isnull(param6) or param6 == \"\", \"unknown\", param6), \n    instanceId in (\"40205\",\"40206\",\"41610\",\"42301\",\"24080\",\"28200\",\"28500\",\"28920\",\"28950\",\"29120\",\"29150\",\"29900\",\"30200\",\"30500\",\"32120\",\"32200\",\"25500\",\"28100\",\"29800\",\"31600\",\"31700\",\"31800\",\"31900\",\"42260\",\"42270\",\"42280\",\"42302\",\"30100\",\"30400\",\"31500\",\"31210\",\"31400\",\"41600\",\"31200\",\"28970\",\"28980\",\"42230\",\"42220\",\"42290\"), \n        iff(isnull(UserName) or UserName == \"\", \"unknown\", UserName),\n    \"unknown\" \n)\n| extend src = iff(isnull(src) or src == \"\", \n    iff(isnull(Description) or Description == \"\", \"unknown\", Description), \n    src)\n| extend SeverityDescription = case(Severity==\"critical\",\"Critical\",\n    Severity==\"high\",\"High\",\n    Severity==\"medium\",\"Medium\",\n    Severity==\"information\",\"Information\", \n    \"Unknown\")\n| extend event_module = Type1, original_host = Computer \n| project TimeGenerated, Description, event_module, instanceId, original_host, Severity, src, user, SeverityDescription, [\"Event Name\"], SyslogMessage\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'Veeam_GetSecurityEvents')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Adding_User_or_Group_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed attempts to add a user or user group to Veeam Backup & Replication.",
                "displayName": "Adding User or Group Failed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31210\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Adding User or Group Failed",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject2').analyticRuleTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Application_Group_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject2').analyticRuleVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an application group is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Application Group Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30500\n| extend Name =  extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Application Group Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject2').analyticRuleId2,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 2",
                "parentId": "[variables('analyticRuleObject2').analyticRuleId2]",
                "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject2').analyticRuleVersion2]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
        "contentKind": "AnalyticsRule",
        "displayName": "Application Group Deleted",
        "contentProductId": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "id": "[variables('analyticRuleObject2')._analyticRulecontentProductId2]",
        "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject3').analyticRuleTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Application_Group_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject3').analyticRuleVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when application group settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Application Group Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30400\n| extend Name =  extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Application Group Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject3').analyticRuleId3,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 3",
                "parentId": "[variables('analyticRuleObject3').analyticRuleId3]",
                "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject3').analyticRuleVersion3]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
        "contentKind": "AnalyticsRule",
        "displayName": "Application Group Settings Updated",
        "contentProductId": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "id": "[variables('analyticRuleObject3')._analyticRulecontentProductId3]",
        "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject4').analyticRuleTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Archive_Repository_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject4').analyticRuleVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an archive repository is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Archive Repository Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29900\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject4').analyticRuleId4,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 4",
                "parentId": "[variables('analyticRuleObject4').analyticRuleId4]",
                "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject4').analyticRuleVersion4]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
        "contentKind": "AnalyticsRule",
        "displayName": "Archive Repository Deleted",
        "contentProductId": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "id": "[variables('analyticRuleObject4')._analyticRulecontentProductId4]",
        "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject5').analyticRuleTemplateSpecName5]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Archive_Repository_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject5').analyticRuleVersion5]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when archive repository settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Archive Repository Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29800\n| extend Name =  extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = Name,\n   MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject5').analyticRuleId5,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 5",
                "parentId": "[variables('analyticRuleObject5').analyticRuleId5]",
                "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject5').analyticRuleVersion5]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
        "contentKind": "AnalyticsRule",
        "displayName": "Archive Repository Settings Updated",
        "contentProductId": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "id": "[variables('analyticRuleObject5')._analyticRulecontentProductId5]",
        "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject6').analyticRuleTemplateSpecName6]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Attempt_to_Delete_Backup_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject6').analyticRuleVersion6]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed backup operations. This might indicate system or storage issues, or a potential sabotage of the backup infrastructure.",
                "displayName": "Attempt to Delete Backup Failed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41800\n| extend Endpoint = extract(\"param2=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Endpoint\"] = Endpoint,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject6').analyticRuleId6,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 6",
                "parentId": "[variables('analyticRuleObject6').analyticRuleId6]",
                "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject6').analyticRuleVersion6]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
        "contentKind": "AnalyticsRule",
        "displayName": "Attempt to Delete Backup Failed",
        "contentProductId": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "id": "[variables('analyticRuleObject6')._analyticRulecontentProductId6]",
        "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject7').analyticRuleTemplateSpecName7]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Attempt_to_Update_Security_Object_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject7').analyticRuleVersion7]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed attempts to update security objects in Veeam Backup & Replication. Security objects include users and roles, credential records, certificates, or passwords.",
                "displayName": "Attempt to Update Security Object Failed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41810\n| extend Endpoint = extract(\"param2=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Endpoint\"] = Endpoint,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject7').analyticRuleId7,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 7",
                "parentId": "[variables('analyticRuleObject7').analyticRuleId7]",
                "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject7').analyticRuleVersion7]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
        "contentKind": "AnalyticsRule",
        "displayName": "Attempt to Update Security Object Failed",
        "contentProductId": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "id": "[variables('analyticRuleObject7')._analyticRulecontentProductId7]",
        "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject8').analyticRuleTemplateSpecName8]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Backup_Proxy_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject8').analyticRuleVersion8]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a backup proxy is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Backup Proxy Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27900\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject8').analyticRuleId8,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 8",
                "parentId": "[variables('analyticRuleObject8').analyticRuleId8]",
                "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject8').analyticRuleVersion8]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
        "contentKind": "AnalyticsRule",
        "displayName": "Backup Proxy Deleted",
        "contentProductId": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "id": "[variables('analyticRuleObject8')._analyticRulecontentProductId8]",
        "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject9').analyticRuleTemplateSpecName9]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Backup_Repository_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject9').analyticRuleVersion9]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a backup repository is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Backup Repository Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28200\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject9').analyticRuleId9,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 9",
                "parentId": "[variables('analyticRuleObject9').analyticRuleId9]",
                "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject9').analyticRuleVersion9]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
        "contentKind": "AnalyticsRule",
        "displayName": "Backup Repository Deleted",
        "contentProductId": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "id": "[variables('analyticRuleObject9')._analyticRulecontentProductId9]",
        "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject10').analyticRuleTemplateSpecName10]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Backup_Repository_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject10').analyticRuleVersion10]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when backup repository settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Backup Repository Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28100\n| extend RepositoryName =  extract(\"RepositoryName=\\\"(?<RepositoryName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Object Name\"] = RepositoryName,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject10').analyticRuleId10,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 10",
                "parentId": "[variables('analyticRuleObject10').analyticRuleId10]",
                "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject10').analyticRuleVersion10]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
        "contentKind": "AnalyticsRule",
        "displayName": "Backup Repository Settings Updated",
        "contentProductId": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "id": "[variables('analyticRuleObject10')._analyticRulecontentProductId10]",
        "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject11').analyticRuleTemplateSpecName11]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cloud_Gateway_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject11').analyticRuleVersion11]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a cloud gateway is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Cloud Gateway Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24140\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject11').analyticRuleId11,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 11",
                "parentId": "[variables('analyticRuleObject11').analyticRuleId11]",
                "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject11').analyticRuleVersion11]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cloud Gateway Deleted",
        "contentProductId": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "id": "[variables('analyticRuleObject11')._analyticRulecontentProductId11]",
        "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject12').analyticRuleTemplateSpecName12]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cloud_Gateway_Pool_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject12').analyticRuleVersion12]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a cloud gateway pool is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Cloud Gateway Pool Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24143\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject12').analyticRuleId12,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 12",
                "parentId": "[variables('analyticRuleObject12').analyticRuleId12]",
                "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject12').analyticRuleVersion12]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cloud Gateway Pool Deleted",
        "contentProductId": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "id": "[variables('analyticRuleObject12')._analyticRulecontentProductId12]",
        "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject13').analyticRuleTemplateSpecName13]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cloud_Gateway_Pool_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject13').analyticRuleVersion13]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when cloud gateway pool settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Cloud Gateway Pool Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24142\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject13').analyticRuleId13,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 13",
                "parentId": "[variables('analyticRuleObject13').analyticRuleId13]",
                "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject13').analyticRuleVersion13]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cloud Gateway Pool Settings Updated",
        "contentProductId": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "id": "[variables('analyticRuleObject13')._analyticRulecontentProductId13]",
        "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject14').analyticRuleTemplateSpecName14]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cloud_Gateway_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject14').analyticRuleVersion14]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when cloud gateway settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Cloud Gateway Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24131\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject14').analyticRuleId14,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 14",
                "parentId": "[variables('analyticRuleObject14').analyticRuleId14]",
                "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject14').analyticRuleVersion14]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cloud Gateway Settings Updated",
        "contentProductId": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "id": "[variables('analyticRuleObject14')._analyticRulecontentProductId14]",
        "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject15').analyticRuleTemplateSpecName15]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Cloud_Replica_Permanent_Failover_Performed_by_Tenant_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject15').analyticRuleVersion15]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects permanent failover of a cloud replica initiated by a tenant. This might indicate disaster recovery activity or issues with primary systems.",
                "displayName": "Cloud Replica Permanent Failover Performed by Tenant",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27000\n| extend VmRef = extract(\"VmRef=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend HostID = extract(\"HostID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Replica Name\"] = VmRef,\n    [\"Tenant ID\"] = TenantID,\n    [\"Data SourceID\"] = HostID,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject15').analyticRuleId15,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 15",
                "parentId": "[variables('analyticRuleObject15').analyticRuleId15]",
                "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject15').analyticRuleVersion15]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
        "contentKind": "AnalyticsRule",
        "displayName": "Cloud Replica Permanent Failover Performed by Tenant",
        "contentProductId": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "id": "[variables('analyticRuleObject15')._analyticRulecontentProductId15]",
        "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject16').analyticRuleTemplateSpecName16]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Configuration_Backup_Job_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject16').analyticRuleVersion16]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed configuration backup operations. This might indicate system or storage issues, or a potential sabotage of the backup infrastructure.",
                "displayName": "Configuration Backup Job Failed",
                "enabled": false,
                "query": "Veeam_GetFinishedConfigurationBackupSessions\r\n| where Result == \"Failed\"\r\n| project\r\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\r\n    DataSource = Computer,\r\n    EventId = instanceId,\r\n    UserName = user,\r\n    [\"State\"] = Result,\r\n     MessageDetails = Description",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DataSource": "DataSource",
                  "Date": "Date",
                  "EventId": "EventId",
                  "MessageDetails": "MessageDetails"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject16').analyticRuleId16,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 16",
                "parentId": "[variables('analyticRuleObject16').analyticRuleId16]",
                "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject16').analyticRuleVersion16]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
        "contentKind": "AnalyticsRule",
        "displayName": "Configuration Backup Job Failed",
        "contentProductId": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "id": "[variables('analyticRuleObject16')._analyticRulecontentProductId16]",
        "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject17').analyticRuleTemplateSpecName17]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Configuration_Backup_Job_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject17').analyticRuleVersion17]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when configuration backup job settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Configuration Backup Job Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31500\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject17').analyticRuleId17,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 17",
                "parentId": "[variables('analyticRuleObject17').analyticRuleId17]",
                "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject17').analyticRuleVersion17]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
        "contentKind": "AnalyticsRule",
        "displayName": "Configuration Backup Job Settings Updated",
        "contentProductId": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "id": "[variables('analyticRuleObject17')._analyticRulecontentProductId17]",
        "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject18').analyticRuleTemplateSpecName18]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Connection_to_Backup_Repository_Lost_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject18').analyticRuleVersion18]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a backup server fails to connect to a backup repository.",
                "displayName": "Connection to Backup Repository Lost",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 21224\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject18').analyticRuleId18,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 18",
                "parentId": "[variables('analyticRuleObject18').analyticRuleId18]",
                "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject18').analyticRuleVersion18]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
        "contentKind": "AnalyticsRule",
        "displayName": "Connection to Backup Repository Lost",
        "contentProductId": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "id": "[variables('analyticRuleObject18')._analyticRulecontentProductId18]",
        "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject19').analyticRuleTemplateSpecName19]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Credential_Record_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject19').analyticRuleVersion19]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a credential record is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Credential Record Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25500\n| extend AccountName =  extract(\"AccountName=\\\"(?<AccountName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Credential Record\"] = AccountName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject19').analyticRuleId19,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 19",
                "parentId": "[variables('analyticRuleObject19').analyticRuleId19]",
                "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject19').analyticRuleVersion19]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
        "contentKind": "AnalyticsRule",
        "displayName": "Credential Record Deleted",
        "contentProductId": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "id": "[variables('analyticRuleObject19')._analyticRulecontentProductId19]",
        "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject20').analyticRuleTemplateSpecName20]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Credential_Record_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject20').analyticRuleVersion20]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a credential record is updated in Veeam Backup & Replication.",
                "displayName": "Credential Record Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25400\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject20').analyticRuleId20,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 20",
                "parentId": "[variables('analyticRuleObject20').analyticRuleId20]",
                "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject20').analyticRuleVersion20]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
        "contentKind": "AnalyticsRule",
        "displayName": "Credential Record Updated",
        "contentProductId": "[variables('analyticRuleObject20')._analyticRulecontentProductId20]",
        "id": "[variables('analyticRuleObject20')._analyticRulecontentProductId20]",
        "version": "[variables('analyticRuleObject20').analyticRuleVersion20]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject21').analyticRuleTemplateSpecName21]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Detaching_Backups_Started_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject21').analyticRuleVersion21]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a backup file is detached from a backup job.",
                "displayName": "Detaching Backups Started",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41200\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject21').analyticRuleId21,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 21",
                "parentId": "[variables('analyticRuleObject21').analyticRuleId21]",
                "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject21').analyticRuleVersion21]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
        "contentKind": "AnalyticsRule",
        "displayName": "Detaching Backups Started",
        "contentProductId": "[variables('analyticRuleObject21')._analyticRulecontentProductId21]",
        "id": "[variables('analyticRuleObject21')._analyticRulecontentProductId21]",
        "version": "[variables('analyticRuleObject21').analyticRuleVersion21]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject22').analyticRuleTemplateSpecName22]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Encryption_Password_Added_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject22').analyticRuleVersion22]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an encryption password is added to Veeam Backup & Replication.",
                "displayName": "Encryption Password Added",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31600\n| extend Hint = extract(\"Hint=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Hint\"] = Hint,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject22').analyticRuleId22,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 22",
                "parentId": "[variables('analyticRuleObject22').analyticRuleId22]",
                "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject22').analyticRuleVersion22]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
        "contentKind": "AnalyticsRule",
        "displayName": "Encryption Password Added",
        "contentProductId": "[variables('analyticRuleObject22')._analyticRulecontentProductId22]",
        "id": "[variables('analyticRuleObject22')._analyticRulecontentProductId22]",
        "version": "[variables('analyticRuleObject22').analyticRuleVersion22]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject23').analyticRuleTemplateSpecName23]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Encryption_Password_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject23').analyticRuleVersion23]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an encryption password is updated in Veeam Backup & Replication.",
                "displayName": "Encryption Password Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31700\n| extend Hint = extract(\"Hint=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Hint\"] = Hint,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject23').analyticRuleId23,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 23",
                "parentId": "[variables('analyticRuleObject23').analyticRuleId23]",
                "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject23').analyticRuleVersion23]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
        "contentKind": "AnalyticsRule",
        "displayName": "Encryption Password Changed",
        "contentProductId": "[variables('analyticRuleObject23')._analyticRulecontentProductId23]",
        "id": "[variables('analyticRuleObject23')._analyticRulecontentProductId23]",
        "version": "[variables('analyticRuleObject23').analyticRuleVersion23]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject24').analyticRuleTemplateSpecName24]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Encryption_Password_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject24').analyticRuleVersion24]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an encryption password is deleted in Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Encryption Password Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31800\n| extend Hint = extract(\"Hint=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Hint\"] = Hint,\n   MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject24').analyticRuleId24,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 24",
                "parentId": "[variables('analyticRuleObject24').analyticRuleId24]",
                "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject24').analyticRuleVersion24]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
        "contentKind": "AnalyticsRule",
        "displayName": "Encryption Password Deleted",
        "contentProductId": "[variables('analyticRuleObject24')._analyticRulecontentProductId24]",
        "id": "[variables('analyticRuleObject24')._analyticRulecontentProductId24]",
        "version": "[variables('analyticRuleObject24').analyticRuleVersion24]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject25').analyticRuleTemplateSpecName25]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "External_Repository_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject25').analyticRuleVersion25]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an external repository is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "External Repository Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 32200\n| extend RepositoryName = extract(\"RepositoryName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = RepositoryName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject25').analyticRuleId25,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 25",
                "parentId": "[variables('analyticRuleObject25').analyticRuleId25]",
                "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject25').analyticRuleVersion25]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
        "contentKind": "AnalyticsRule",
        "displayName": "External Repository Deleted",
        "contentProductId": "[variables('analyticRuleObject25')._analyticRulecontentProductId25]",
        "id": "[variables('analyticRuleObject25')._analyticRulecontentProductId25]",
        "version": "[variables('analyticRuleObject25').analyticRuleVersion25]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject26').analyticRuleTemplateSpecName26]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "External_Repository_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject26').analyticRuleVersion26]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when external repository settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "External Repository Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 32100\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject26').analyticRuleId26,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 26",
                "parentId": "[variables('analyticRuleObject26').analyticRuleId26]",
                "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject26').analyticRuleVersion26]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
        "contentKind": "AnalyticsRule",
        "displayName": "External Repository Settings Updated",
        "contentProductId": "[variables('analyticRuleObject26')._analyticRulecontentProductId26]",
        "id": "[variables('analyticRuleObject26')._analyticRulecontentProductId26]",
        "version": "[variables('analyticRuleObject26').analyticRuleVersion26]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject27').analyticRuleTemplateSpecName27]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Failover_Plan_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject27').analyticRuleVersion27]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a failover plan is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Failover Plan Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26100\n| extend FailoverPlanName =  extract(\"FailoverPlanName=\\\"(?<FailoverPlanName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Failover Plan Name\"] = FailoverPlanName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject27').analyticRuleId27,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 27",
                "parentId": "[variables('analyticRuleObject27').analyticRuleId27]",
                "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject27').analyticRuleVersion27]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
        "contentKind": "AnalyticsRule",
        "displayName": "Failover Plan Deleted",
        "contentProductId": "[variables('analyticRuleObject27')._analyticRulecontentProductId27]",
        "id": "[variables('analyticRuleObject27')._analyticRulecontentProductId27]",
        "version": "[variables('analyticRuleObject27').analyticRuleVersion27]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject28').analyticRuleTemplateSpecName28]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Failover_Plan_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject28').analyticRuleVersion28]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a failover plan fails. This might indicate disaster recovery activity or issues with primary systems.",
                "displayName": "Failover Plan Failed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26110\n| extend FailoverPlanName =  extract(\"FailoverPlanName=\\\"(?<FailoverPlanName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Failover Plan Name\"] = FailoverPlanName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject28').analyticRuleId28,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 28",
                "parentId": "[variables('analyticRuleObject28').analyticRuleId28]",
                "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject28').analyticRuleVersion28]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
        "contentKind": "AnalyticsRule",
        "displayName": "Failover Plan Failed",
        "contentProductId": "[variables('analyticRuleObject28')._analyticRulecontentProductId28]",
        "id": "[variables('analyticRuleObject28')._analyticRulecontentProductId28]",
        "version": "[variables('analyticRuleObject28').analyticRuleVersion28]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject29').analyticRuleTemplateSpecName29]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Failover_Plan_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject29').analyticRuleVersion29]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when failover plan settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Failover Plan Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26000\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject29').analyticRuleId29,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 29",
                "parentId": "[variables('analyticRuleObject29').analyticRuleId29]",
                "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject29').analyticRuleVersion29]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
        "contentKind": "AnalyticsRule",
        "displayName": "Failover Plan Settings Updated",
        "contentProductId": "[variables('analyticRuleObject29')._analyticRulecontentProductId29]",
        "id": "[variables('analyticRuleObject29')._analyticRulecontentProductId29]",
        "version": "[variables('analyticRuleObject29').analyticRuleVersion29]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject30').analyticRuleTemplateSpecName30]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Failover_Plan_Started_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject30').analyticRuleVersion30]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a failover plan starts. This might indicate disaster recovery activity or issues with primary systems.",
                "displayName": "Failover Plan Started",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26600\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject30').analyticRuleId30,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 30",
                "parentId": "[variables('analyticRuleObject30').analyticRuleId30]",
                "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject30').analyticRuleVersion30]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
        "contentKind": "AnalyticsRule",
        "displayName": "Failover Plan Started",
        "contentProductId": "[variables('analyticRuleObject30')._analyticRulecontentProductId30]",
        "id": "[variables('analyticRuleObject30')._analyticRulecontentProductId30]",
        "version": "[variables('analyticRuleObject30').analyticRuleVersion30]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject31').analyticRuleTemplateSpecName31]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Failover_Plan_Stopped_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject31').analyticRuleVersion31]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a failover plan stops. This might indicate disaster recovery activity or issues with primary systems.",
                "displayName": "Failover Plan Stopped",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26700\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject31').analyticRuleId31,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 31",
                "parentId": "[variables('analyticRuleObject31').analyticRuleId31]",
                "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject31').analyticRuleVersion31]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
        "contentKind": "AnalyticsRule",
        "displayName": "Failover Plan Stopped",
        "contentProductId": "[variables('analyticRuleObject31')._analyticRulecontentProductId31]",
        "id": "[variables('analyticRuleObject31')._analyticRulecontentProductId31]",
        "version": "[variables('analyticRuleObject31').analyticRuleVersion31]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject32').analyticRuleTemplateSpecName32]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "File_Server_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject32').analyticRuleVersion32]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a file server is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "File Server Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28950\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject32').analyticRuleId32,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 32",
                "parentId": "[variables('analyticRuleObject32').analyticRuleId32]",
                "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject32').analyticRuleVersion32]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
        "contentKind": "AnalyticsRule",
        "displayName": "File Server Deleted",
        "contentProductId": "[variables('analyticRuleObject32')._analyticRulecontentProductId32]",
        "id": "[variables('analyticRuleObject32')._analyticRulecontentProductId32]",
        "version": "[variables('analyticRuleObject32').analyticRuleVersion32]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject33').analyticRuleTemplateSpecName33]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "File_Server_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject33').analyticRuleVersion33]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when file server settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "File Server Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28940\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject33').analyticRuleId33,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 33",
                "parentId": "[variables('analyticRuleObject33').analyticRuleId33]",
                "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject33').analyticRuleVersion33]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
        "contentKind": "AnalyticsRule",
        "displayName": "File Server Settings Updated",
        "contentProductId": "[variables('analyticRuleObject33')._analyticRulecontentProductId33]",
        "id": "[variables('analyticRuleObject33')._analyticRulecontentProductId33]",
        "version": "[variables('analyticRuleObject33').analyticRuleVersion33]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject34').analyticRuleTemplateSpecName34]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "File_Share_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject34').analyticRuleVersion34]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a file share is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "File Share Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28920\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Data SourceName\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject34').analyticRuleId34,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 34",
                "parentId": "[variables('analyticRuleObject34').analyticRuleId34]",
                "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject34').analyticRuleVersion34]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
        "contentKind": "AnalyticsRule",
        "displayName": "File Share Deleted",
        "contentProductId": "[variables('analyticRuleObject34')._analyticRulecontentProductId34]",
        "id": "[variables('analyticRuleObject34')._analyticRulecontentProductId34]",
        "version": "[variables('analyticRuleObject34').analyticRuleVersion34]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject35').analyticRuleTemplateSpecName35]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Four_Eyes_Authorization_Disabled_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject35').analyticRuleVersion35]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when four-eyes authorization is disabled.",
                "displayName": "Four-Eyes Authorization Disabled",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42401\n| extend Operation = extract(\"Operation=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Operation\"] = Operation,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject35').analyticRuleId35,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 35",
                "parentId": "[variables('analyticRuleObject35').analyticRuleId35]",
                "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject35').analyticRuleVersion35]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
        "contentKind": "AnalyticsRule",
        "displayName": "Four-Eyes Authorization Disabled",
        "contentProductId": "[variables('analyticRuleObject35')._analyticRulecontentProductId35]",
        "id": "[variables('analyticRuleObject35')._analyticRulecontentProductId35]",
        "version": "[variables('analyticRuleObject35').analyticRuleVersion35]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject36').analyticRuleTemplateSpecName36]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Four_Eyes_Authorization_Request_Created_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject36').analyticRuleVersion36]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a four-eyes authorization request is created.",
                "displayName": "Four-Eyes Authorization Request Created",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42402\n| extend Operation = extract(\"Operation=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Operation Name\"] = Operation,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject36').analyticRuleId36,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 36",
                "parentId": "[variables('analyticRuleObject36').analyticRuleId36]",
                "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject36').analyticRuleVersion36]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
        "contentKind": "AnalyticsRule",
        "displayName": "Four-Eyes Authorization Request Created",
        "contentProductId": "[variables('analyticRuleObject36')._analyticRulecontentProductId36]",
        "id": "[variables('analyticRuleObject36')._analyticRulecontentProductId36]",
        "version": "[variables('analyticRuleObject36').analyticRuleVersion36]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject37').analyticRuleTemplateSpecName37]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Four_Eyes_Authorization_Request_Expired_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject37').analyticRuleVersion37]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a four-eyes authorization request is expired.",
                "displayName": "Four-Eyes Authorization Request Expired",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42405\n| extend Operation = extract(\"Operation=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Operation\"] = Operation,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject37').analyticRuleId37,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 37",
                "parentId": "[variables('analyticRuleObject37').analyticRuleId37]",
                "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject37').analyticRuleVersion37]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
        "contentKind": "AnalyticsRule",
        "displayName": "Four-Eyes Authorization Request Expired",
        "contentProductId": "[variables('analyticRuleObject37')._analyticRulecontentProductId37]",
        "id": "[variables('analyticRuleObject37')._analyticRulecontentProductId37]",
        "version": "[variables('analyticRuleObject37').analyticRuleVersion37]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject38').analyticRuleTemplateSpecName38]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Four_Eyes_Authorization_Request_Rejected_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject38').analyticRuleVersion38]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a four-eyes authorization request is rejected.",
                "displayName": "Four-Eyes Authorization Request Rejected",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42404\n| extend Operation = extract(\"Operation=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Operation Name\"] = Operation,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject38').analyticRuleId38,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 38",
                "parentId": "[variables('analyticRuleObject38').analyticRuleId38]",
                "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject38').analyticRuleVersion38]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
        "contentKind": "AnalyticsRule",
        "displayName": "Four-Eyes Authorization Request Rejected",
        "contentProductId": "[variables('analyticRuleObject38')._analyticRulecontentProductId38]",
        "id": "[variables('analyticRuleObject38')._analyticRulecontentProductId38]",
        "version": "[variables('analyticRuleObject38').analyticRuleVersion38]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject39').analyticRuleTemplateSpecName39]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "General_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject39').analyticRuleVersion39]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when Veeam Backup & Replication general settings are updated. This might indicate configuration changes that require review.",
                "displayName": "General Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31000\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject39').analyticRuleId39,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 39",
                "parentId": "[variables('analyticRuleObject39').analyticRuleId39]",
                "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject39').analyticRuleVersion39]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
        "contentKind": "AnalyticsRule",
        "displayName": "General Settings Updated",
        "contentProductId": "[variables('analyticRuleObject39')._analyticRulecontentProductId39]",
        "id": "[variables('analyticRuleObject39')._analyticRulecontentProductId39]",
        "version": "[variables('analyticRuleObject39').analyticRuleVersion39]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject40').analyticRuleTemplateSpecName40]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Global_Network_Traffic_Rules_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject40').analyticRuleVersion40]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a global network traffic rule is deleted in Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Global Network Traffic Rules Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 32400\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject40').analyticRuleId40,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 40",
                "parentId": "[variables('analyticRuleObject40').analyticRuleId40]",
                "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject40').analyticRuleVersion40]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
        "contentKind": "AnalyticsRule",
        "displayName": "Global Network Traffic Rules Deleted",
        "contentProductId": "[variables('analyticRuleObject40')._analyticRulecontentProductId40]",
        "id": "[variables('analyticRuleObject40')._analyticRulecontentProductId40]",
        "version": "[variables('analyticRuleObject40').analyticRuleVersion40]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject41').analyticRuleTemplateSpecName41]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Global_VM_Exclusions_Added_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject41').analyticRuleVersion41]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject41')._analyticRulecontentId41]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when global VM exclusion are added in Veeam Backup & Replication.",
                "displayName": "Global VM Exclusions Added",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40400\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject41').analyticRuleId41,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 41",
                "parentId": "[variables('analyticRuleObject41').analyticRuleId41]",
                "contentId": "[variables('analyticRuleObject41')._analyticRulecontentId41]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject41').analyticRuleVersion41]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject41')._analyticRulecontentId41]",
        "contentKind": "AnalyticsRule",
        "displayName": "Global VM Exclusions Added",
        "contentProductId": "[variables('analyticRuleObject41')._analyticRulecontentProductId41]",
        "id": "[variables('analyticRuleObject41')._analyticRulecontentProductId41]",
        "version": "[variables('analyticRuleObject41').analyticRuleVersion41]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject42').analyticRuleTemplateSpecName42]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Global_VM_Exclusions_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject42').analyticRuleVersion42]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject42')._analyticRulecontentId42]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when global VM exclusions are updated in Veeam Backup & Replication.",
                "displayName": "Global VM Exclusions Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40600\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject42').analyticRuleId42,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 42",
                "parentId": "[variables('analyticRuleObject42').analyticRuleId42]",
                "contentId": "[variables('analyticRuleObject42')._analyticRulecontentId42]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject42').analyticRuleVersion42]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject42')._analyticRulecontentId42]",
        "contentKind": "AnalyticsRule",
        "displayName": "Global VM Exclusions Changed",
        "contentProductId": "[variables('analyticRuleObject42')._analyticRulecontentProductId42]",
        "id": "[variables('analyticRuleObject42')._analyticRulecontentProductId42]",
        "version": "[variables('analyticRuleObject42').analyticRuleVersion42]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject43').analyticRuleTemplateSpecName43]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Global_VM_Exclusions_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject43').analyticRuleVersion43]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject43')._analyticRulecontentId43]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a VM is removed from global exclusions in Veeam Backup & Replication. This might indicate unauthorized changes.",
                "displayName": "Global VM Exclusions Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40500\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject43').analyticRuleId43,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 43",
                "parentId": "[variables('analyticRuleObject43').analyticRuleId43]",
                "contentId": "[variables('analyticRuleObject43')._analyticRulecontentId43]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject43').analyticRuleVersion43]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject43')._analyticRulecontentId43]",
        "contentKind": "AnalyticsRule",
        "displayName": "Global VM Exclusions Deleted",
        "contentProductId": "[variables('analyticRuleObject43')._analyticRulecontentProductId43]",
        "id": "[variables('analyticRuleObject43')._analyticRulecontentProductId43]",
        "version": "[variables('analyticRuleObject43').analyticRuleVersion43]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject44').analyticRuleTemplateSpecName44]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Host_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject44').analyticRuleVersion44]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject44')._analyticRulecontentId44]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a host is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Host Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28500\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Data SourceName\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject44').analyticRuleId44,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 44",
                "parentId": "[variables('analyticRuleObject44').analyticRuleId44]",
                "contentId": "[variables('analyticRuleObject44')._analyticRulecontentId44]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject44').analyticRuleVersion44]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject44')._analyticRulecontentId44]",
        "contentKind": "AnalyticsRule",
        "displayName": "Host Deleted",
        "contentProductId": "[variables('analyticRuleObject44')._analyticRulecontentProductId44]",
        "id": "[variables('analyticRuleObject44')._analyticRulecontentProductId44]",
        "version": "[variables('analyticRuleObject44').analyticRuleVersion44]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject45').analyticRuleTemplateSpecName45]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Host_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject45').analyticRuleVersion45]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject45')._analyticRulecontentId45]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when host settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Host Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28400\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject45').analyticRuleId45,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 45",
                "parentId": "[variables('analyticRuleObject45').analyticRuleId45]",
                "contentId": "[variables('analyticRuleObject45')._analyticRulecontentId45]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject45').analyticRuleVersion45]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject45')._analyticRulecontentId45]",
        "contentKind": "AnalyticsRule",
        "displayName": "Host Settings Updated",
        "contentProductId": "[variables('analyticRuleObject45')._analyticRulecontentProductId45]",
        "id": "[variables('analyticRuleObject45')._analyticRulecontentProductId45]",
        "version": "[variables('analyticRuleObject45').analyticRuleVersion45]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject46').analyticRuleTemplateSpecName46]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Hypervisor_Host_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject46').analyticRuleVersion46]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject46')._analyticRulecontentId46]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a hypervisor host is deleted from Veeam Backup & Replication. This might indicate unauthorized changes to the virtualization environment.",
                "displayName": "Hypervisor Host Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24070 \n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    [\"DataSource\"] = original_host,\n    EventId = instanceId,\n    UserName = user,\n  [\"MessageDetails\"] = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "FullName",
                        "columnName": "DataSource"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "messageDetails": "MessageDetails"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject46').analyticRuleId46,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 46",
                "parentId": "[variables('analyticRuleObject46').analyticRuleId46]",
                "contentId": "[variables('analyticRuleObject46')._analyticRulecontentId46]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject46').analyticRuleVersion46]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject46')._analyticRulecontentId46]",
        "contentKind": "AnalyticsRule",
        "displayName": "Hypervisor Host Deleted",
        "contentProductId": "[variables('analyticRuleObject46')._analyticRulecontentProductId46]",
        "id": "[variables('analyticRuleObject46')._analyticRulecontentProductId46]",
        "version": "[variables('analyticRuleObject46').analyticRuleVersion46]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject47').analyticRuleTemplateSpecName47]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Hypervisor_Host_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject47').analyticRuleVersion47]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject47')._analyticRulecontentId47]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when hypervisor host settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Hypervisor Host Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25800\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject47').analyticRuleId47,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 47",
                "parentId": "[variables('analyticRuleObject47').analyticRuleId47]",
                "contentId": "[variables('analyticRuleObject47')._analyticRulecontentId47]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject47').analyticRuleVersion47]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject47')._analyticRulecontentId47]",
        "contentKind": "AnalyticsRule",
        "displayName": "Hypervisor Host Settings Updated",
        "contentProductId": "[variables('analyticRuleObject47')._analyticRulecontentProductId47]",
        "id": "[variables('analyticRuleObject47')._analyticRulecontentProductId47]",
        "version": "[variables('analyticRuleObject47').analyticRuleVersion47]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject48').analyticRuleTemplateSpecName48]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Invalid_Code_for_Multi_Factor_Authentication_Entered_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject48').analyticRuleVersion48]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject48')._analyticRulecontentId48]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed multi-factor authentication attempts. This might indicate credential stuffing or brute-force attacks.",
                "displayName": "Invalid Code for Multi-Factor Authentication Entered",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40205\n| extend SID = extract(\"SID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend Endpoint = extract(\"Endpoint=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Endpoint\"] = Endpoint,\n    [\"User SID\"] = SID,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject48').analyticRuleId48,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 48",
                "parentId": "[variables('analyticRuleObject48').analyticRuleId48]",
                "contentId": "[variables('analyticRuleObject48')._analyticRulecontentId48]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject48').analyticRuleVersion48]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject48')._analyticRulecontentId48]",
        "contentKind": "AnalyticsRule",
        "displayName": "Invalid Code for Multi-Factor Authentication Entered",
        "contentProductId": "[variables('analyticRuleObject48')._analyticRulecontentProductId48]",
        "id": "[variables('analyticRuleObject48')._analyticRulecontentProductId48]",
        "version": "[variables('analyticRuleObject48').analyticRuleVersion48]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject49').analyticRuleTemplateSpecName49]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Job_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject49').analyticRuleVersion49]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject49')._analyticRulecontentId49]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a job is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Job Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23090\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Job Name\"] = \"\",\n   MessageDetails = Description,\n   Severity = SeverityDescription\n| project Date, DataSource, EventId, UserName, [\"Job Name\"],MessageDetails,Severity",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject49').analyticRuleId49,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 49",
                "parentId": "[variables('analyticRuleObject49').analyticRuleId49]",
                "contentId": "[variables('analyticRuleObject49')._analyticRulecontentId49]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject49').analyticRuleVersion49]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject49')._analyticRulecontentId49]",
        "contentKind": "AnalyticsRule",
        "displayName": "Job Deleted",
        "contentProductId": "[variables('analyticRuleObject49')._analyticRulecontentProductId49]",
        "id": "[variables('analyticRuleObject49')._analyticRulecontentProductId49]",
        "version": "[variables('analyticRuleObject49').analyticRuleVersion49]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject50').analyticRuleTemplateSpecName50]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Job_No_Longer_Used_as_Second_Destination_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject50').analyticRuleVersion50]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject50')._analyticRulecontentId50]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a job used as a secondary destination is removed.",
                "displayName": "Job No Longer Used as Second Destination",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23420\n| extend JobName =  extract(\"JobName=\\\"(?<JobName>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Job Name\"] = JobName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject50').analyticRuleId50,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 50",
                "parentId": "[variables('analyticRuleObject50').analyticRuleId50]",
                "contentId": "[variables('analyticRuleObject50')._analyticRulecontentId50]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject50').analyticRuleVersion50]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject50')._analyticRulecontentId50]",
        "contentKind": "AnalyticsRule",
        "displayName": "Job No Longer Used as Second Destination",
        "contentProductId": "[variables('analyticRuleObject50')._analyticRulecontentProductId50]",
        "id": "[variables('analyticRuleObject50')._analyticRulecontentProductId50]",
        "version": "[variables('analyticRuleObject50').analyticRuleVersion50]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject51').analyticRuleTemplateSpecName51]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "KMS_Key_Rotation_Job_Finished_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject51').analyticRuleVersion51]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject51')._analyticRulecontentId51]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a KMS key rotation job is finished.",
                "displayName": "KMS Key Rotation Job Finished",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42500\n| extend ResultMessage = extract(\"ResultMessage=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"StateMessage\"] = ResultMessage,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject51').analyticRuleId51,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 51",
                "parentId": "[variables('analyticRuleObject51').analyticRuleId51]",
                "contentId": "[variables('analyticRuleObject51')._analyticRulecontentId51]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject51').analyticRuleVersion51]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject51')._analyticRulecontentId51]",
        "contentKind": "AnalyticsRule",
        "displayName": "KMS Key Rotation Job Finished",
        "contentProductId": "[variables('analyticRuleObject51')._analyticRulecontentProductId51]",
        "id": "[variables('analyticRuleObject51')._analyticRulecontentProductId51]",
        "version": "[variables('analyticRuleObject51').analyticRuleVersion51]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject52').analyticRuleTemplateSpecName52]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "KMS_Server_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject52').analyticRuleVersion52]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject52')._analyticRulecontentId52]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a KMS server is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "KMS Server Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42301\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject52').analyticRuleId52,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 52",
                "parentId": "[variables('analyticRuleObject52').analyticRuleId52]",
                "contentId": "[variables('analyticRuleObject52')._analyticRulecontentId52]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject52').analyticRuleVersion52]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject52')._analyticRulecontentId52]",
        "contentKind": "AnalyticsRule",
        "displayName": "KMS Server Deleted",
        "contentProductId": "[variables('analyticRuleObject52')._analyticRulecontentProductId52]",
        "id": "[variables('analyticRuleObject52')._analyticRulecontentProductId52]",
        "version": "[variables('analyticRuleObject52').analyticRuleVersion52]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject53').analyticRuleTemplateSpecName53]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "KMS_Server_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject53').analyticRuleVersion53]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject53')._analyticRulecontentId53]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when KMS server settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "KMS Server Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42302\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Obeject Name\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject53').analyticRuleId53,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 53",
                "parentId": "[variables('analyticRuleObject53').analyticRuleId53]",
                "contentId": "[variables('analyticRuleObject53')._analyticRulecontentId53]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject53').analyticRuleVersion53]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject53')._analyticRulecontentId53]",
        "contentKind": "AnalyticsRule",
        "displayName": "KMS Server Settings Updated",
        "contentProductId": "[variables('analyticRuleObject53')._analyticRulecontentProductId53]",
        "id": "[variables('analyticRuleObject53')._analyticRulecontentProductId53]",
        "version": "[variables('analyticRuleObject53').analyticRuleVersion53]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject54').analyticRuleTemplateSpecName54]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Expired_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject54').analyticRuleVersion54]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject54')._analyticRulecontentId54]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a Veeam license is expired. This could impact backup operations and data protection.",
                "displayName": "License Expired",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24030\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject54').analyticRuleId54,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 54",
                "parentId": "[variables('analyticRuleObject54').analyticRuleId54]",
                "contentId": "[variables('analyticRuleObject54')._analyticRulecontentId54]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject54').analyticRuleVersion54]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject54')._analyticRulecontentId54]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Expired",
        "contentProductId": "[variables('analyticRuleObject54')._analyticRulecontentProductId54]",
        "id": "[variables('analyticRuleObject54')._analyticRulecontentProductId54]",
        "version": "[variables('analyticRuleObject54').analyticRuleVersion54]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject55').analyticRuleTemplateSpecName55]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Expiring_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject55').analyticRuleVersion55]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject55')._analyticRulecontentId55]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a Veeam license expires shortly.",
                "displayName": "License Expiring",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24020\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n   MessageDetails = Description,\n   Severity = SeverityDescription\n",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject55').analyticRuleId55,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 55",
                "parentId": "[variables('analyticRuleObject55').analyticRuleId55]",
                "contentId": "[variables('analyticRuleObject55')._analyticRulecontentId55]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject55').analyticRuleVersion55]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject55')._analyticRulecontentId55]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Expiring",
        "contentProductId": "[variables('analyticRuleObject55')._analyticRulecontentProductId55]",
        "id": "[variables('analyticRuleObject55')._analyticRulecontentProductId55]",
        "version": "[variables('analyticRuleObject55').analyticRuleVersion55]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject56').analyticRuleTemplateSpecName56]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Grace_Period_Started_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject56').analyticRuleVersion56]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject56')._analyticRulecontentId56]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a Veeam license grace period starts. This might indicate potential licensing issues that need attention.",
                "displayName": "License Grace Period Started",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24060\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject56').analyticRuleId56,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 56",
                "parentId": "[variables('analyticRuleObject56').analyticRuleId56]",
                "contentId": "[variables('analyticRuleObject56')._analyticRulecontentId56]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject56').analyticRuleVersion56]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject56')._analyticRulecontentId56]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Grace Period Started",
        "contentProductId": "[variables('analyticRuleObject56')._analyticRulecontentProductId56]",
        "id": "[variables('analyticRuleObject56')._analyticRulecontentProductId56]",
        "version": "[variables('analyticRuleObject56').analyticRuleVersion56]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject57').analyticRuleTemplateSpecName57]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Limit_Exceeded_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject57').analyticRuleVersion57]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject57')._analyticRulecontentId57]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when the Veeam license limit is exceeded.",
                "displayName": "License Limit Exceeded",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24070\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject57').analyticRuleId57,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 57",
                "parentId": "[variables('analyticRuleObject57').analyticRuleId57]",
                "contentId": "[variables('analyticRuleObject57')._analyticRulecontentId57]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject57').analyticRuleVersion57]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject57')._analyticRulecontentId57]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Limit Exceeded",
        "contentProductId": "[variables('analyticRuleObject57')._analyticRulecontentProductId57]",
        "id": "[variables('analyticRuleObject57')._analyticRulecontentProductId57]",
        "version": "[variables('analyticRuleObject57').analyticRuleVersion57]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject58').analyticRuleTemplateSpecName58]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Removed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject58').analyticRuleVersion58]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject58')._analyticRulecontentId58]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when the Veeam license is removed from Veeam Backup & Replication.",
                "displayName": "License Removed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24080\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject58').analyticRuleId58,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 58",
                "parentId": "[variables('analyticRuleObject58').analyticRuleId58]",
                "contentId": "[variables('analyticRuleObject58')._analyticRulecontentId58]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject58').analyticRuleVersion58]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject58')._analyticRulecontentId58]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Removed",
        "contentProductId": "[variables('analyticRuleObject58')._analyticRulecontentProductId58]",
        "id": "[variables('analyticRuleObject58')._analyticRulecontentProductId58]",
        "version": "[variables('analyticRuleObject58').analyticRuleVersion58]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject59').analyticRuleTemplateSpecName59]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Support_Expired_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject59').analyticRuleVersion59]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject59')._analyticRulecontentId59]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when the Veeam support contract is expired. This might impact backup operations and data protection.",
                "displayName": "License Support Expired",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24050\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject59').analyticRuleId59,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 59",
                "parentId": "[variables('analyticRuleObject59').analyticRuleId59]",
                "contentId": "[variables('analyticRuleObject59')._analyticRulecontentId59]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject59').analyticRuleVersion59]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject59')._analyticRulecontentId59]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Support Expired",
        "contentProductId": "[variables('analyticRuleObject59')._analyticRulecontentProductId59]",
        "id": "[variables('analyticRuleObject59')._analyticRulecontentProductId59]",
        "version": "[variables('analyticRuleObject59').analyticRuleVersion59]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject60').analyticRuleTemplateSpecName60]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "License_Support_Expiring_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject60').analyticRuleVersion60]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject60')._analyticRulecontentId60]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when the Veeam support contract expires shortly.",
                "displayName": "License Support Expiring",
                "enabled": false,
                "query": "let license_editions_lookup = union isfuzzy=true (datatable(Edition:string, EditionDescription:string)[]), (_GetWatchlist(\"license_editions_lookup\")); \nlet license_types_lookup = union isfuzzy=true (datatable(Type:string, TypeDescription:string)[]), (_GetWatchlist(\"license_types_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 24040\n| extend Edition = extract(\"Edition=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_editions_lookup) \n    on $left.Edition == $right.Edition\n| extend Type = extract(\"Type=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (license_types_lookup) \n    on $left.Type == $right.Type\n| extend TenantID = extract(\"TenantID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend DaysLeft = extract(\"DaysLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SupportLeft = extract(\"SupportLeft=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"License Edition\"] = EditionDescription,\n    [\"License Type\"] = TypeDescription,\n    [\"Days Left\"] = DaysLeft,\n    [\"Days of Support Left\"] = SupportLeft,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject60').analyticRuleId60,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 60",
                "parentId": "[variables('analyticRuleObject60').analyticRuleId60]",
                "contentId": "[variables('analyticRuleObject60')._analyticRulecontentId60]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject60').analyticRuleVersion60]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject60')._analyticRulecontentId60]",
        "contentKind": "AnalyticsRule",
        "displayName": "License Support Expiring",
        "contentProductId": "[variables('analyticRuleObject60')._analyticRulecontentProductId60]",
        "id": "[variables('analyticRuleObject60')._analyticRulecontentProductId60]",
        "version": "[variables('analyticRuleObject60').analyticRuleVersion60]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject61').analyticRuleTemplateSpecName61]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Malware_Activity_Detected_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject61').analyticRuleVersion61]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject61')._analyticRulecontentId61]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when restore points marked as suspicious. This might indicate potential compromise of backup data.",
                "displayName": "Malware Activity Detected",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41600\n| extend ActivityType = extract(\"ActivityType=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend MachineDisplayName = extract(\"[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\\\s*\\\\(([^)]+)\\\\)\", 1, Description)\n| extend MachineUuid = extract(\"([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})\", 1, Description)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Malware Detection Method\"] = ActivityType,\n    MessageDetails = Description,\n    Severity = SeverityDescription,\n    MachineDisplayName,\n    MachineUuid\n",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "MachineDisplayName": "MachineDisplayName",
                  "EventId": "EventId",
                  "VbrHostName": "DataSource",
                  "MachineUuid": "MachineUuid",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject61').analyticRuleId61,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 61",
                "parentId": "[variables('analyticRuleObject61').analyticRuleId61]",
                "contentId": "[variables('analyticRuleObject61')._analyticRulecontentId61]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject61').analyticRuleVersion61]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject61')._analyticRulecontentId61]",
        "contentKind": "AnalyticsRule",
        "displayName": "Malware Activity Detected",
        "contentProductId": "[variables('analyticRuleObject61')._analyticRulecontentProductId61]",
        "id": "[variables('analyticRuleObject61')._analyticRulecontentProductId61]",
        "version": "[variables('analyticRuleObject61').analyticRuleVersion61]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject62').analyticRuleTemplateSpecName62]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Malware_Detection_Exclusions_List_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject62').analyticRuleVersion62]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject62')._analyticRulecontentId62]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when malware detection exclusions are updated. This might indicate potential compromise of backup data.",
                "displayName": "Malware Detection Exclusions List Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42280\n| project\n  Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n   MessageDetails = Description,\n   Severity = SeverityDescription\n| project Date, DataSource, EventId, UserName,MessageDetails,Severity",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject62').analyticRuleId62,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 62",
                "parentId": "[variables('analyticRuleObject62').analyticRuleId62]",
                "contentId": "[variables('analyticRuleObject62')._analyticRulecontentId62]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject62').analyticRuleVersion62]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject62')._analyticRulecontentId62]",
        "contentKind": "AnalyticsRule",
        "displayName": "Malware Detection Exclusions List Updated",
        "contentProductId": "[variables('analyticRuleObject62')._analyticRulecontentProductId62]",
        "id": "[variables('analyticRuleObject62')._analyticRulecontentProductId62]",
        "version": "[variables('analyticRuleObject62').analyticRuleVersion62]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject63').analyticRuleTemplateSpecName63]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Malware_Detection_Session_Finished_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject63').analyticRuleVersion63]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject63')._analyticRulecontentId63]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when malware detection session finishes.",
                "displayName": "Malware Detection Session Finished",
                "enabled": false,
                "query": "let action_results_lookup = union isfuzzy=true (datatable(JobResult:string, JobResultMessage:string)[]), (_GetWatchlist(\"action_results_lookup\")); \nVeeam_GetSecurityEvents\n| where instanceId == 42210\n| extend Result = extract(\"Result=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| extend SessionID = extract(\"SessionID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| lookup kind=leftouter (action_results_lookup)\n    on $left.Result == $right.JobResult\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Session ID\"] = SessionID,\n    [\"StateMessage\"] = JobResultMessage,\n    MessageDetails = Description,\n    Severity = SeverityDescription\n",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject63').analyticRuleId63,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 63",
                "parentId": "[variables('analyticRuleObject63').analyticRuleId63]",
                "contentId": "[variables('analyticRuleObject63')._analyticRulecontentId63]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject63').analyticRuleVersion63]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject63')._analyticRulecontentId63]",
        "contentKind": "AnalyticsRule",
        "displayName": "Malware Detection Session Finished",
        "contentProductId": "[variables('analyticRuleObject63')._analyticRulecontentProductId63]",
        "id": "[variables('analyticRuleObject63')._analyticRulecontentProductId63]",
        "version": "[variables('analyticRuleObject63').analyticRuleVersion63]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject64').analyticRuleTemplateSpecName64]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Malware_Detection_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject64').analyticRuleVersion64]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject64')._analyticRulecontentId64]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when malware detection settings are updated.",
                "displayName": "Malware Detection Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42290\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject64').analyticRuleId64,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 64",
                "parentId": "[variables('analyticRuleObject64').analyticRuleId64]",
                "contentId": "[variables('analyticRuleObject64')._analyticRulecontentId64]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject64').analyticRuleVersion64]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject64')._analyticRulecontentId64]",
        "contentKind": "AnalyticsRule",
        "displayName": "Malware Detection Settings Updated",
        "contentProductId": "[variables('analyticRuleObject64')._analyticRulecontentProductId64]",
        "id": "[variables('analyticRuleObject64')._analyticRulecontentProductId64]",
        "version": "[variables('analyticRuleObject64').analyticRuleVersion64]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject65').analyticRuleTemplateSpecName65]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Malware_Event_Detected_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject65').analyticRuleVersion65]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject65')._analyticRulecontentId65]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when restore points are marked as infected. This might indicate potential compromise of backup data.",
                "displayName": "Malware Event Detected",
                "enabled": false,
                "query": "VeeamMalwareEvents_CL",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamMalwareEvents_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "entityMappings": [
                  {
                    "entityType": "Host",
                    "fieldMappings": [
                      {
                        "identifier": "HostName",
                        "columnName": "VbrHostName"
                      }
                    ]
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "BackupObjectId": "MachineBackupObjectId",
                  "MachineDisplayName": "MachineDisplayName",
                  "MachineUuid": "MachineUuid",
                  "VbrHostName": "VbrHostName"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject65').analyticRuleId65,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 65",
                "parentId": "[variables('analyticRuleObject65').analyticRuleId65]",
                "contentId": "[variables('analyticRuleObject65')._analyticRulecontentId65]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject65').analyticRuleVersion65]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject65')._analyticRulecontentId65]",
        "contentKind": "AnalyticsRule",
        "displayName": "Malware Event Detected",
        "contentProductId": "[variables('analyticRuleObject65')._analyticRulecontentProductId65]",
        "id": "[variables('analyticRuleObject65')._analyticRulecontentProductId65]",
        "version": "[variables('analyticRuleObject65').analyticRuleVersion65]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject66').analyticRuleTemplateSpecName66]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Multi_Factor_Authentication_Disabled_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject66').analyticRuleVersion66]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject66')._analyticRulecontentId66]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when multi-factor authentication is disabled for all users.",
                "displayName": "Multi-Factor Authentication Disabled",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40201\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject66').analyticRuleId66,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 66",
                "parentId": "[variables('analyticRuleObject66').analyticRuleId66]",
                "contentId": "[variables('analyticRuleObject66')._analyticRulecontentId66]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject66').analyticRuleVersion66]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject66')._analyticRulecontentId66]",
        "contentKind": "AnalyticsRule",
        "displayName": "Multi-Factor Authentication Disabled",
        "contentProductId": "[variables('analyticRuleObject66')._analyticRulecontentProductId66]",
        "id": "[variables('analyticRuleObject66')._analyticRulecontentProductId66]",
        "version": "[variables('analyticRuleObject66').analyticRuleVersion66]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject67').analyticRuleTemplateSpecName67]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Multi_Factor_Authentication_for_User_Disabled_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject67').analyticRuleVersion67]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject67')._analyticRulecontentId67]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when multi-factor authentication is disabled for a specific user.",
                "displayName": "Multi-Factor Authentication for User Disabled",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40204\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject67').analyticRuleId67,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 67",
                "parentId": "[variables('analyticRuleObject67').analyticRuleId67]",
                "contentId": "[variables('analyticRuleObject67')._analyticRulecontentId67]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject67').analyticRuleVersion67]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject67')._analyticRulecontentId67]",
        "contentKind": "AnalyticsRule",
        "displayName": "Multi-Factor Authentication for User Disabled",
        "contentProductId": "[variables('analyticRuleObject67')._analyticRulecontentProductId67]",
        "id": "[variables('analyticRuleObject67')._analyticRulecontentProductId67]",
        "version": "[variables('analyticRuleObject67').analyticRuleVersion67]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject68').analyticRuleTemplateSpecName68]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Multi_Factor_Authentication_Token_Revoked_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject68').analyticRuleVersion68]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject68')._analyticRulecontentId68]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a multi-factor authentication token is revoked.",
                "displayName": "Multi-Factor Authentication Token Revoked",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40202\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject68').analyticRuleId68,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 68",
                "parentId": "[variables('analyticRuleObject68').analyticRuleId68]",
                "contentId": "[variables('analyticRuleObject68')._analyticRulecontentId68]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject68').analyticRuleVersion68]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject68')._analyticRulecontentId68]",
        "contentKind": "AnalyticsRule",
        "displayName": "Multi-Factor Authentication Token Revoked",
        "contentProductId": "[variables('analyticRuleObject68')._analyticRulecontentProductId68]",
        "id": "[variables('analyticRuleObject68')._analyticRulecontentProductId68]",
        "version": "[variables('analyticRuleObject68').analyticRuleVersion68]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject69').analyticRuleTemplateSpecName69]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Multi_Factor_Authentication_User_Locked_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject69').analyticRuleVersion69]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject69')._analyticRulecontentId69]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when the allowed number of multi-factor authentication attempts is exceeded for a user.",
                "displayName": "Multi-Factor Authentication User Locked",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 40206\n| project\n  Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n   MessageDetails = Description,\n   Severity = SeverityDescription\n| project Date, DataSource, EventId, UserName,MessageDetails,Severity",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject69').analyticRuleId69,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 69",
                "parentId": "[variables('analyticRuleObject69').analyticRuleId69]",
                "contentId": "[variables('analyticRuleObject69')._analyticRulecontentId69]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject69').analyticRuleVersion69]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject69')._analyticRulecontentId69]",
        "contentKind": "AnalyticsRule",
        "displayName": "Multi-Factor Authentication User Locked",
        "contentProductId": "[variables('analyticRuleObject69')._analyticRulecontentProductId69]",
        "id": "[variables('analyticRuleObject69')._analyticRulecontentProductId69]",
        "version": "[variables('analyticRuleObject69').analyticRuleVersion69]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject70').analyticRuleTemplateSpecName70]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "NDMP_Server_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject70').analyticRuleVersion70]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject70')._analyticRulecontentId70]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an NDMP server is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "NDMP Server Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28850\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject70').analyticRuleId70,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 70",
                "parentId": "[variables('analyticRuleObject70').analyticRuleId70]",
                "contentId": "[variables('analyticRuleObject70')._analyticRulecontentId70]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject70').analyticRuleVersion70]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject70')._analyticRulecontentId70]",
        "contentKind": "AnalyticsRule",
        "displayName": "NDMP Server Deleted",
        "contentProductId": "[variables('analyticRuleObject70')._analyticRulecontentProductId70]",
        "id": "[variables('analyticRuleObject70')._analyticRulecontentProductId70]",
        "version": "[variables('analyticRuleObject70').analyticRuleVersion70]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject71').analyticRuleTemplateSpecName71]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Object_Marked_as_Clean_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject71').analyticRuleVersion71]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject71')._analyticRulecontentId71]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an object is marked as clean.",
                "displayName": "Object Marked as Clean",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41610\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject71').analyticRuleId71,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 71",
                "parentId": "[variables('analyticRuleObject71').analyticRuleId71]",
                "contentId": "[variables('analyticRuleObject71')._analyticRulecontentId71]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject71').analyticRuleVersion71]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject71')._analyticRulecontentId71]",
        "contentKind": "AnalyticsRule",
        "displayName": "Object Marked as Clean",
        "contentProductId": "[variables('analyticRuleObject71')._analyticRulecontentProductId71]",
        "id": "[variables('analyticRuleObject71')._analyticRulecontentProductId71]",
        "version": "[variables('analyticRuleObject71').analyticRuleVersion71]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject72').analyticRuleTemplateSpecName72]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Object_Storage_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject72').analyticRuleVersion72]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject72')._analyticRulecontentId72]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an object storage is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Object Storage Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28980\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Data SourceName\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject72').analyticRuleId72,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 72",
                "parentId": "[variables('analyticRuleObject72').analyticRuleId72]",
                "contentId": "[variables('analyticRuleObject72')._analyticRulecontentId72]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject72').analyticRuleVersion72]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject72')._analyticRulecontentId72]",
        "contentKind": "AnalyticsRule",
        "displayName": "Object Storage Deleted",
        "contentProductId": "[variables('analyticRuleObject72')._analyticRulecontentProductId72]",
        "id": "[variables('analyticRuleObject72')._analyticRulecontentProductId72]",
        "version": "[variables('analyticRuleObject72').analyticRuleVersion72]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject73').analyticRuleTemplateSpecName73]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Object_Storage_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject73').analyticRuleVersion73]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject73')._analyticRulecontentId73]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when object storage settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Object Storage Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28970\n| extend Name =  extract(\"Name=\\\"(?<Name>[^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Data SourceName\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject73').analyticRuleId73,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 73",
                "parentId": "[variables('analyticRuleObject73').analyticRuleId73]",
                "contentId": "[variables('analyticRuleObject73')._analyticRulecontentId73]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject73').analyticRuleVersion73]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject73')._analyticRulecontentId73]",
        "contentKind": "AnalyticsRule",
        "displayName": "Object Storage Settings Updated",
        "contentProductId": "[variables('analyticRuleObject73')._analyticRulecontentProductId73]",
        "id": "[variables('analyticRuleObject73')._analyticRulecontentProductId73]",
        "version": "[variables('analyticRuleObject73').analyticRuleVersion73]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject74').analyticRuleTemplateSpecName74]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Objects_Added_to_Malware_Detection_Exclusions_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject74').analyticRuleVersion74]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject74')._analyticRulecontentId74]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an object is added to malware detection exclusions.",
                "displayName": "Objects Added to Malware Detection Exclusions",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42260\n| extend AddedObjectNames = extract(\"AddedObjectNames=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Object Names\"] = AddedObjectNames,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject74').analyticRuleId74,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 74",
                "parentId": "[variables('analyticRuleObject74').analyticRuleId74]",
                "contentId": "[variables('analyticRuleObject74')._analyticRulecontentId74]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject74').analyticRuleVersion74]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject74')._analyticRulecontentId74]",
        "contentKind": "AnalyticsRule",
        "displayName": "Objects Added to Malware Detection Exclusions",
        "contentProductId": "[variables('analyticRuleObject74')._analyticRulecontentProductId74]",
        "id": "[variables('analyticRuleObject74')._analyticRulecontentProductId74]",
        "version": "[variables('analyticRuleObject74').analyticRuleVersion74]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject75').analyticRuleTemplateSpecName75]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Objects_Deleted_from_Malware_Detection_Exclusions_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject75').analyticRuleVersion75]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject75')._analyticRulecontentId75]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when an object is deleted from malware detection exclusions.",
                "displayName": "Objects Deleted from Malware Detection Exclusions",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42270\n| extend RemovedObjectNames = extract(\"RemovedObjectNames=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Object Names\"] = RemovedObjectNames,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject75').analyticRuleId75,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 75",
                "parentId": "[variables('analyticRuleObject75').analyticRuleId75]",
                "contentId": "[variables('analyticRuleObject75')._analyticRulecontentId75]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject75').analyticRuleVersion75]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject75')._analyticRulecontentId75]",
        "contentKind": "AnalyticsRule",
        "displayName": "Objects Deleted from Malware Detection Exclusions",
        "contentProductId": "[variables('analyticRuleObject75')._analyticRulecontentProductId75]",
        "id": "[variables('analyticRuleObject75')._analyticRulecontentProductId75]",
        "version": "[variables('analyticRuleObject75').analyticRuleVersion75]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject76').analyticRuleTemplateSpecName76]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Objects_for_Job_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject76').analyticRuleVersion76]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject76')._analyticRulecontentId76]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when objects are deleted from the job. This might indicate unauthorized removal of critical components.",
                "displayName": "Objects for Job Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 32120\n| extend JobName = extract(\"JobName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Job Name\"] = JobName,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject76').analyticRuleId76,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 76",
                "parentId": "[variables('analyticRuleObject76').analyticRuleId76]",
                "contentId": "[variables('analyticRuleObject76')._analyticRulecontentId76]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject76').analyticRuleVersion76]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject76')._analyticRulecontentId76]",
        "contentKind": "AnalyticsRule",
        "displayName": "Objects for Job Deleted",
        "contentProductId": "[variables('analyticRuleObject76')._analyticRulecontentProductId76]",
        "id": "[variables('analyticRuleObject76')._analyticRulecontentProductId76]",
        "version": "[variables('analyticRuleObject76').analyticRuleVersion76]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject77').analyticRuleTemplateSpecName77]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Objects_for_Protection_Group_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject77').analyticRuleVersion77]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject77')._analyticRulecontentId77]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when protection group objects are updated.",
                "displayName": "Objects for Protection Group Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29140\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject77').analyticRuleId77,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 77",
                "parentId": "[variables('analyticRuleObject77').analyticRuleId77]",
                "contentId": "[variables('analyticRuleObject77')._analyticRulecontentId77]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject77').analyticRuleVersion77]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject77')._analyticRulecontentId77]",
        "contentKind": "AnalyticsRule",
        "displayName": "Objects for Protection Group Changed",
        "contentProductId": "[variables('analyticRuleObject77')._analyticRulecontentProductId77]",
        "id": "[variables('analyticRuleObject77')._analyticRulecontentProductId77]",
        "version": "[variables('analyticRuleObject77').analyticRuleVersion77]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject78').analyticRuleTemplateSpecName78]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Objects_for_Protection_Group_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject78').analyticRuleVersion78]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject78')._analyticRulecontentId78]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when objects are deleted from a protection group. This might indicate unauthorized removal of critical components.",
                "displayName": "Objects for Protection Group Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29150\n| extend ProtectionGroupName = extract(\"ProtectionGroupName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Protection Group Name\"] = ProtectionGroupName,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject78').analyticRuleId78,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 78",
                "parentId": "[variables('analyticRuleObject78').analyticRuleId78]",
                "contentId": "[variables('analyticRuleObject78')._analyticRulecontentId78]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject78').analyticRuleVersion78]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject78')._analyticRulecontentId78]",
        "contentKind": "AnalyticsRule",
        "displayName": "Objects for Protection Group Deleted",
        "contentProductId": "[variables('analyticRuleObject78')._analyticRulecontentProductId78]",
        "id": "[variables('analyticRuleObject78')._analyticRulecontentProductId78]",
        "version": "[variables('analyticRuleObject78').analyticRuleVersion78]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject79').analyticRuleTemplateSpecName79]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Preferred_Networks_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject79').analyticRuleVersion79]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject79')._analyticRulecontentId79]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a preferred network is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Preferred Networks Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 32800\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject79').analyticRuleId79,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 79",
                "parentId": "[variables('analyticRuleObject79').analyticRuleId79]",
                "contentId": "[variables('analyticRuleObject79')._analyticRulecontentId79]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject79').analyticRuleVersion79]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject79')._analyticRulecontentId79]",
        "contentKind": "AnalyticsRule",
        "displayName": "Preferred Networks Deleted",
        "contentProductId": "[variables('analyticRuleObject79')._analyticRulecontentProductId79]",
        "id": "[variables('analyticRuleObject79')._analyticRulecontentProductId79]",
        "version": "[variables('analyticRuleObject79').analyticRuleVersion79]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject80').analyticRuleTemplateSpecName80]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Protection_Group_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject80').analyticRuleVersion80]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject80')._analyticRulecontentId80]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a protection group is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Protection Group Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29120\n| extend ProtectionGroupName = extract(\"ProtectionGroupName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Protection Group Name\"] = ProtectionGroupName,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject80').analyticRuleId80,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 80",
                "parentId": "[variables('analyticRuleObject80').analyticRuleId80]",
                "contentId": "[variables('analyticRuleObject80')._analyticRulecontentId80]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject80').analyticRuleVersion80]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject80')._analyticRulecontentId80]",
        "contentKind": "AnalyticsRule",
        "displayName": "Protection Group Deleted",
        "contentProductId": "[variables('analyticRuleObject80')._analyticRulecontentProductId80]",
        "id": "[variables('analyticRuleObject80')._analyticRulecontentProductId80]",
        "version": "[variables('analyticRuleObject80').analyticRuleVersion80]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject81').analyticRuleTemplateSpecName81]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Protection_Group_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject81').analyticRuleVersion81]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject81')._analyticRulecontentId81]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when protection group settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Protection Group Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 29110\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject81').analyticRuleId81,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 81",
                "parentId": "[variables('analyticRuleObject81').analyticRuleId81]",
                "contentId": "[variables('analyticRuleObject81')._analyticRulecontentId81]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject81').analyticRuleVersion81]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject81')._analyticRulecontentId81]",
        "contentKind": "AnalyticsRule",
        "displayName": "Protection Group Settings Updated",
        "contentProductId": "[variables('analyticRuleObject81')._analyticRulecontentProductId81]",
        "id": "[variables('analyticRuleObject81')._analyticRulecontentProductId81]",
        "version": "[variables('analyticRuleObject81').analyticRuleVersion81]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject82').analyticRuleTemplateSpecName82]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Recovery_Token_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject82').analyticRuleVersion82]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject82')._analyticRulecontentId82]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a recovery token is deleted. This might indicate unauthorized removal of critical components.",
                "displayName": "Recovery Token Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 36013\n| extend TokenID = extract(\"TokenID=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Token ID\"] = TokenID,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject82').analyticRuleId82,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 82",
                "parentId": "[variables('analyticRuleObject82').analyticRuleId82]",
                "contentId": "[variables('analyticRuleObject82')._analyticRulecontentId82]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject82').analyticRuleVersion82]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject82')._analyticRulecontentId82]",
        "contentKind": "AnalyticsRule",
        "displayName": "Recovery Token Deleted",
        "contentProductId": "[variables('analyticRuleObject82')._analyticRulecontentProductId82]",
        "id": "[variables('analyticRuleObject82')._analyticRulecontentProductId82]",
        "version": "[variables('analyticRuleObject82').analyticRuleVersion82]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject83').analyticRuleTemplateSpecName83]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restore_Point_Marked_as_Clean_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject83').analyticRuleVersion83]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject83')._analyticRulecontentId83]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a restore point is marked as clean.",
                "displayName": "Restore Point Marked as Clean",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42230\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject83').analyticRuleId83,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 83",
                "parentId": "[variables('analyticRuleObject83').analyticRuleId83]",
                "contentId": "[variables('analyticRuleObject83')._analyticRulecontentId83]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject83').analyticRuleVersion83]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject83')._analyticRulecontentId83]",
        "contentKind": "AnalyticsRule",
        "displayName": "Restore Point Marked as Clean",
        "contentProductId": "[variables('analyticRuleObject83')._analyticRulecontentProductId83]",
        "id": "[variables('analyticRuleObject83')._analyticRulecontentProductId83]",
        "version": "[variables('analyticRuleObject83').analyticRuleVersion83]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject84').analyticRuleTemplateSpecName84]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Restore_Point_Marked_as_Infected_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject84').analyticRuleVersion84]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject84')._analyticRulecontentId84]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a restore point is marked as infected.",
                "displayName": "Restore Point Marked as Infected",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 42220\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject84').analyticRuleId84,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 84",
                "parentId": "[variables('analyticRuleObject84').analyticRuleId84]",
                "contentId": "[variables('analyticRuleObject84')._analyticRulecontentId84]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject84').analyticRuleVersion84]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject84')._analyticRulecontentId84]",
        "contentKind": "AnalyticsRule",
        "displayName": "Restore Point Marked as Infected",
        "contentProductId": "[variables('analyticRuleObject84')._analyticRulecontentProductId84]",
        "id": "[variables('analyticRuleObject84')._analyticRulecontentProductId84]",
        "version": "[variables('analyticRuleObject84').analyticRuleVersion84]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject85').analyticRuleTemplateSpecName85]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Scale_Out_Backup_Repository_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject85').analyticRuleVersion85]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject85')._analyticRulecontentId85]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a scale-out backup repository is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Scale-Out Backup Repository Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30200\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject85').analyticRuleId85,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 85",
                "parentId": "[variables('analyticRuleObject85').analyticRuleId85]",
                "contentId": "[variables('analyticRuleObject85')._analyticRulecontentId85]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject85').analyticRuleVersion85]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject85')._analyticRulecontentId85]",
        "contentKind": "AnalyticsRule",
        "displayName": "Scale-Out Backup Repository Deleted",
        "contentProductId": "[variables('analyticRuleObject85')._analyticRulecontentProductId85]",
        "id": "[variables('analyticRuleObject85')._analyticRulecontentProductId85]",
        "version": "[variables('analyticRuleObject85').analyticRuleVersion85]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject86').analyticRuleTemplateSpecName86]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Scale_Out_Backup_Repository_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject86').analyticRuleVersion86]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject86')._analyticRulecontentId86]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when scale-out backup repository settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Scale-Out Backup Repository Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30100\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject86').analyticRuleId86,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 86",
                "parentId": "[variables('analyticRuleObject86').analyticRuleId86]",
                "contentId": "[variables('analyticRuleObject86')._analyticRulecontentId86]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject86').analyticRuleVersion86]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject86')._analyticRulecontentId86]",
        "contentKind": "AnalyticsRule",
        "displayName": "Scale-Out Backup Repository Settings Updated",
        "contentProductId": "[variables('analyticRuleObject86')._analyticRulecontentProductId86]",
        "id": "[variables('analyticRuleObject86')._analyticRulecontentProductId86]",
        "version": "[variables('analyticRuleObject86').analyticRuleVersion86]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject87').analyticRuleTemplateSpecName87]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Service_Provider_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject87').analyticRuleVersion87]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject87')._analyticRulecontentId87]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a service provider is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Service Provider Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27600\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject87').analyticRuleId87,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 87",
                "parentId": "[variables('analyticRuleObject87').analyticRuleId87]",
                "contentId": "[variables('analyticRuleObject87')._analyticRulecontentId87]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject87').analyticRuleVersion87]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject87')._analyticRulecontentId87]",
        "contentKind": "AnalyticsRule",
        "displayName": "Service Provider Deleted",
        "contentProductId": "[variables('analyticRuleObject87')._analyticRulecontentProductId87]",
        "id": "[variables('analyticRuleObject87')._analyticRulecontentProductId87]",
        "version": "[variables('analyticRuleObject87').analyticRuleVersion87]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject88').analyticRuleTemplateSpecName88]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Service_Provider_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject88').analyticRuleVersion88]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject88')._analyticRulecontentId88]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when service provider settings are updated in Veeam Backup & Replication.",
                "displayName": "Service Provider Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27500\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject88').analyticRuleId88,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 88",
                "parentId": "[variables('analyticRuleObject88').analyticRuleId88]",
                "contentId": "[variables('analyticRuleObject88')._analyticRulecontentId88]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject88').analyticRuleVersion88]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject88')._analyticRulecontentId88]",
        "contentKind": "AnalyticsRule",
        "displayName": "Service Provider Updated",
        "contentProductId": "[variables('analyticRuleObject88')._analyticRulecontentProductId88]",
        "id": "[variables('analyticRuleObject88')._analyticRulecontentProductId88]",
        "version": "[variables('analyticRuleObject88').analyticRuleVersion88]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject89').analyticRuleTemplateSpecName89]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SSH_Credentials_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject89').analyticRuleVersion89]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject89')._analyticRulecontentId89]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when SSH credentials are updated.",
                "displayName": "SSH Credentials Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31900\n| extend RelatedCredsName = extract(\"RelatedCredsName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Credential Record\"] = RelatedCredsName,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject89').analyticRuleId89,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 89",
                "parentId": "[variables('analyticRuleObject89').analyticRuleId89]",
                "contentId": "[variables('analyticRuleObject89')._analyticRulecontentId89]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject89').analyticRuleVersion89]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject89')._analyticRulecontentId89]",
        "contentKind": "AnalyticsRule",
        "displayName": "SSH Credentials Changed",
        "contentProductId": "[variables('analyticRuleObject89')._analyticRulecontentProductId89]",
        "id": "[variables('analyticRuleObject89')._analyticRulecontentProductId89]",
        "version": "[variables('analyticRuleObject89').analyticRuleVersion89]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject90').analyticRuleTemplateSpecName90]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Storage_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject90').analyticRuleVersion90]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject90')._analyticRulecontentId90]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when storage is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Storage Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41402\n| extend Name = extract(\"Name=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n    [\"Object Name\"] = Name,\n    MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject90').analyticRuleId90,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 90",
                "parentId": "[variables('analyticRuleObject90').analyticRuleId90]",
                "contentId": "[variables('analyticRuleObject90')._analyticRulecontentId90]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject90').analyticRuleVersion90]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject90')._analyticRulecontentId90]",
        "contentKind": "AnalyticsRule",
        "displayName": "Storage Deleted",
        "contentProductId": "[variables('analyticRuleObject90')._analyticRulecontentProductId90]",
        "id": "[variables('analyticRuleObject90')._analyticRulecontentProductId90]",
        "version": "[variables('analyticRuleObject90').analyticRuleVersion90]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject91').analyticRuleTemplateSpecName91]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Storage_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject91').analyticRuleVersion91]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject91')._analyticRulecontentId91]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when storage settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Storage Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 41401\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject91').analyticRuleId91,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 91",
                "parentId": "[variables('analyticRuleObject91').analyticRuleId91]",
                "contentId": "[variables('analyticRuleObject91')._analyticRulecontentId91]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject91').analyticRuleVersion91]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject91')._analyticRulecontentId91]",
        "contentKind": "AnalyticsRule",
        "displayName": "Storage Settings Updated",
        "contentProductId": "[variables('analyticRuleObject91')._analyticRulecontentProductId91]",
        "id": "[variables('analyticRuleObject91')._analyticRulecontentProductId91]",
        "version": "[variables('analyticRuleObject91').analyticRuleVersion91]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject92').analyticRuleTemplateSpecName92]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Subtenant_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject92').analyticRuleVersion92]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject92')._analyticRulecontentId92]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a subtenant is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Subtenant Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25210\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject92').analyticRuleId92,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 92",
                "parentId": "[variables('analyticRuleObject92').analyticRuleId92]",
                "contentId": "[variables('analyticRuleObject92')._analyticRulecontentId92]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject92').analyticRuleVersion92]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject92')._analyticRulecontentId92]",
        "contentKind": "AnalyticsRule",
        "displayName": "Subtenant Deleted",
        "contentProductId": "[variables('analyticRuleObject92')._analyticRulecontentProductId92]",
        "id": "[variables('analyticRuleObject92')._analyticRulecontentProductId92]",
        "version": "[variables('analyticRuleObject92').analyticRuleVersion92]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject93').analyticRuleTemplateSpecName93]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Subtenant_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject93').analyticRuleVersion93]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject93')._analyticRulecontentId93]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when subtenant settings are updated in Veeam Backup & Replication.",
                "displayName": "Subtenant Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25220\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject93').analyticRuleId93,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 93",
                "parentId": "[variables('analyticRuleObject93').analyticRuleId93]",
                "contentId": "[variables('analyticRuleObject93')._analyticRulecontentId93]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject93').analyticRuleVersion93]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject93')._analyticRulecontentId93]",
        "contentKind": "AnalyticsRule",
        "displayName": "Subtenant Updated",
        "contentProductId": "[variables('analyticRuleObject93')._analyticRulecontentProductId93]",
        "id": "[variables('analyticRuleObject93')._analyticRulecontentProductId93]",
        "version": "[variables('analyticRuleObject93').analyticRuleVersion93]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject94').analyticRuleTemplateSpecName94]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "SureBackup_Job_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject94').analyticRuleVersion94]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject94')._analyticRulecontentId94]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed SureBackup job operations. This might indicate malware issues, storage problems, or potential sabotage of backup infrastructure.",
                "displayName": "SureBackup Job Failed",
                "enabled": false,
                "query": "Veeam_GetJobFinished\n| where instanceId == 390\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"StateMessage\"] = JobTypeDescription,\n    [\"State\"] = JobResultMessage,\n    Severity = Severity,\n    MessageDetails = Description",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject94').analyticRuleId94,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 94",
                "parentId": "[variables('analyticRuleObject94').analyticRuleId94]",
                "contentId": "[variables('analyticRuleObject94')._analyticRulecontentId94]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject94').analyticRuleVersion94]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject94')._analyticRulecontentId94]",
        "contentKind": "AnalyticsRule",
        "displayName": "SureBackup Job Failed",
        "contentProductId": "[variables('analyticRuleObject94')._analyticRulecontentProductId94]",
        "id": "[variables('analyticRuleObject94')._analyticRulecontentProductId94]",
        "version": "[variables('analyticRuleObject94').analyticRuleVersion94]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject95').analyticRuleTemplateSpecName95]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Erase_Job_Started_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject95').analyticRuleVersion95]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject95')._analyticRulecontentId95]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when tape erase operations start. This might indicate data destruction activity.",
                "displayName": "Tape Erase Job Started",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 115\n| extend JobName = extract(\"JobName=\\\"([^\\\"]*)\\\"\", 1, SyslogMessage)\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"Job Name\"] = JobName,\n    MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject95').analyticRuleId95,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 95",
                "parentId": "[variables('analyticRuleObject95').analyticRuleId95]",
                "contentId": "[variables('analyticRuleObject95')._analyticRulecontentId95]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject95').analyticRuleVersion95]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject95')._analyticRulecontentId95]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Erase Job Started",
        "contentProductId": "[variables('analyticRuleObject95')._analyticRulecontentProductId95]",
        "id": "[variables('analyticRuleObject95')._analyticRulecontentProductId95]",
        "version": "[variables('analyticRuleObject95').analyticRuleVersion95]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject96').analyticRuleTemplateSpecName96]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Library_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject96').analyticRuleVersion96]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject96')._analyticRulecontentId96]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tape library is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tape Library Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23633\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject96').analyticRuleId96,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 96",
                "parentId": "[variables('analyticRuleObject96').analyticRuleId96]",
                "contentId": "[variables('analyticRuleObject96')._analyticRulecontentId96]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject96').analyticRuleVersion96]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject96')._analyticRulecontentId96]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Library Deleted",
        "contentProductId": "[variables('analyticRuleObject96')._analyticRulecontentProductId96]",
        "id": "[variables('analyticRuleObject96')._analyticRulecontentProductId96]",
        "version": "[variables('analyticRuleObject96').analyticRuleVersion96]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject97').analyticRuleTemplateSpecName97]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Media_Pool_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject97').analyticRuleVersion97]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject97')._analyticRulecontentId97]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tape media pool is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tape Media Pool Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23630\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject97').analyticRuleId97,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 97",
                "parentId": "[variables('analyticRuleObject97').analyticRuleId97]",
                "contentId": "[variables('analyticRuleObject97')._analyticRulecontentId97]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject97').analyticRuleVersion97]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject97')._analyticRulecontentId97]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Media Pool Deleted",
        "contentProductId": "[variables('analyticRuleObject97')._analyticRulecontentProductId97]",
        "id": "[variables('analyticRuleObject97')._analyticRulecontentProductId97]",
        "version": "[variables('analyticRuleObject97').analyticRuleVersion97]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject98').analyticRuleTemplateSpecName98]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Media_Vault_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject98').analyticRuleVersion98]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject98')._analyticRulecontentId98]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tape media vault is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tape Media Vault Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23631\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject98').analyticRuleId98,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 98",
                "parentId": "[variables('analyticRuleObject98').analyticRuleId98]",
                "contentId": "[variables('analyticRuleObject98')._analyticRulecontentId98]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject98').analyticRuleVersion98]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject98')._analyticRulecontentId98]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Media Vault Deleted",
        "contentProductId": "[variables('analyticRuleObject98')._analyticRulecontentProductId98]",
        "id": "[variables('analyticRuleObject98')._analyticRulecontentProductId98]",
        "version": "[variables('analyticRuleObject98').analyticRuleVersion98]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject99').analyticRuleTemplateSpecName99]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Medium_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject99').analyticRuleVersion99]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject99')._analyticRulecontentId99]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tape medium is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tape Medium Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 23632\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject99').analyticRuleId99,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 99",
                "parentId": "[variables('analyticRuleObject99').analyticRuleId99]",
                "contentId": "[variables('analyticRuleObject99')._analyticRulecontentId99]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject99').analyticRuleVersion99]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject99')._analyticRulecontentId99]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Medium Deleted",
        "contentProductId": "[variables('analyticRuleObject99')._analyticRulecontentProductId99]",
        "id": "[variables('analyticRuleObject99')._analyticRulecontentProductId99]",
        "version": "[variables('analyticRuleObject99').analyticRuleVersion99]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject100').analyticRuleTemplateSpecName100]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tape_Server_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject100').analyticRuleVersion100]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject100')._analyticRulecontentId100]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tape server is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tape Server Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 28800\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject100').analyticRuleId100,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 100",
                "parentId": "[variables('analyticRuleObject100').analyticRuleId100]",
                "contentId": "[variables('analyticRuleObject100')._analyticRulecontentId100]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject100').analyticRuleVersion100]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject100')._analyticRulecontentId100]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tape Server Deleted",
        "contentProductId": "[variables('analyticRuleObject100')._analyticRulecontentProductId100]",
        "id": "[variables('analyticRuleObject100')._analyticRulecontentProductId100]",
        "version": "[variables('analyticRuleObject100').analyticRuleVersion100]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject101').analyticRuleTemplateSpecName101]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_Password_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject101').analyticRuleVersion101]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject101')._analyticRulecontentId101]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tenant password is updated.",
                "displayName": "Tenant Password Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24114\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT1H",
                "queryPeriod": "PT1H",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject101').analyticRuleId101,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 101",
                "parentId": "[variables('analyticRuleObject101').analyticRuleId101]",
                "contentId": "[variables('analyticRuleObject101')._analyticRulecontentId101]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject101').analyticRuleVersion101]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject101')._analyticRulecontentId101]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant Password Changed",
        "contentProductId": "[variables('analyticRuleObject101')._analyticRulecontentProductId101]",
        "id": "[variables('analyticRuleObject101')._analyticRulecontentProductId101]",
        "version": "[variables('analyticRuleObject101').analyticRuleVersion101]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject102').analyticRuleTemplateSpecName102]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_Quota_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject102').analyticRuleVersion102]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject102')._analyticRulecontentId102]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tenant quota is updated.",
                "displayName": "Tenant Quota Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24160\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject102').analyticRuleId102,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 102",
                "parentId": "[variables('analyticRuleObject102').analyticRuleId102]",
                "contentId": "[variables('analyticRuleObject102')._analyticRulecontentId102]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject102').analyticRuleVersion102]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject102')._analyticRulecontentId102]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant Quota Changed",
        "contentProductId": "[variables('analyticRuleObject102')._analyticRulecontentProductId102]",
        "id": "[variables('analyticRuleObject102')._analyticRulecontentProductId102]",
        "version": "[variables('analyticRuleObject102').analyticRuleVersion102]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject103').analyticRuleTemplateSpecName103]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_Quota_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject103').analyticRuleVersion103]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject103')._analyticRulecontentId103]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tenant quota is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Tenant Quota Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 24170\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject103').analyticRuleId103,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 103",
                "parentId": "[variables('analyticRuleObject103').analyticRuleId103]",
                "contentId": "[variables('analyticRuleObject103')._analyticRulecontentId103]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject103').analyticRuleVersion103]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject103')._analyticRulecontentId103]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant Quota Deleted",
        "contentProductId": "[variables('analyticRuleObject103')._analyticRulecontentProductId103]",
        "id": "[variables('analyticRuleObject103')._analyticRulecontentProductId103]",
        "version": "[variables('analyticRuleObject103').analyticRuleVersion103]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject104').analyticRuleTemplateSpecName104]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_Replica_Started_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject104').analyticRuleVersion104]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject104')._analyticRulecontentId104]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tenant replica starts.",
                "displayName": "Tenant Replica Started",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26800\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject104').analyticRuleId104,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 104",
                "parentId": "[variables('analyticRuleObject104').analyticRuleId104]",
                "contentId": "[variables('analyticRuleObject104')._analyticRulecontentId104]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject104').analyticRuleVersion104]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject104')._analyticRulecontentId104]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant Replica Started",
        "contentProductId": "[variables('analyticRuleObject104')._analyticRulecontentProductId104]",
        "id": "[variables('analyticRuleObject104')._analyticRulecontentProductId104]",
        "version": "[variables('analyticRuleObject104').analyticRuleVersion104]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject105').analyticRuleTemplateSpecName105]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_Replica_Stopped_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject105').analyticRuleVersion105]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject105')._analyticRulecontentId105]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a tenant replica stops.",
                "displayName": "Tenant Replica Stopped",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 26900\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject105').analyticRuleId105,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 105",
                "parentId": "[variables('analyticRuleObject105').analyticRuleId105]",
                "contentId": "[variables('analyticRuleObject105')._analyticRulecontentId105]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject105').analyticRuleVersion105]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject105')._analyticRulecontentId105]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant Replica Stopped",
        "contentProductId": "[variables('analyticRuleObject105')._analyticRulecontentProductId105]",
        "id": "[variables('analyticRuleObject105')._analyticRulecontentProductId105]",
        "version": "[variables('analyticRuleObject105').analyticRuleVersion105]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject106').analyticRuleTemplateSpecName106]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Tenant_State_Changed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject106').analyticRuleVersion106]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject106')._analyticRulecontentId106]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when tenant state is updated.",
                "displayName": "Tenant State Changed",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 25000\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject106').analyticRuleId106,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 106",
                "parentId": "[variables('analyticRuleObject106').analyticRuleId106]",
                "contentId": "[variables('analyticRuleObject106')._analyticRulecontentId106]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject106').analyticRuleVersion106]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject106')._analyticRulecontentId106]",
        "contentKind": "AnalyticsRule",
        "displayName": "Tenant State Changed",
        "contentProductId": "[variables('analyticRuleObject106')._analyticRulecontentProductId106]",
        "id": "[variables('analyticRuleObject106')._analyticRulecontentProductId106]",
        "version": "[variables('analyticRuleObject106').analyticRuleVersion106]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject107').analyticRuleTemplateSpecName107]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "User_or_Group_Added_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject107').analyticRuleVersion107]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject107')._analyticRulecontentId107]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a user or user group is added to Veeam Backup & Replication.",
                "displayName": "User or Group Added",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31200\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject107').analyticRuleId107,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 107",
                "parentId": "[variables('analyticRuleObject107').analyticRuleId107]",
                "contentId": "[variables('analyticRuleObject107')._analyticRulecontentId107]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject107').analyticRuleVersion107]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject107')._analyticRulecontentId107]",
        "contentKind": "AnalyticsRule",
        "displayName": "User or Group Added",
        "contentProductId": "[variables('analyticRuleObject107')._analyticRulecontentProductId107]",
        "id": "[variables('analyticRuleObject107')._analyticRulecontentProductId107]",
        "version": "[variables('analyticRuleObject107').analyticRuleVersion107]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject108').analyticRuleTemplateSpecName108]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "User_or_Group_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject108').analyticRuleVersion108]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject108')._analyticRulecontentId108]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a user or user group is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "User or Group Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 31400\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject108').analyticRuleId108,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 108",
                "parentId": "[variables('analyticRuleObject108').analyticRuleId108]",
                "contentId": "[variables('analyticRuleObject108')._analyticRulecontentId108]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject108').analyticRuleVersion108]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject108')._analyticRulecontentId108]",
        "contentKind": "AnalyticsRule",
        "displayName": "User or Group Deleted",
        "contentProductId": "[variables('analyticRuleObject108')._analyticRulecontentProductId108]",
        "id": "[variables('analyticRuleObject108')._analyticRulecontentProductId108]",
        "version": "[variables('analyticRuleObject108').analyticRuleVersion108]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject109').analyticRuleTemplateSpecName109]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Best_Practice_Compliance_Check_Not_Passed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject109').analyticRuleVersion109]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject109')._analyticRulecontentId109]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a security best practice does not pass a compliance check in Veeam Security & Compliance Analyzer.",
                "displayName": "Best Practice Compliance Check Not Passed",
                "enabled": false,
                "query": "VeeamSecurityComplianceAnalyzer_CL\r\n| where Status != \"OK\"",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamSecurityComplianceAnalyzer_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Note": "Note",
                  "TenantId": "TenantId",
                  "VbrHostName": "VbrHostName",
                  "Id": "Id",
                  "Status": "Status",
                  "BestPracticeName": "BestPractice"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject109').analyticRuleId109,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 109",
                "parentId": "[variables('analyticRuleObject109').analyticRuleId109]",
                "contentId": "[variables('analyticRuleObject109')._analyticRulecontentId109]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject109').analyticRuleVersion109]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject109')._analyticRulecontentId109]",
        "contentKind": "AnalyticsRule",
        "displayName": "Best Practice Compliance Check Not Passed",
        "contentProductId": "[variables('analyticRuleObject109')._analyticRulecontentProductId109]",
        "id": "[variables('analyticRuleObject109')._analyticRulecontentProductId109]",
        "version": "[variables('analyticRuleObject109').analyticRuleVersion109]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject110').analyticRuleTemplateSpecName110]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Application_with_no_recent_data_backup_sessions_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject110').analyticRuleVersion110]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject110')._analyticRulecontentId110]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects applications with no recent backup sessions.",
                "displayName": "Veeam ONE Application with No Recent Data Backup Sessions",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 391",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject110').analyticRuleId110,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 110",
                "parentId": "[variables('analyticRuleObject110').analyticRuleId110]",
                "contentId": "[variables('analyticRuleObject110')._analyticRulecontentId110]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject110').analyticRuleVersion110]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject110')._analyticRulecontentId110]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Application with No Recent Data Backup Sessions",
        "contentProductId": "[variables('analyticRuleObject110')._analyticRulecontentProductId110]",
        "id": "[variables('analyticRuleObject110')._analyticRulecontentProductId110]",
        "version": "[variables('analyticRuleObject110').analyticRuleVersion110]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject111').analyticRuleTemplateSpecName111]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Backup_Copy_RPO_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject111').analyticRuleVersion111]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject111')._analyticRulecontentId111]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE Backup Copy RPO violation alerts.",
                "displayName": "Veeam ONE Backup Copy RPO",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 365",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject111').analyticRuleId111,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 111",
                "parentId": "[variables('analyticRuleObject111').analyticRuleId111]",
                "contentId": "[variables('analyticRuleObject111')._analyticRulecontentId111]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject111').analyticRuleVersion111]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject111')._analyticRulecontentId111]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Backup Copy RPO",
        "contentProductId": "[variables('analyticRuleObject111')._analyticRulecontentProductId111]",
        "id": "[variables('analyticRuleObject111')._analyticRulecontentProductId111]",
        "version": "[variables('analyticRuleObject111').analyticRuleVersion111]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject112').analyticRuleTemplateSpecName112]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Backup_server_security_&_compliance_state_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject112').analyticRuleVersion112]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject112')._analyticRulecontentId112]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects backup server security and compliance state issues.",
                "displayName": "Veeam ONE Backup Server Security and Compliance State",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 395",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject112').analyticRuleId112,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 112",
                "parentId": "[variables('analyticRuleObject112').analyticRuleId112]",
                "contentId": "[variables('analyticRuleObject112')._analyticRulecontentId112]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject112').analyticRuleVersion112]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject112')._analyticRulecontentId112]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Backup Server Security and Compliance State",
        "contentProductId": "[variables('analyticRuleObject112')._analyticRulecontentProductId112]",
        "id": "[variables('analyticRuleObject112')._analyticRulecontentProductId112]",
        "version": "[variables('analyticRuleObject112').analyticRuleVersion112]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject113').analyticRuleTemplateSpecName113]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Computer_with_no_backup_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject113').analyticRuleVersion113]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject113')._analyticRulecontentId113]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects computers with no backup.",
                "displayName": "Veeam ONE Computer with No Backup",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 370",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject113').analyticRuleId113,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 113",
                "parentId": "[variables('analyticRuleObject113').analyticRuleId113]",
                "contentId": "[variables('analyticRuleObject113')._analyticRulecontentId113]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject113').analyticRuleVersion113]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject113')._analyticRulecontentId113]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Computer with No Backup",
        "contentProductId": "[variables('analyticRuleObject113')._analyticRulecontentProductId113]",
        "id": "[variables('analyticRuleObject113')._analyticRulecontentProductId113]",
        "version": "[variables('analyticRuleObject113').analyticRuleVersion113]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject114').analyticRuleTemplateSpecName114]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Immutability_change_tracking_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject114').analyticRuleVersion114]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject114')._analyticRulecontentId114]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects changes in Veeam ONE immutability tracking configuration.",
                "displayName": "Veeam ONE Immutability Change Tracking",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 377",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject114').analyticRuleId114,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 114",
                "parentId": "[variables('analyticRuleObject114').analyticRuleId114]",
                "contentId": "[variables('analyticRuleObject114')._analyticRulecontentId114]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject114').analyticRuleVersion114]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject114')._analyticRulecontentId114]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Immutability Change Tracking",
        "contentProductId": "[variables('analyticRuleObject114')._analyticRulecontentProductId114]",
        "id": "[variables('analyticRuleObject114')._analyticRulecontentProductId114]",
        "version": "[variables('analyticRuleObject114').analyticRuleVersion114]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject115').analyticRuleTemplateSpecName115]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Immutability_state_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject115').analyticRuleVersion115]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject115')._analyticRulecontentId115]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects changes in the immutability state of Veeam Backup & Replication repositories. This might indicate configuration changes that require review.",
                "displayName": "Veeam ONE Immutability State",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 376",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject115').analyticRuleId115,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 115",
                "parentId": "[variables('analyticRuleObject115').analyticRuleId115]",
                "contentId": "[variables('analyticRuleObject115')._analyticRulecontentId115]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject115').analyticRuleVersion115]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject115')._analyticRulecontentId115]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Immutability State",
        "contentProductId": "[variables('analyticRuleObject115')._analyticRulecontentProductId115]",
        "id": "[variables('analyticRuleObject115')._analyticRulecontentProductId115]",
        "version": "[variables('analyticRuleObject115').analyticRuleVersion115]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject116').analyticRuleTemplateSpecName116]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Job_disabled_Veeam_Backup_for_Microsoft_365_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject116').analyticRuleVersion116]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject116')._analyticRulecontentId116]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when Veeam Backup for Microsoft 365 jobs are disabled.",
                "displayName": "Veeam ONE Job Disabled (Veeam Backup for Microsoft 365)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 378",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject116').analyticRuleId116,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 116",
                "parentId": "[variables('analyticRuleObject116').analyticRuleId116]",
                "contentId": "[variables('analyticRuleObject116')._analyticRulecontentId116]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject116').analyticRuleVersion116]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject116')._analyticRulecontentId116]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Job Disabled (Veeam Backup for Microsoft 365)",
        "contentProductId": "[variables('analyticRuleObject116')._analyticRulecontentProductId116]",
        "id": "[variables('analyticRuleObject116')._analyticRulecontentProductId116]",
        "version": "[variables('analyticRuleObject116').analyticRuleVersion116]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject117').analyticRuleTemplateSpecName117]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Job_disabled_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject117').analyticRuleVersion117]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject117')._analyticRulecontentId117]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a Veeam ONE job is disabled.",
                "displayName": "Veeam ONE Job Disabled",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 316",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject117').analyticRuleId117,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 117",
                "parentId": "[variables('analyticRuleObject117').analyticRuleId117]",
                "contentId": "[variables('analyticRuleObject117')._analyticRulecontentId117]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject117').analyticRuleVersion117]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject117')._analyticRulecontentId117]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Job Disabled",
        "contentProductId": "[variables('analyticRuleObject117')._analyticRulecontentProductId117]",
        "id": "[variables('analyticRuleObject117')._analyticRulecontentProductId117]",
        "version": "[variables('analyticRuleObject117').analyticRuleVersion117]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject118').analyticRuleTemplateSpecName118]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Possible_ransomware_activity_Hyper_V_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject118').analyticRuleVersion118]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject118')._analyticRulecontentId118]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE possible ransomware activity alerts for Microsoft Hyper-V.",
                "displayName": "Veeam ONE Possible Ransomware Activity (Hyper-V)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 344",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject118').analyticRuleId118,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 118",
                "parentId": "[variables('analyticRuleObject118').analyticRuleId118]",
                "contentId": "[variables('analyticRuleObject118')._analyticRulecontentId118]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject118').analyticRuleVersion118]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject118')._analyticRulecontentId118]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Possible Ransomware Activity (Hyper-V)",
        "contentProductId": "[variables('analyticRuleObject118')._analyticRulecontentProductId118]",
        "id": "[variables('analyticRuleObject118')._analyticRulecontentProductId118]",
        "version": "[variables('analyticRuleObject118').analyticRuleVersion118]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject119').analyticRuleTemplateSpecName119]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Possible_ransomware_activity_vSphere_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject119').analyticRuleVersion119]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject119')._analyticRulecontentId119]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE possible ransomware activity alerts for VMware vSphere.",
                "displayName": "Veeam ONE Possible Ransomware Activity (vSphere)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 342",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject119').analyticRuleId119,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 119",
                "parentId": "[variables('analyticRuleObject119').analyticRuleId119]",
                "contentId": "[variables('analyticRuleObject119')._analyticRulecontentId119]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject119').analyticRuleVersion119]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject119')._analyticRulecontentId119]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Possible Ransomware Activity (vSphere)",
        "contentProductId": "[variables('analyticRuleObject119')._analyticRulecontentProductId119]",
        "id": "[variables('analyticRuleObject119')._analyticRulecontentProductId119]",
        "version": "[variables('analyticRuleObject119').analyticRuleVersion119]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject120').analyticRuleTemplateSpecName120]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Suspicious_incremental_backup_size_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject120').analyticRuleVersion120]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject120')._analyticRulecontentId120]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects suspiciously large incremental backup sizes.",
                "displayName": "Veeam ONE Suspicious Incremental Backup Size",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 364",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject120').analyticRuleId120,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 120",
                "parentId": "[variables('analyticRuleObject120').analyticRuleId120]",
                "contentId": "[variables('analyticRuleObject120')._analyticRulecontentId120]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject120').analyticRuleVersion120]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject120')._analyticRulecontentId120]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Suspicious Incremental Backup Size",
        "contentProductId": "[variables('analyticRuleObject120')._analyticRulecontentProductId120]",
        "id": "[variables('analyticRuleObject120')._analyticRulecontentProductId120]",
        "version": "[variables('analyticRuleObject120').analyticRuleVersion120]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject121').analyticRuleTemplateSpecName121]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Unusual_job_duration_Veeam_Backup_for_Microsoft_365_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject121').analyticRuleVersion121]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject121')._analyticRulecontentId121]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam Backup for Microsoft 365 jobs with unusual execution duration.",
                "displayName": "Veeam ONE Unusual Job Duration (Veeam Backup for Microsoft 365)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 381",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject121').analyticRuleId121,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 121",
                "parentId": "[variables('analyticRuleObject121').analyticRuleId121]",
                "contentId": "[variables('analyticRuleObject121')._analyticRulecontentId121]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject121').analyticRuleVersion121]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject121')._analyticRulecontentId121]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Unusual Job Duration (Veeam Backup for Microsoft 365)",
        "contentProductId": "[variables('analyticRuleObject121')._analyticRulecontentProductId121]",
        "id": "[variables('analyticRuleObject121')._analyticRulecontentProductId121]",
        "version": "[variables('analyticRuleObject121').analyticRuleVersion121]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject122').analyticRuleTemplateSpecName122]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Unusual_job_duration_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject122').analyticRuleVersion122]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject122')._analyticRulecontentId122]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE unusual job duration alerts.",
                "displayName": "Veeam ONE Unusual Job Duration",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 369",
                "queryFrequency": "PT3H",
                "queryPeriod": "PT3H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject122').analyticRuleId122,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 122",
                "parentId": "[variables('analyticRuleObject122').analyticRuleId122]",
                "contentId": "[variables('analyticRuleObject122')._analyticRulecontentId122]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject122').analyticRuleVersion122]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject122')._analyticRulecontentId122]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Unusual Job Duration",
        "contentProductId": "[variables('analyticRuleObject122')._analyticRulecontentProductId122]",
        "id": "[variables('analyticRuleObject122')._analyticRulecontentProductId122]",
        "version": "[variables('analyticRuleObject122').analyticRuleVersion122]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject123').analyticRuleTemplateSpecName123]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_Veeam_malware_detection_change_tracking_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject123').analyticRuleVersion123]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject123')._analyticRulecontentId123]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects changes in Veeam ONE malware detection tracking.",
                "displayName": "Veeam ONE Malware Detection Change Tracking",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 403",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject123').analyticRuleId123,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 123",
                "parentId": "[variables('analyticRuleObject123').analyticRuleId123]",
                "contentId": "[variables('analyticRuleObject123')._analyticRulecontentId123]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject123').analyticRuleVersion123]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject123')._analyticRulecontentId123]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE Malware Detection Change Tracking",
        "contentProductId": "[variables('analyticRuleObject123')._analyticRulecontentProductId123]",
        "id": "[variables('analyticRuleObject123')._analyticRulecontentProductId123]",
        "version": "[variables('analyticRuleObject123').analyticRuleVersion123]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject124').analyticRuleTemplateSpecName124]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_VM_with_no_backup_Hyper_V_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject124').analyticRuleVersion124]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject124')._analyticRulecontentId124]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE VMs with no backup (Hyper-V).",
                "displayName": "Veeam ONE VM with No Backup (Hyper-V)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 315",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject124').analyticRuleId124,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 124",
                "parentId": "[variables('analyticRuleObject124').analyticRuleId124]",
                "contentId": "[variables('analyticRuleObject124')._analyticRulecontentId124]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject124').analyticRuleVersion124]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject124')._analyticRulecontentId124]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE VM with No Backup (Hyper-V)",
        "contentProductId": "[variables('analyticRuleObject124')._analyticRulecontentProductId124]",
        "id": "[variables('analyticRuleObject124')._analyticRulecontentProductId124]",
        "version": "[variables('analyticRuleObject124').analyticRuleVersion124]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject125').analyticRuleTemplateSpecName125]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_VM_with_no_backup_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject125').analyticRuleVersion125]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject125')._analyticRulecontentId125]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE VMs with no backup.",
                "displayName": "Veeam ONE VM with No Backup",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 314",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject125').analyticRuleId125,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 125",
                "parentId": "[variables('analyticRuleObject125').analyticRuleId125]",
                "contentId": "[variables('analyticRuleObject125')._analyticRulecontentId125]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject125').analyticRuleVersion125]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject125')._analyticRulecontentId125]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE VM with No Backup",
        "contentProductId": "[variables('analyticRuleObject125')._analyticRulecontentProductId125]",
        "id": "[variables('analyticRuleObject125')._analyticRulecontentProductId125]",
        "version": "[variables('analyticRuleObject125').analyticRuleVersion125]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject126').analyticRuleTemplateSpecName126]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_VM_with_no_replica_Hyper_V_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject126').analyticRuleVersion126]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject126')._analyticRulecontentId126]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Hyper-V VMs with no replica configured.",
                "displayName": "Veeam ONE VM with No Replica (Hyper-V)",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 332",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject126').analyticRuleId126,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 126",
                "parentId": "[variables('analyticRuleObject126').analyticRuleId126]",
                "contentId": "[variables('analyticRuleObject126')._analyticRulecontentId126]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject126').analyticRuleVersion126]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject126')._analyticRulecontentId126]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE VM with No Replica (Hyper-V)",
        "contentProductId": "[variables('analyticRuleObject126')._analyticRulecontentProductId126]",
        "id": "[variables('analyticRuleObject126')._analyticRulecontentProductId126]",
        "version": "[variables('analyticRuleObject126').analyticRuleVersion126]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject127').analyticRuleTemplateSpecName127]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Veeam_One_VM_with_no_replica_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject127').analyticRuleVersion127]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject127')._analyticRulecontentId127]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects Veeam ONE VMs with no replica configuration.",
                "displayName": "Veeam ONE VM with No Replica",
                "enabled": false,
                "query": "VeeamOneTriggeredAlarms_CL | where PredefinedAlarmId == 331",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamOneTriggeredAlarms_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "Description": "Description",
                  "Comment": "Comment",
                  "PredefinedAlarmId": "PredefinedAlarmId",
                  "ObjectId": "ObjectId",
                  "Name": "Name",
                  "TriggeredAlarmId": "TriggeredAlarmId",
                  "ObjectName": "ObjectName",
                  "TriggeredTime": "TriggeredTime",
                  "Status": "Status",
                  "VoneHostName": "VoneHostName",
                  "ObjectType": "ObjectType"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject127').analyticRuleId127,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 127",
                "parentId": "[variables('analyticRuleObject127').analyticRuleId127]",
                "contentId": "[variables('analyticRuleObject127')._analyticRulecontentId127]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject127').analyticRuleVersion127]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject127')._analyticRulecontentId127]",
        "contentKind": "AnalyticsRule",
        "displayName": "Veeam ONE VM with No Replica",
        "contentProductId": "[variables('analyticRuleObject127')._analyticRulecontentProductId127]",
        "id": "[variables('analyticRuleObject127')._analyticRulecontentProductId127]",
        "version": "[variables('analyticRuleObject127').analyticRuleVersion127]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject128').analyticRuleTemplateSpecName128]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Virtual_Lab_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject128').analyticRuleVersion128]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject128')._analyticRulecontentId128]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a virtual lab is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "Virtual Lab Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30800\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject128').analyticRuleId128,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 128",
                "parentId": "[variables('analyticRuleObject128').analyticRuleId128]",
                "contentId": "[variables('analyticRuleObject128')._analyticRulecontentId128]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject128').analyticRuleVersion128]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject128')._analyticRulecontentId128]",
        "contentKind": "AnalyticsRule",
        "displayName": "Virtual Lab Deleted",
        "contentProductId": "[variables('analyticRuleObject128')._analyticRulecontentProductId128]",
        "id": "[variables('analyticRuleObject128')._analyticRulecontentProductId128]",
        "version": "[variables('analyticRuleObject128').analyticRuleVersion128]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject129').analyticRuleTemplateSpecName129]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Virtual_Lab_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject129').analyticRuleVersion129]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject129')._analyticRulecontentId129]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when virtual lab settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "Virtual Lab Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 30700\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Low",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject129').analyticRuleId129,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 129",
                "parentId": "[variables('analyticRuleObject129').analyticRuleId129]",
                "contentId": "[variables('analyticRuleObject129')._analyticRulecontentId129]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject129').analyticRuleVersion129]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject129')._analyticRulecontentId129]",
        "contentKind": "AnalyticsRule",
        "displayName": "Virtual Lab Settings Updated",
        "contentProductId": "[variables('analyticRuleObject129')._analyticRulecontentProductId129]",
        "id": "[variables('analyticRuleObject129')._analyticRulecontentProductId129]",
        "version": "[variables('analyticRuleObject129').analyticRuleVersion129]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject130').analyticRuleTemplateSpecName130]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "WAN_Accelerator_Deleted_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject130').analyticRuleVersion130]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject130')._analyticRulecontentId130]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when a WAN accelerator is deleted from Veeam Backup & Replication. This might indicate unauthorized removal of critical components.",
                "displayName": "WAN Accelerator Deleted",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27300\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    [\"User Name\"] = user,\n  MessageDetails = Description,\n   Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject130').analyticRuleId130,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 130",
                "parentId": "[variables('analyticRuleObject130').analyticRuleId130]",
                "contentId": "[variables('analyticRuleObject130')._analyticRulecontentId130]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject130').analyticRuleVersion130]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject130')._analyticRulecontentId130]",
        "contentKind": "AnalyticsRule",
        "displayName": "WAN Accelerator Deleted",
        "contentProductId": "[variables('analyticRuleObject130')._analyticRulecontentProductId130]",
        "id": "[variables('analyticRuleObject130')._analyticRulecontentProductId130]",
        "version": "[variables('analyticRuleObject130').analyticRuleVersion130]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject131').analyticRuleTemplateSpecName131]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "WAN_Accelerator_Settings_Updated_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject131').analyticRuleVersion131]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject131')._analyticRulecontentId131]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects when WAN accelerator settings are updated in Veeam Backup & Replication. This might indicate configuration changes that require review.",
                "displayName": "WAN Accelerator Settings Updated",
                "enabled": false,
                "query": "Veeam_GetSecurityEvents\n| where instanceId == 27200\n| project\n    Date = format_datetime(TimeGenerated, 'dd.MM.yyyy HH:mm'),\n    DataSource = original_host,\n    EventId = instanceId,\n    UserName = user,\n  MessageDetails = Description,\n    Severity = SeverityDescription",
                "queryFrequency": "P1D",
                "queryPeriod": "P1D",
                "severity": "Informational",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "Syslog"
                  },
                  {
                    "dataTypes": [
                      "Syslog"
                    ],
                    "connectorId": "SyslogAma"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "EventId": "EventId",
                  "Date": "Date",
                  "Severity": "Severity",
                  "MessageDetails": "MessageDetails",
                  "VbrHostName": "DataSource"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject131').analyticRuleId131,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 131",
                "parentId": "[variables('analyticRuleObject131').analyticRuleId131]",
                "contentId": "[variables('analyticRuleObject131')._analyticRulecontentId131]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject131').analyticRuleVersion131]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject131')._analyticRulecontentId131]",
        "contentKind": "AnalyticsRule",
        "displayName": "WAN Accelerator Settings Updated",
        "contentProductId": "[variables('analyticRuleObject131')._analyticRulecontentProductId131]",
        "id": "[variables('analyticRuleObject131')._analyticRulecontentProductId131]",
        "version": "[variables('analyticRuleObject131').analyticRuleVersion131]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject132').analyticRuleTemplateSpecName132]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "Configuration_Backup_Failed_AnalyticalRules Analytics Rule with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject132').analyticRuleVersion132]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject132')._analyticRulecontentId132]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Detects failed configuration backup operations. This might indicate system or storage issues, or a potential sabotage of the backup infrastructure.",
                "displayName": "Configuration Backup Failed",
                "enabled": false,
                "query": "VeeamSessions_CL | where SessionType == \"ConfigurationBackup\" and ResultStatus == \"Failed\" | project TimeGenerated, VbrHostName, SessionId = Id, SessionType, Name, Result = ResultStatus",
                "queryFrequency": "PT5M",
                "queryPeriod": "PT5M",
                "severity": "High",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "dataTypes": [
                      "VeeamSessions_CL"
                    ],
                    "connectorId": "VeeamCustomTablesDataConnector"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "SessionId": "SessionId",
                  "Name": "Name",
                  "Result": "Result",
                  "SessionType": "SessionType",
                  "VbrHostName": "VbrHostName"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject132').analyticRuleId132,'/'))))]",
              "properties": {
                "description": "Veeam Analytics Rule 132",
                "parentId": "[variables('analyticRuleObject132').analyticRuleId132]",
                "contentId": "[variables('analyticRuleObject132')._analyticRulecontentId132]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject132').analyticRuleVersion132]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject132')._analyticRulecontentId132]",
        "contentKind": "AnalyticsRule",
        "displayName": "Configuration Backup Failed",
        "contentProductId": "[variables('analyticRuleObject132')._analyticRulecontentProductId132]",
        "id": "[variables('analyticRuleObject132')._analyticRulecontentProductId132]",
        "version": "[variables('analyticRuleObject132').analyticRuleVersion132]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "VeeamDataPlatformMonitoring Workbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "The Veeam Data Platform Monitoring dashboard shows an aggregated view of job activity on your Veeam Backup & Replication servers."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"0b767a3f-72a6-495b-a08e-198348d4efb9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}]},\"value\":{\"durationMs\":2592000000}},{\"id\":\"3ec1d354-0588-43dd-b3e5-7ebab2195c40\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"host_token\",\"label\":\"Veeam Backup & Replication Data Sources\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Veeam_GetJobFinished\\r\\n| summarize by original_host\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"timeContext\":{\"durationMs\":0},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# All Jobs\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where not (instanceId in (\\\"40290\\\", \\\"40800\\\", \\\"150\\\", \\\"450\\\", \\\"151\\\", \\\"451\\\"))\\r\\n| where Allowance\\r\\n| summarize count() by JobResultMessage = JobResultMessage\\r\\n\",\"size\":3,\"timeContext\":{\"durationMs\":86400000},\"exportFieldName\":\"JobResultMessage\",\"exportParameterName\":\"ResultMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"JobResultMessage\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"count_\",\"formatter\":12,\"formatOptions\":{\"palette\":\"purple\"},\"numberFormat\":{\"unit\":17,\"options\":{\"style\":\"decimal\",\"maximumFractionDigits\":2,\"maximumSignificantDigits\":3}}},\"showBorder\":false,\"sortCriteriaField\":\"count_\"}},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where instanceId in (150, 151)\\r\\n| where Allowance == true\\r\\n| extend TransferredGb = todouble(\\r\\n      extract(@\\\"TransferredGb=\\\"\\\"([^\\\"\\\"]*)\\\"\\\"\\\", 1, SyslogMessage)\\r\\n  )\\r\\n| summarize TotalTransferredGb = sum(TransferredGb)\\r\\n| extend Name = \\\"Transferred Data (Gb)\\\"\\r\\n| project Name, TotalTransferredGb\",\"size\":3,\"timeContext\":{\"durationMs\":604800000},\"exportedParameters\":[{\"fieldName\":\"TotalTransferredGb\",\"parameterName\":\"TotalTransferredGb\",\"parameterType\":1},{\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"titleContent\":{\"columnMatch\":\"Name\",\"formatter\":1},\"leftContent\":{\"columnMatch\":\"TotalTransferredGb\",\"formatter\":12},\"showBorder\":false}},\"customWidth\":\"50\",\"name\":\"query - 5 - Copy - Copy - Copy\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where instanceId==151 or instanceId==150\\r\\n| where Allowance\\r\\n| extend TransferredGb = todouble(extract(\\\"TransferredGb=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage))\\r\\n\",\"size\":0,\"timeContext\":{\"durationMs\":604800000},\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogTransefered\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 4\"},{\"type\":1,\"content\":{\"json\":\"Syslog message: \\r\\n```\\r\\n{SyslogTransefered}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"TotalTransferredGb\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"ResultMessage\",\"comparison\":\"isEqualTo\"}],\"name\":\"group - 5\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where not (instanceId in (\\\"40290\\\", \\\"40800\\\", \\\"150\\\", \\\"450\\\", \\\"151\\\", \\\"451\\\"))\\r\\n| where JobResultMessage == \\\"{ResultMessage}\\\"\\r\\n| where Allowance\\r\\n\\r\\n\",\"size\":0,\"title\":\"Events with `{ResultMessage}` status:\",\"timeContext\":{\"durationMs\":86400000},\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 2\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"ResultMessage\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"TotalTransferredGb\",\"comparison\":\"isEqualTo\"}],\"name\":\"group - 5\"}]},\"name\":\"All Jobs\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Weekly Reports\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where instanceId in (\\\"190\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where Allowance\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), JobResultMessage\\r\\n| order by TimeGenerated asc\\r\\n| render timechart \\r\\n\",\"size\":0,\"aggregation\":5,\"title\":\" Backup and Backup Copy Jobs\",\"timeContext\":{\"durationMs\":604800000},\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"BackupAndBackupCopyJobsTime\"},{\"fieldName\":\"label\",\"parameterName\":\"BackupAndBackupCopyJobsStatus\",\"parameterType\":1},{\"fieldName\":\"\",\"parameterName\":\"BackupAndBackupCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}],\"xSettings\":{\"dateFormatSettings\":{\"formatName\":\"shortDatePattern\",\"showUtcTime\":true},\"scale\":\"time\",\"label\":\"Label\"},\"ySettings\":{\"label\":\"\"}}},\"customWidth\":\"50\",\"name\":\" Backup and Backup Copy Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where instanceId == \\\"390\\\"\\r\\n| where Allowance\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), JobResultMessage\\r\\n| order by TimeGenerated asc\\r\\n| render timechart \\r\\n\",\"size\":0,\"aggregation\":5,\"title\":\"SureBackup Jobs\",\"timeContext\":{\"durationMs\":604800000},\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"SureBackupJobsTime\",\"parameterType\":1},{\"fieldName\":\"label\",\"parameterName\":\"SureBackupJobsStatus\",\"parameterType\":1},{\"parameterName\":\"SureBackupJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"SureBackup Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BackupAndBackupCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| where instanceId in (\\\"190\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where Allowance\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.JobResultMessage == $right.Series\\r\\n| project-away DateOnly, DateOnly1, Series\\r\\n\",\"size\":0,\"title\":\"Backup and Backup Copy Jobs Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"TimeGenerated\",\"sortOrder\":1}]},\"name\":\"query - 5\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"SureBackupJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupAndBackupCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Backup and Backup Copy Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{SureBackupJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"390\\\"\\r\\n| where Allowance\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.JobResultMessage == $right.Series\\r\\n| project-away DateOnly, DateOnly1, Series\",\"size\":0,\"title\":\"SureBackup Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 5\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"SureBackupJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"BackupAndBackupCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Backup and Backup Copy Jobs Drilldown - Copy\"}]},\"name\":\"Weekly Reports\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Virtual Machines & Agents\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == \\\"190\\\"  and JobType == \\\"0\\\"\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\"VM Backup Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VMBackupJobsStatus\",\"parameterType\":1},{\"parameterName\":\"VMBackupJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"VM Backup Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == \\\"590\\\" \\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\",\"size\":3,\"title\":\"VM File Copy Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VMFileCopyJobsStatus\",\"parameterType\":1},{\"parameterName\":\"VMFileCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"showPin\":false,\"name\":\"VM File Copy Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 592\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\",\"size\":3,\"title\":\"VM Copy Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VMCopyJobsStatus\",\"parameterType\":1},{\"parameterName\":\"VMCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"JobResult\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"JobResult\",\"sortOrder\":2}],\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"VM Copy Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VMBackupJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" and JobType == \\\"0\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"VM Backup Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VMBackupJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VMBackupJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VMBackupJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VMCopyJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VMFileCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"VM Backup Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VMFileCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"590\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"VM File Copy Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VMFileCopyJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VMFileCopyJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VMFileCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VMCopyJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VMBackupJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"VM File Copy Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VMCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"592\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"VM Copy Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VMCopyJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VMCopyJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VMCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VMFileCopyJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VMBackupJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"VM Copy Jobs Drilldown\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 610\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\"VM Quick Migration Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VMQuickMigrationJobsStatus\",\"parameterType\":1},{\"parameterName\":\"VMQuickMigrationJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"VM Quick Migration Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 790\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\"Veeam Agent Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VeeamAgentJobsStatus\",\"parameterType\":1},{\"parameterName\":\"VeeamAgentJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Veeam Agent Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VMQuickMigrationJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == 610\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"VM Quick Migration Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VeeamAgentJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VeeamAgentJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VMQuickMigrationJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VeeamAgentJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\" VM Quick Migration Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VeeamAgentJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"790\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Veeam Agent Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VeeamAgentJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VeeamAgentJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VMQuickMigrationJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VeeamAgentJobsStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Veeam Agent Jobs Drilldown\"}]},\"name\":\"Virtual Machines & Agents\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Unstructured Data\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 190\\n| where JobType == 13000\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\n| where SourceType == 3\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\" File Backup Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"FileBackupJobsStatus\",\"parameterType\":1},{\"parameterName\":\"FileBackupJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\" File Backup Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 190\\n| where JobType == 13000\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\n| where SourceType == 7\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\"Object Storage Backup Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"ObjectStorageBackupJobsStatus\",\"parameterType\":1},{\"parameterName\":\"ObjectStorageBackupJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Object Storage Backup Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\n| where instanceId == 490\\n| where JobType == 13003\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\n| where SourceType == 5\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\n| project JobResultMessage, Count\\n| render piechart\",\"size\":3,\"title\":\"Backup Copy Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"BackupCopyJobsStatus\",\"parameterType\":1},{\"parameterName\":\"BackupCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Backup Copy Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{FileBackupJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == 190\\r\\n| where JobType == 13000\\r\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where SourceType == 3\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"File Backup Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"FileBackupJobsSyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Message Details\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"172ch\"}},{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"Job Type\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"Job Type\",\"sortOrder\":2}]},\"name\":\"query - 1\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{FileBackupJobsSyslogMessage}\\r\\n```\"},\"name\":\"text - 2\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"FileBackupJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"ObjectStorageBackupJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"File Backup Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{ObjectStorageBackupJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == 190\\r\\n| where JobType == 13000\\r\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where SourceType == 7\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Object Storage Backup Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"ObjectStorageBackupJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Message Details\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"172ch\"}},{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 1\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{ObjectStorageBackupJobsMessage}\\r\\n```\"},\"name\":\"text - 2\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"ObjectStorageBackupJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"BackupCopyJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"FileBackupJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Object Storage Backup Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BackupCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == 490\\r\\n| where JobType == 13003\\r\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where SourceType == 5\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Backup Copy Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"BackupCopyJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Message Details\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"172ch\"}},{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 1\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{BackupCopyJobsMessage}\\r\\n```\"},\"name\":\"text - 2\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"BackupCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"FileBackupJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"ObjectStorageBackupJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Backup Copy Jobs Drilldown\"}]},\"name\":\"Unstructured Data\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Applications and Services\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"36022\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Backup Jobs for Enterprise Plug-ins\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"BackupJobsForEnterprisePlugInsStatus\",\"parameterType\":1},{\"parameterName\":\"BackupJobsForEnterprisePlugInsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Backup Jobs for Enterprise Plug-ins\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"36026\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Log Backup Jobs for Enterprise Plug-ins\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"LogBackupJobsForEnterprisePlugInsStatus\",\"parameterType\":1},{\"parameterName\":\"LogBackupJobsForEnterprisePlugInsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Log Backup Jobs for Enterprise Plug-ins\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == \\\"78\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Backup Jobs for Entra ID\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"BackupJobsForEntraIDStatus\",\"parameterType\":1},{\"parameterName\":\"BackupJobsForEntraIDAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Backup Jobs for Entra ID\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BackupJobsForEnterprisePlugInsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"36022\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Backup Jobs for Enterprise Plug-ins Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"BackupJobsForEnterprisePlugInsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{BackupJobsForEnterprisePlugInsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"BackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"LogBackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupJobsForEntraIDStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Backup Jobs for Enterprise Plug-ins Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{LogBackupJobsForEnterprisePlugInsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"36026\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Log Backup Jobs for Enterprise Plug-ins Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"LogBackupJobsForEnterprisePlugInsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{LogBackupJobsForEnterprisePlugInsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"BackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupJobsForEntraIDStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"LogBackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Log Backup Jobs for Enterprise Plug-ins Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BackupJobsForEntraIDAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == \\\"78\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Backup Jobs for Entra ID Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"BackupJobsForEntraIDMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{BackupJobsForEntraIDMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"BackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupJobsForEntraIDStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"LogBackupJobsForEnterprisePlugInsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Backup Jobs for Entra ID Drilldown\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == 13000\\r\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where SourceType == 8\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Log Backup Jobs for Entra ID\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"LogBackupJobsForEntraIDStatus\",\"parameterType\":1},{\"parameterName\":\"LogBackupJobsForEntraIDAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Log Backup Jobs for Entra ID\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{LogBackupJobsForEntraIDAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == 13000\\r\\n| extend SourceType = extract(\\\"SourceType=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where SourceType == 8\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Backup Jobs for Entra ID Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"LogBackupJobsForEntraIDMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{LogBackupJobsForEntraIDMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"LogBackupJobsForEntraIDStatus\",\"comparison\":\"isNotEqualTo\"},\"name\":\"Log Backup Jobs for Entra ID\"}]},\"name\":\"Applications and Services\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Backup Copy & Replicas\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == 1\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Replication Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"ReplicationJobsStatus\",\"parameterType\":1},{\"parameterName\":\"ReplicationJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Replication Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"490\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Backup Copy Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"BackupCopyJobsStatus\",\"parameterType\":1},{\"parameterName\":\"BackupCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Backup Copy Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{ReplicationJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"190\\\" \\r\\n| where JobType == 1\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Replication Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"ReplicationJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"State\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"State\",\"sortOrder\":2}]},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{ReplicationJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"ReplicationJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"BackupCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Replication Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BackupCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"490\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Replication Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"BackupCopyJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"State\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"State\",\"sortOrder\":2}]},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{BackupCopyJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"ReplicationJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BackupCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Replication Jobs Drilldown - Copy\"}]},\"name\":\"Backup Copy & Replicas\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Tapes\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"194\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Tape Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"TapeJobsStatus\",\"parameterType\":1},{\"parameterName\":\"TapeJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Tape Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"200\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Tape Copy Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"TapeCopyJobsStatus\",\"parameterType\":1},{\"parameterName\":\"TapeCopyJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Tape Copy Jobs\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId == \\\"198\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by JobResultMessage = JobResultMessage  \\r\\n| project JobResultMessage, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Tape Verification Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"TapeVerificationJobsStatus\",\"parameterType\":1},{\"parameterName\":\"TapeVerificationJobsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"Tape Verification Jobs\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{TapeJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"194\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Tape Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"TapeJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{TapeJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"TapeJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"TapeVerificationJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"TapeCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Tape Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{TapeCopyJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"200\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Tape Copy Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"TapeCopyJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{TapeCopyJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"TapeJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"TapeVerificationJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"TapeCopyJobsStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Tape Copy Jobs Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{TapeVerificationJobsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId == \\\"198\\\" \\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series\\r\\n| project Date = TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Tape Verification Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"TapeVerificationJobsMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{TapeVerificationJobsMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"TapeJobsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"TapeVerificationJobsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"TapeCopyJobsStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Tape Verification Jobs Drilldown\"}]},\"name\":\"Tapes - Copy\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Finished Jobs\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetFinishedConfigurationBackupSessions\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or Computer in ({host_token})\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = Computer, User = user, State = Result, SyslogMessage, StringTime = tostring(TimeGenerated), Description\\r\\n\",\"size\":0,\"title\":\"Latest Configuration Backups\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"StringTime\",\"parameterName\":\"Veeam_GetFinishedConfigurationBackupSessionsTime\"},{\"fieldName\":\"SyslogMessage\",\"parameterName\":\"SyslogMessage\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"State\",\"formatter\":1,\"formatOptions\":{\"customColumnWidthSetting\":\"12ch\"}},{\"columnMatch\":\"SyslogMessage\",\"formatter\":5},{\"columnMatch\":\"StringTime\",\"formatter\":5},{\"columnMatch\":\"Description\",\"formatter\":5}]},\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Latest Configuration Backups\",\"styleSettings\":{\"margin\":\"3px\",\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId in (\\\"190\\\",\\\"40290\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"390\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, StringTime = tostring(TimeGenerated), SyslogMessage\",\"size\":0,\"title\":\"Latest Finished Jobs\",\"timeContextFromParameter\":\"TimeRange\",\"exportedParameters\":[{\"fieldName\":\"StringTime\",\"parameterName\":\"LatestFinishedJobsTime\",\"parameterType\":1},{\"fieldName\":\"SyslogMessage\",\"parameterName\":\"LatestFinishedJobsSyslogMessage\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"StringTime\",\"formatter\":5},{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"Message Details\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Message Details\",\"sortOrder\":1}],\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Latest Finished Jobs\",\"styleSettings\":{\"margin\":\"3px\",\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId in (\\\"190\\\",\\\"40290\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"390\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, StringTime = tostring(TimeGenerated)\\r\\n| where StringTime == \\\"{LatestFinishedJobsTime}\\\"\",\"size\":3,\"title\":\"Latest Finished Jobs Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"showPin\":false,\"name\":\"Latest Finished Jobs Drilldown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{LatestFinishedJobsSyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"Veeam_GetFinishedConfigurationBackupSessionsTime\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"LatestFinishedJobsTime\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Latest Finished Jobs Drilldown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetFinishedConfigurationBackupSessions\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or Computer in ({host_token})\\r\\n| where tostring(TimeGenerated) == \\\"{Veeam_GetFinishedConfigurationBackupSessionsTime}\\\"\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = Computer, User = user, [\\\"Message Details\\\"] = Description,  State = Result, SyslogMessage\",\"size\":3,\"title\":\"Latest Configuration Backups Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"showPin\":false,\"name\":\"Latest Configuration Backups Drilldown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"Veeam_GetFinishedConfigurationBackupSessionsTime\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"LatestFinishedJobsTime\",\"comparison\":\"isEqualTo\"}],\"name\":\"Latest Configuration Backups Drilldown\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId in (\\\"190\\\",\\\"40290\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"390\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), JobTypeDescription\\r\\n| order by TimeGenerated asc\\r\\n| render timechart \",\"size\":2,\"aggregation\":5,\"title\":\"Finished Jobs by Type\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"FinishedJobsByTypeTime\",\"parameterType\":1},{\"fieldName\":\"label\",\"parameterName\":\"FinishedJobsByTypeStatus\",\"parameterType\":1},{\"parameterName\":\"FinishedJobsByTypeAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"group\":\"*\",\"createOtherGroup\":0,\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Finished Jobs by Type\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetJobFinished\\r\\n| where instanceId in (\\\"40290\\\", \\\"40800\\\")\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), JobTypeDescription\\r\\n| order by TimeGenerated asc\\r\\n| render timechart \",\"size\":2,\"aggregation\":5,\"title\":\"Finished Restore Sessions by Type\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"FinishedRestoreSessionsByTypeTime\",\"parameterType\":1},{\"fieldName\":\"label\",\"parameterName\":\"FinishedRestoreSessionsByTypeStatus\",\"parameterType\":1},{\"parameterName\":\"FinishedRestoreSessionsByTypeAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Finished Restore Sessions by Type\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{FinishedJobsByTypeAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId in (\\\"190\\\",\\\"40290\\\",\\\"790\\\",\\\"194\\\",\\\"490\\\",\\\"390\\\",\\\"36022\\\",\\\"36026\\\")\\r\\n| where Allowance\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.JobTypeDescription == $right.Series\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SyslogMessage\",\"size\":0,\"title\":\"Finished Jobs by Type Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"FinishedJobsByTypeStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"FinishedRestoreSessionsByTypeStatus\",\"comparison\":\"isEqualTo\"}],\"name\":\"Finished Jobs by Type Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{FinishedRestoreSessionsByTypeAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where instanceId in (\\\"40290\\\", \\\"40800\\\")\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.JobTypeDescription == $right.Series\\r\\n| project-away DateOnly, DateOnly1, Series\",\"size\":0,\"title\":\"Finished Restore Sessions by Type Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"FinishedJobsByTypeStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"FinishedRestoreSessionsByTypeStatus\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Finished Restore Sessions by Type Drilldown\"}]},\"name\":\"Finished Jobs\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Failed Backups\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let session_states_lookup = _GetWatchlist(\\\"session_states_lookup\\\"); \\r\\nVeeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult, JobType, JobTypeDescription, Allowance, SyslogMessage\\r\\n| where instanceId in (\\\"150\\\", \\\"450\\\")\\r\\n| where JobResult in (\\\"2\\\", \\\"3\\\")\\r\\n| lookup kind=inner (session_states_lookup)\\r\\n    on $left.JobResult == $right.JobResult\\r\\n| extend VmName = extract(\\\"VmName=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| summarize Total = count() by VmName, JobResultMessage\\r\\n| evaluate pivot(JobResultMessage, sum(Total))\\r\\n| extend Failed  = iff(column_ifexists(\\\"Failed\\\", 0) == 0, 0, column_ifexists(\\\"Failed\\\", 0)),\\r\\n         Warning = iff(column_ifexists(\\\"Warning\\\", 0) == 0, 0, column_ifexists(\\\"Warning\\\", 0))\\r\\n| project VmName, Failed, Warning\\r\\n| order by Failed desc\\r\\n| take 15\\r\\n| render barchart\",\"size\":2,\"title\":\" Unsuccessful VM Backups\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"x\",\"parameterName\":\"UnsuccessfulVMBackupsName\",\"parameterType\":1},{\"fieldName\":\"label\",\"parameterName\":\"UnsuccessfulVMBackupsStatus\",\"parameterType\":1},{\"parameterName\":\"UnsuccessfulVMBackupsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"graphSettings\":{\"type\":0,\"topContent\":{\"columnMatch\":\"VmName\",\"formatter\":1},\"centerContent\":{\"columnMatch\":\"Count\",\"formatter\":1,\"numberFormat\":{\"unit\":17,\"options\":{\"maximumSignificantDigits\":3,\"maximumFractionDigits\":2}}}},\"chartSettings\":{\"xAxis\":\"VmName\",\"yAxis\":[\"Warning\",\"Failed\"],\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Successful\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\" Unsuccessful VM Backups\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let session_states_lookup = _GetWatchlist(\\\"session_states_lookup\\\"); \\r\\nVeeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult, JobType, JobTypeDescription, Allowance, SyslogMessage\\r\\n| where instanceId in (\\\"151\\\", \\\"451\\\")\\r\\n| where JobResult in (\\\"2\\\", \\\"3\\\")\\r\\n| lookup kind=inner (session_states_lookup)\\r\\n    on $left.JobResult == $right.JobResult\\r\\n| extend SourceName = extract(\\\"SourceName=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| summarize Total = count() by SourceName, JobResultMessage\\r\\n| evaluate pivot(JobResultMessage, sum(Total))\\r\\n| extend Failed  = iff(column_ifexists(\\\"Failed\\\", 0) == 0, 0, column_ifexists(\\\"Failed\\\", 0)),\\r\\n         Warning = iff(column_ifexists(\\\"Warning\\\", 0) == 0, 0, column_ifexists(\\\"Warning\\\", 0))\\r\\n| project SourceName, Failed, Warning\\r\\n| order by Failed desc\\r\\n| take 15\\r\\n| render barchart\",\"size\":2,\"title\":\"Unsuccessful Unstructured Data Backups\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"UnsuccessfulUnstructuredDataBackupsName\"},{\"parameterName\":\"UnsuccessfulUnstructuredDataBackupAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"unstackedbar\",\"chartSettings\":{\"xAxis\":\"SourceName\",\"yAxis\":[\"Failed\",\"Warning\"],\"seriesLabelSettings\":[{\"seriesName\":\"Failed\",\"color\":\"redBright\"},{\"seriesName\":\"Successful\",\"color\":\"green\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Unsuccessful Unstructured Data Backups\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{UnsuccessfulUnstructuredDataBackupAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series), X = tostring(parsed.x);\\r\\nlet session_states_lookup = _GetWatchlist(\\\"session_states_lookup\\\"); \\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult, JobType, JobTypeDescription, Allowance, SyslogMessage\\r\\n| where instanceId in (\\\"151\\\", \\\"451\\\")\\r\\n| where JobResult in (\\\"2\\\", \\\"3\\\")\\r\\n| lookup kind=inner (session_states_lookup)\\r\\n    on $left.JobResult == $right.JobResult\\r\\n| extend SourceName = extract(\\\"SourceName=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series, $left.SourceName == $right.X\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, SourceName, SyslogMessage\\r\\n\\r\\n\",\"size\":0,\"title\":\"Unsuccessful Unstructured Data Backups Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"SourceName\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"SourceName\",\"sortOrder\":1}]},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"UnsuccessfulVMBackupsStatus\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"UnsuccessfulUnstructuredDataBackupsName\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Unsuccessful Unstructured Data Backups Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{UnsuccessfulVMBackupsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series), X = tostring(parsed.x);\\r\\nlet session_states_lookup = _GetWatchlist(\\\"session_states_lookup\\\"); \\r\\n\\r\\nVeeam_GetJobFinished\\r\\n| project TimeGenerated, Description, event_module, instanceId, original_host, Platform, Severity, Version, JobSessionID, JobID, JobResult, JobType, JobTypeDescription, Allowance, SyslogMessage\\r\\n| where instanceId in (\\\"150\\\", \\\"450\\\")\\r\\n| where JobResult in (\\\"2\\\", \\\"3\\\")\\r\\n| lookup kind=inner (session_states_lookup)\\r\\n    on $left.JobResult == $right.JobResult\\r\\n| extend VmName = extract(\\\"VmName=\\\\\\\"([^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.JobResultMessage == $right.Series, $left.VmName == $right.X\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, [\\\"Message Details\\\"] = Description, [\\\"Job Type\\\"] = JobTypeDescription, State = JobResultMessage, VmName, SyslogMessage\\r\\n\\r\\n\",\"size\":0,\"title\":\"Unsuccessful VM Backups Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"UnsuccessfulVMBackupsStatus\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"UnsuccessfulUnstructuredDataBackupsName\",\"comparison\":\"isEqualTo\"}],\"name\":\"Unsuccessful VM Backups Drilldown - Copy\"}]},\"name\":\"Failed Backups\",\"styleSettings\":{\"showBorder\":true}}],\"fromTemplateId\":\"sentinel-VeeamDataPlatformMonitoring\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=VeeamDataPlatformMonitoringWorkbook; logoFileName=VeeamLogo.svg; description=The Veeam Data Platform Monitoring dashboard shows an aggregated view of job activity on your Veeam Backup & Replication servers.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.1; title=Veeam Data Platform Monitoring; templateRelativePath=VeeamDataPlatformMonitoring.json; subtitle=; provider=Veeam}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "Syslog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Syslog",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "VeeamSecurityActivities Workbook with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion2')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId2')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "The Veeam Security Activities dashboard shows an aggregated view of security events from your Veeam Backup & Replication servers and Veeam ONE servers, as well as Coveware findings."
              },
              "properties": {
                "displayName": "[parameters('workbook2-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"bb18f0f1-0893-479d-83fe-9cca36e33b43\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"typeSettings\":{\"selectableValues\":[{\"durationMs\":300000},{\"durationMs\":900000},{\"durationMs\":1800000},{\"durationMs\":3600000},{\"durationMs\":14400000},{\"durationMs\":43200000},{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":259200000},{\"durationMs\":604800000},{\"durationMs\":1209600000},{\"durationMs\":2419200000},{\"durationMs\":2592000000},{\"durationMs\":5184000000},{\"durationMs\":7776000000}],\"allowCustom\":true},\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"value\":{\"durationMs\":2592000000}}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"parameters - 6 - Copy\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"d559890f-2663-49a6-af45-3dfc1fa7fda0\",\"cellValue\":\"isRest\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Syslog\",\"subTarget\":\"0\",\"preText\":\"d\",\"postText\":\"d\",\"style\":\"secondary\"},{\"id\":\"aee69a87-0e6f-4aab-ab21-14423e4d2d3d\",\"cellValue\":\"isRest\",\"linkTarget\":\"parameter\",\"linkLabel\":\"REST\",\"subTarget\":\"1\",\"style\":\"link\"}]},\"name\":\"links - 8\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"3ec1d354-0588-43dd-b3e5-7ebab2195c40\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"host_token\",\"label\":\"Veeam Backup & Replication Data Sources\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| summarize by original_host\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},{\"id\":\"26fbaaa0-3b0f-4506-885b-9fd8cd87ece9\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"vone_host_token\",\"label\":\"Veeam ONE Data Sources\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"Veeam_GetVeeamONEAlarms\\r\\n| summarize by VoneHostName\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"timeContext\":{\"durationMs\":1209600000},\"timeContextFromParameter\":\"TimeRange\",\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"0\"},\"name\":\"parameters - 6\"},{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"3b155c6e-4243-4c04-8675-3901414969df\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"vbr_host_name\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"union \\r\\n    (VeeamMalwareEvents_CL | where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}),\\r\\n    (VeeamAuthorizationEvents_CL | where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}),\\r\\n    (VeeamSecurityComplianceAnalyzer_CL\\r\\n | where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end})\\r\\n   \\r\\n    | summarize by VbrHostName\\r\\n\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"label\":\"Veeam Backup & Replication Data Sources\"},{\"id\":\"f3074530-90f9-44b3-96a4-6141a273e18b\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"vone_host_name\",\"type\":2,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"VeeamOneTriggeredAlarms_CL \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\n| summarize by VoneHostName\",\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"selectAllValue\":\"All\",\"showDefault\":false},\"defaultValue\":\"value::all\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"label\":\"Veeam ONE Data Sources\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"1\"},\"name\":\"parameters - rest\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Custom Tables Events Overview\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\n| summarize Count = count() by Status\\n| top 20 by Count\\n| project Status, Count\\n| render piechart\",\"size\":3,\"title\":\"Veeam ONE Triggered Alarms by Status\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"VoneTriggeredAlarmsStatusRestAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Warning\",\"color\":\"orange\"},{\"seriesName\":\"Success\",\"color\":\"green\"},{\"seriesName\":\"Resolved\",\"color\":\"blue\"},{\"seriesName\":\"Error\",\"color\":\"redBright\"}]}},\"customWidth\":\"25\",\"name\":\"query - vone-alarms-status\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamMalwareEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name})\\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\n| summarize Count = count() by Severity\\n| top 20 by Count\\n| project Severity, Count\\n| render piechart\",\"size\":3,\"title\":\"Malware Events by Severity\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"MalwareEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Infected\",\"color\":\"redBright\"},{\"seriesName\":\"Clean\",\"color\":\"green\"}]}},\"customWidth\":\"25\",\"name\":\"query - malware-severity\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamAuthorizationEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}\\n| summarize Count = count() by State\\n| top 20 by Count\\n| project State, Count\\n| render piechart\",\"size\":3,\"title\":\"Authorization Events by State\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"AuthorizationEventsStateAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"ProcessedTime\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"ProcessedTime\",\"sortOrder\":2}],\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Approved\",\"color\":\"green\"},{\"seriesName\":\"Info\",\"color\":\"blue\"},{\"seriesName\":\"Rejected\",\"color\":\"redBright\"}]}},\"customWidth\":\"25\",\"name\":\"query - authorization-state\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamSecurityComplianceAnalyzer_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name})\\n| summarize Count = count() by Status\\n| top 20 by Count\\n| project Status, Count\\n| render piechart\",\"size\":3,\"title\":\"Security & Compliance Analyzer Results by Status\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"BestPracticesAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Violation\",\"color\":\"redBright\"},{\"seriesName\":\"OK\",\"color\":\"green\"},{\"seriesName\":\"UnableToCheck\",\"color\":\"orange\"}]}},\"customWidth\":\"25\",\"name\":\"query - best-practices-status\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n// Wrap the parameter in [] to form a JSON array → remove extra quotes around each object via regex → parse to dynamic → expand into rows → parse each element into JSON → extract 'series' as text\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VoneTriggeredAlarmsStatusRestAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeamOneTriggeredAlarms_CL\\r\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\r\\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\r\\n| join kind=inner (filters) on $left.Status == $right.Series\\r\\n| project TriggeredTime, VoneHostName, TriggeredAlarmId, Name, AlarmTemplateId, PredefinedAlarmId, Status, Description, Comment, RepeatCount, ObjectId, ObjectName, ObjectType, ChildAlarmsCount, RemediationDescription, RemediationMode\",\"size\":0,\"title\":\"Veeam ONE Triggered Alarms by Status Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VoneTriggeredAlarmsStatusRestAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"MalwareEventsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BestPracticesAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"AuthorizationEventsStateAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"VeeamONETriggeredAlarmsDrilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n// Wrap the parameter in [] to form a JSON array → remove extra quotes around each object via regex → parse to dynamic → expand into rows → parse each element into JSON → extract 'series' as text\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{AuthorizationEventsStateAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeamAuthorizationEvents_CL\\r\\n| where \\\"'All'\\\"  == \\\"{vbr_host_name}\\\" or VbrHostName in ({vbr_host_name}) \\r\\n| where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}\\r\\n| where State in (toscalar(filters | summarize make_set(Series)))\\r\\n| project ProcessedTime, VbrHostName, CreatedBy, CreationTime, Description, ExpirationTime, Id, Name, ProcessedBy, State\",\"size\":0,\"title\":\"Authorization Events by State Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VoneTriggeredAlarmsStatusRestAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"MalwareEventsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"AuthorizationEventsStateAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"BestPracticesAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"Authorization Events Drilldown \"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n// Wrap the parameter in [] to form a JSON array → remove extra quotes around each object via regex → parse to dynamic → expand into rows → parse each element into JSON → extract 'series' as text\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{MalwareEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeamMalwareEvents_CL\\r\\n| where \\\"'All'\\\"  == \\\"{vbr_host_name}\\\" or VbrHostName in ({vbr_host_name}) \\r\\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\r\\n| where Severity in (toscalar(filters | summarize make_set(Series)))\\r\\n| project DetectionTime = DetectionTimeUtc, MalwareEventType, VbrHostName, MalwareState, Source, Severity, Id, MachineDisplayName, MachineUuid, MachineBackupObjectId, Details, CreatedBy, Engine\",\"size\":0,\"title\":\"Malware Events by Severity Drilldown\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"MalwareEventsAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VoneTriggeredAlarmsStatusRestAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BestPracticesAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"AuthorizationEventsStateAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"MalwareEventsDrilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n// Wrap the parameter in [] to form a JSON array → remove extra quotes around each object via regex → parse to dynamic → expand into rows → parse each element into JSON → extract 'series' as text\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{BestPracticesAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\n\\r\\nVeeamSecurityComplianceAnalyzer_CL\\r\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name})\\r\\n| join kind=inner (filters) on $left.Status == $right.Series\\r\\n| project TimeGenerated, VbrHostName, Status, Id, BestPractice, Note\",\"size\":0,\"title\":\"Security & Compliance Analyzer Results by Status Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"MalwareEventsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VoneTriggeredAlarmsStatusRestAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"AuthorizationEventsStateAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"BestPracticesAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"BestPracticesAnalysisDrilldown\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\n| summarize Count = count() by Name\\n| top 20 by Count\\n| project Name, Count\\n| render piechart\",\"size\":3,\"title\":\"Veeam ONE Triggered Alarms by Name\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"label\",\"parameterName\":\"VoneTriggeredAlarmsName\"},{\"parameterName\":\"VoneTriggeredAlarmsNamesRestAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"redBright\"},{\"seriesName\":\"Warning\",\"color\":\"orange\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Success\",\"color\":\"yellow\"}]}},\"customWidth\":\"33\",\"name\":\"query - vone-alarms-name\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n// Wrap the parameter in [] to form a JSON array → remove extra quotes around each object via regex → parse to dynamic → expand into rows → parse each element into JSON → extract 'series' as text\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VoneTriggeredAlarmsNamesRestAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\nVeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\r\\n| where Name in (toscalar(filters | summarize make_set(Series)))\\r\\n| project TriggeredTime, VoneHostName, TriggeredAlarmId, Name, AlarmTemplateId, PredefinedAlarmId, Status, Description, Comment, RepeatCount, ObjectId, ObjectName, ObjectType, ChildAlarmsCount, RemediationDescription, RemediationMode\",\"size\":0,\"title\":\"Veeam ONE Triggered Alarms by Name Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"}]},\"conditionalVisibility\":{\"parameterName\":\"VoneTriggeredAlarmsName\",\"comparison\":\"isNotEqualTo\"},\"name\":\"VeeamONETriggeredAlarmsDrilldown - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamMalwareEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\n| where Severity == \\\"Infected\\\"\\n| count\",\"size\":2,\"title\":\"Infected Files Detected\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"stat\",\"statSettings\":{\"showBorder\":false,\"colorSettings\":{\"colorizeBody\":true,\"thresholds\":[{\"criteria\":\"isGreaterThan\",\"value\":\"0\",\"color\":\"red\"}]}}},\"customWidth\":\"33\",\"name\":\"infected-files-stat\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"union \\n    (VeeamOneTriggeredAlarms_CL | where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}),\\n    (VeeamMalwareEvents_CL | where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) | where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}),\\n    (VeeamAuthorizationEvents_CL | where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) | where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}),\\n    (VeeamSecurityComplianceAnalyzer_CL | where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where TimeGenerated >= {TimeRange:start} and TimeGenerated <= {TimeRange:end}),\\n    (VeeamCovewareFindings_CL | where EventTime >= {TimeRange:start} and EventTime <= {TimeRange:end})\\n| summarize Count = count() by Type\\n| project [\\\"Event Type\\\"] = Type, Count\\n| render piechart\",\"size\":3,\"title\":\"All Custom Table Events by Type\",\"exportFieldName\":\"Event Type\",\"exportParameterName\":\"CustomTableEventType\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"33\",\"name\":\"query - custom-tables-distribution\"},{\"type\":1,\"content\":{\"json\":\"## Daily Trends\"},\"name\":\"text - daily-trends\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Coveware Findings\"},\"name\":\"text - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamCovewareFindings_CL\\r\\n| where EventTime >= {TimeRange:start}\\r\\n| where EventTime <= {TimeRange:end}\\r\\n| summarize Count = count() by EventType\\r\\n| top 20 by Count\\r\\n| project EventType, Count\\r\\n| render piechart\",\"size\":3,\"title\":\"Coveware Findings by Name\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"CovewareFindingsNameAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"piechart\",\"chartSettings\":{\"yAxis\":[\"Count\"],\"group\":\"EventType\",\"createOtherGroup\":0,\"showMetrics\":true,\"showLegend\":false}},\"customWidth\":\"30\",\"name\":\"query - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamCovewareFindings_CL\\r\\n| where EventTime >= {TimeRange:start}\\r\\n| where EventTime <= {TimeRange:end}\\r\\n| summarize Count = count() by DateOnly = startofday(EventTime), RiskLevel\\r\\n| order by DateOnly asc\\r\\n| render timechart\",\"size\":0,\"title\":\"Daily Coveware Findings by Risk Level\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"CovewareRiskLevelAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"medium\",\"color\":\"orange\"},{\"seriesName\":\"low\",\"color\":\"blue\"},{\"seriesName\":\"high\",\"color\":\"redBright\"},{\"seriesName\":\"critical\",\"color\":\"purple\"}]}},\"customWidth\":\"70\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// Step 1: Parse the Sentinel widget export into a filter table\\r\\nlet filters =\\r\\n    print arr = parse_json(\\r\\n                    replace(\\r\\n                        @\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", \\r\\n                        @\\\"\\\\1\\\", \\r\\n                        strcat('[', '{CovewareFindingsNameAllFields}', ']')\\r\\n                    )\\r\\n                )\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Filter main table by matching series\\r\\nVeeamCovewareFindings_CL\\r\\n| where EventTime >= {TimeRange:start}\\r\\n| where EventTime <= {TimeRange:end}\\r\\n| where EventType in (toscalar(filters | summarize make_set(Series)))\\r\\n| project EventTime, RiskLevel, Artifact, EventType, TechniqueId, Hostname, EventActivity, Id, MachineId, FirstRunOrAccessed, Md5Hash, Sha1Hash, Sha256Hash\",\"size\":0,\"title\":\"Coveware Findings by Name Drilldown\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibilities\":[{\"parameterName\":\"CovewareFindingsNameAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"CovewareRiskLevelAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"// Step 1: Parse the Sentinel widget export into a filter table\\r\\nlet filters =\\r\\n    print arr = parse_json(\\r\\n                    replace(\\r\\n                        @\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", \\r\\n                        @\\\"\\\\1\\\", \\r\\n                        strcat('[', '{CovewareRiskLevelAllFields}', ']')\\r\\n                    )\\r\\n                )\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeamCovewareFindings_CL\\r\\n| where EventTime >= {TimeRange:start}\\r\\n| where EventTime <= {TimeRange:end}\\r\\n |   extend DateOnly = startofday(EventTime)\\r\\n| join kind=inner (filters) on DateOnly, $left.RiskLevel == $right.Series\\r\\n| project EventTime, RiskLevel, Artifact, EventType, TechniqueId, Hostname, EventActivity, Id, MachineId, FirstRunOrAccessed, Md5Hash, Sha1Hash, Sha256Hash\",\"size\":0,\"title\":\"Coveware Findings by Risk Level Drilldown\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"EventTime\",\"formatter\":6},{\"columnMatch\":\"EventActivity\",\"formatter\":0,\"formatOptions\":{\"customColumnWidthSetting\":\"92.8571ch\"}}]}},\"conditionalVisibilities\":[{\"parameterName\":\"CovewareFindingsNameAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"CovewareRiskLevelAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamCovewareFindings_CL\\r\\n| where EventTime >= {TimeRange:start}\\r\\n| where EventTime <= {TimeRange:end}\\r\\n | order by EventTime desc | project EventTime, RiskLevel, Artifact, EventType, TechniqueId, Hostname, EventActivity, Id, MachineId, FirstRunOrAccessed, Md5Hash, Sha1Hash, Sha256Hash\",\"size\":0,\"title\":\"Coveware Findings Details\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 2\"}]},\"name\":\"group - 17\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\n| summarize Count = count() by bin(TriggeredTime, 1d), Status\\n| order by TriggeredTime asc\\n| render timechart\",\"size\":0,\"title\":\"Daily Veeam ONE Triggered Alarms\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"DailyVeeamONETriggeredAlarmsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Warning\",\"color\":\"orange\"},{\"seriesName\":\"Error\",\"color\":\"redBright\"}]}},\"customWidth\":\"50\",\"name\":\"daily-vone-alarms\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamMalwareEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\n| summarize Count = count() by bin(DetectionTimeUtc, 1d), Severity\\n| order by DetectionTimeUtc asc\\n| render timechart\",\"size\":0,\"title\":\"Daily Malware Events\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"DailyMalwareEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Infected\",\"color\":\"redBright\"},{\"seriesName\":\"Clean\",\"color\":\"green\"}]}},\"customWidth\":\"50\",\"name\":\"daily-malware-events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{DailyVeeamONETriggeredAlarmsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\r\\n|   extend DateOnly = startofday(TriggeredTime)\\r\\n| join kind=inner (filters) on DateOnly, $left.Status == $right.Series\\r\\n| project TriggeredTime, VoneHostName, TriggeredAlarmId, Name, AlarmTemplateId, PredefinedAlarmId, Status, Description, Comment, RepeatCount, ObjectId, ObjectName, ObjectType, ChildAlarmsCount, RemediationDescription, RemediationMode\",\"size\":0,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"sortBy\":[{\"itemKey\":\"Comment\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Comment\",\"sortOrder\":1}]},\"conditionalVisibilities\":[{\"parameterName\":\"DailyVeeamONETriggeredAlarmsAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"DailyMalwareEventsAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"query - 23\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{DailyMalwareEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeamMalwareEvents_CL\\r\\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\r\\n|   extend DateOnly = startofday(DetectionTimeUtc)\\r\\n| join kind=inner (filters) on DateOnly, $left.Severity == $right.Series\\r\\n| project DetectionTime = DetectionTimeUtc, MalwareEventType, VbrHostName, MalwareState, Source, Severity, Id, MachineDisplayName, MachineUuid, MachineBackupObjectId, Details, CreatedBy, Engine\",\"size\":0,\"title\":\"Daily Malware Events Drilldown\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibilities\":[{\"parameterName\":\"DailyVeeamONETriggeredAlarmsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"DailyMalwareEventsAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"query - 23 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamAuthorizationEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}\\n| summarize Count = count() by bin(ProcessedTime, 1d), State\\n| order by ProcessedTime asc\\n| render timechart\",\"size\":0,\"title\":\"Daily Four-Eyes Authorization Events\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"DailyFourEyesAuthorizationEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Approved\",\"color\":\"green\"},{\"seriesName\":\"Info\",\"color\":\"blue\"},{\"seriesName\":\"Rejected\",\"color\":\"redBright\"}]}},\"customWidth\":\"100\",\"name\":\"daily-authorization-events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{DailyFourEyesAuthorizationEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\nVeeamAuthorizationEvents_CL\\r\\n| where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}\\r\\n|   extend DateOnly = startofday(ProcessedTime)\\r\\n| join kind=inner (filters) on DateOnly, $left.State == $right.Series\\r\\n| project ProcessedTime, VbrHostName, CreatedBy, CreationTime, Description, ExpirationTime, Id, Name, ProcessedBy, State\\r\\n\",\"size\":0,\"title\":\"Daily Four-Eyes Authorization Events Drilldown\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"conditionalVisibility\":{\"parameterName\":\"DailyFourEyesAuthorizationEventsAllFields\",\"comparison\":\"isNotEqualTo\"},\"name\":\"query - 23 - Copy - Copy\"},{\"type\":1,\"content\":{\"json\":\"## Latest Events\"},\"name\":\"text - latest-events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamOneTriggeredAlarms_CL\\n| where \\\"'All'\\\"  == \\\"{vone_host_name}\\\" or VoneHostName in ({vone_host_name}) \\n| where TriggeredTime >= {TimeRange:start} and TriggeredTime <= {TimeRange:end}\\n | order by TriggeredTime desc | project TriggeredTime, VoneHostName, TriggeredAlarmId, Name, AlarmTemplateId, PredefinedAlarmId, Status, Description, Comment, RepeatCount, ObjectId, ObjectName, ObjectType, ChildAlarmsCount, RemediationDescription, RemediationMode\\n| top 15 by TriggeredTime desc\",\"size\":0,\"title\":\"Latest Veeam ONE Triggered Alarms\",\"exportFieldName\":\"Alarm Name\",\"exportParameterName\":\"SelectedVoneAlarm\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"latest-vone-alarms\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamMalwareEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where DetectionTimeUtc >= {TimeRange:start} and DetectionTimeUtc <= {TimeRange:end}\\n | order by DetectionTimeUtc desc | project DetectionTime = DetectionTimeUtc, MalwareEventType, VbrHostName, MalwareState, Source, Severity, Id, MachineDisplayName, MachineUuid, MachineBackupObjectId, Details, CreatedBy, Engine\\n| top 15 by DetectionTime desc\",\"size\":0,\"title\":\"Latest Malware Events\",\"exportFieldName\":\"Machine\",\"exportParameterName\":\"SelectedMalwareMachine\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"latest-malware-events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamAuthorizationEvents_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n| where ProcessedTime >= {TimeRange:start} and ProcessedTime <= {TimeRange:end}\\n | order by ProcessedTime desc | project ProcessedTime, VbrHostName, CreatedBy, CreationTime, Description, ExpirationTime, Id, Name, ProcessedBy, State\\n\",\"size\":0,\"title\":\"Latest Authorization Events\",\"exportFieldName\":\"Event Name\",\"exportParameterName\":\"SelectedAuthEvent\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"latest-authorization-events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"VeeamSecurityComplianceAnalyzer_CL\\n| where \\\"{vbr_host_name}\\\" == \\\"'All'\\\" or VbrHostName in ({vbr_host_name}) \\n | order by TimeGenerated desc | project TimeGenerated, VbrHostName, Status, Id, BestPractice, Note\\n| top 15 by TimeGenerated desc\",\"size\":0,\"title\":\"Latest Security & Compliance Analysis\",\"exportFieldName\":\"Best Practice\",\"timeContextFromParameter\":\"TimeRange\",\"exportParameterName\":\"SelectedBestPractice\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"latest-best-practices\"}]},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"1\"},\"name\":\"REST Events\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Overview\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetVeeamONEAlarms\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\n| summarize Count = count() by [\\\"SeverityDescription\\\"]\\n| top 20 by Count\\n| project [\\\"SeverityDescription\\\"], Count\\n| render piechart \\n\",\"size\":3,\"title\":\"Veeam ONE Alarms\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"VeeamONEAlarmsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"redBright\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Medium\",\"color\":\"yellow\"},{\"seriesName\":\"High\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n| where SyslogMessage has \\\"instanceId\\\" or SyslogMessage has \\\"predefined_alarm_id\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| extend predefined_alarm_id = extract(\\\"predefined_alarm_id=\\\\\\\"(\\\\\\\\d+)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| extend eventId = strcat(\\r\\n    tostring(extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)), \\r\\n    tostring(extract(\\\"predefined_alarm_id=\\\\\\\"(\\\\\\\\d+)\\\\\\\"\\\", 1, SyslogMessage))\\r\\n)\\r\\n| where eventId in (\\\"41600\\\",\\\"42220\\\",\\\"25500\\\",\\\"26100\\\",\\\"28100\\\",\\\"28970\\\",\\\"29800\\\",\\\"30100\\\",\\\"30400\\\",\\\"31500\\\",\\\"31600\\\",\\\"31700\\\",\\\"31800\\\",\\\"31900\\\",\\\"40204\\\",\\\"40400\\\",\\\"40500\\\",\\\"40600\\\",\\\"42260\\\",\\\"42270\\\",\\\"42302\\\",\\\"23090\\\",\\\"23420\\\",\\\"24080\\\",\\\"28200\\\",\\\"28500\\\",\\\"28920\\\",\\\"28950\\\",\\\"28980\\\",\\\"29120\\\",\\\"29150\\\",\\\"29900\\\",\\\"30200\\\",\\\"30500\\\",\\\"32120\\\",\\\"32200\\\",\\\"41402\\\",\\\"115\\\",\\\"31210\\\",\\\"31400\\\",\\\"40201\\\",\\\"40205\\\",\\\"40206\\\",\\\"41610\\\",\\\"42230\\\",\\\"42301\\\",\\\"42401\\\",\\\"42402\\\",\\\"42404\\\",\\\"42405\\\",\\\"21224\\\",\\\"26110\\\",\\\"31200\\\",\\\"36013\\\",\\\"42210\\\",\\\"42500\\\",\\\"27000\\\",\\\"24060\\\",\\\"24030\\\",\\\"24050\\\",\\\"24070\\\",\\\"24040\\\",\\\"42290\\\",\\\"23630\\\",\\\"23631\\\",\\\"23632\\\",\\\"23633\\\",\\\"24020\\\",\\\"24114\\\",\\\"24131\\\",\\\"24140\\\",\\\"24142\\\",\\\"24143\\\",\\\"24160\\\",\\\"24170\\\",\\\"25000\\\",\\\"25210\\\",\\\"25220\\\",\\\"25400\\\",\\\"25700\\\",\\\"25800\\\",\\\"26000\\\",\\\"26600\\\",\\\"26700\\\",\\\"26800\\\",\\\"26900\\\",\\\"27200\\\",\\\"27300\\\",\\\"27500\\\",\\\"27600\\\",\\\"27900\\\",\\\"28400\\\",\\\"28800\\\",\\\"28850\\\",\\\"28940\\\",\\\"29110\\\",\\\"29140\\\",\\\"30700\\\",\\\"30800\\\",\\\"31000\\\",\\\"32100\\\",\\\"32400\\\",\\\"32800\\\",\\\"40202\\\",\\\"41200\\\",\\\"41401\\\",\\\"42280\\\",\\\"395\\\", \\\"364\\\", \\\"369\\\", \\\"391\\\", \\\"365\\\", \\\"370\\\", \\\"314\\\", \\\"331\\\", \\\"376\\\", \\\"377\\\", \\\"403\\\", \\\"316\\\", \\\"342\\\", \\\"381\\\", \\\"315\\\", \\\"332\\\", \\\"344\\\",\\\"378\\\")\\r\\n| extend host = Computer\\r\\n| count\",\"size\":0,\"title\":\"All Security Activities\",\"timeContextFromParameter\":\"TimeRange\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"stat\",\"statSettings\":{\"valueAggregation\":\"None\",\"colorSettings\":{\"type\":\"static\",\"mode\":\"background\",\"heatmapPalette\":\"greenRed\"},\"tagText\":\"\",\"valueFontStyle\":\"mega\"}},\"customWidth\":\"33\",\"name\":\"All Security Activities\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\n| summarize Count = count() by SeverityDescription\\n| top 20 by Count\\n| render piechart\\n\",\"size\":3,\"title\":\"Veeam Backup & Replication Security Events\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"redBright\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Medium\",\"color\":\"yellow\"},{\"seriesName\":\"High\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"query - 3\",\"styleSettings\":{\"maxWidth\":\"50%\"}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VeeamONEAlarmsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| join kind=inner (filters) on $left.SeverityDescription == $right.Series\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = VoneHostName, [\\\"Alarm Name\\\"] = alarm_name, Severity = SeverityDescription, [\\\"Alarm Type\\\"] = alarm_name, [\\\"Message Details\\\"] = alarm_details, [\\\"Previous Status\\\"] = status_old, [\\\"Current Status\\\"] = status_new, [\\\"Object Name\\\"] = object_name, [\\\"Object Path\\\"] = object_path, SyslogMessage\",\"size\":0,\"title\":\"Veeam ONE Alarms Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VeeamONEAlarmsAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Veeam ONE Alarms by Severity Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VeeamBackupAndReplicationSecurityEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.SeverityDescription == $right.Series\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\",\"size\":0,\"title\":\"Veeam Backup & Replication Security Events Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VeeamONEAlarmsAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"Veeam Backup & Replication Security Events Drilldown\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| summarize Count = count() by [\\\"Event Name\\\"]\\r\\n| project [\\\"Event Name\\\"], Count\\r\\n| render piechart \",\"size\":3,\"title\":\"Veeam ONE Alarms by Name\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"VeeamONEAlarmsNameAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"createOtherGroup\":0,\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"redBright\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Medium\",\"color\":\"yellow\"},{\"seriesName\":\"High\",\"color\":\"orange\"}]}},\"customWidth\":\"33\",\"name\":\"query - 2\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by [\\\"Event Name\\\"]\\r\\n| top 20 by Count\\r\\n| render piechart\\r\\n\",\"size\":3,\"title\":\"Veeam Backup & Replication Security Events by Name\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsNameAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"createOtherGroup\":0,\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"redBright\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Medium\",\"color\":\"yellow\"},{\"seriesName\":\"High\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VeeamONEAlarmsNameAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| join kind=inner (filters) on $left.[\\\"Event Name\\\"] == $right.Series\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = VoneHostName, [\\\"Alarm Name\\\"] = alarm_name, Severity = SeverityDescription, [\\\"Alarm Type\\\"] = alarm_name, [\\\"Message Details\\\"] = alarm_details, [\\\"Previous Status\\\"] = status_old, [\\\"Current Status\\\"] = status_new, [\\\"Object Name\\\"] = object_name, [\\\"Object Path\\\"] = object_path, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Veeam ONE Alarms Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsNameAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"VeeamONEAlarmsNameAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Veeam ONE Alarms by Name Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{VeeamBackupAndReplicationSecurityEventsNameAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| join kind=inner (filters) on $left.[\\\"Event Name\\\"] == $right.Series\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\",\"size\":0,\"title\":\"Veeam Backup & Replication Security Events Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}],\"sortBy\":[{\"itemKey\":\"Message Details\",\"sortOrder\":1}]},\"sortBy\":[{\"itemKey\":\"Message Details\",\"sortOrder\":1}]},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"VeeamBackupAndReplicationSecurityEventsNameAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VeeamONEAlarmsNameAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"Veeam Backup & Replication Security Events Drilldown - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where instanceId == \\\"42220\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| count\",\"size\":3,\"title\":\"Marked as Infected\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Count\",\"exportParameterName\":\"MarkedAsInfectedCount\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false},\"statSettings\":{\"valueAggregation\":\"None\",\"colorSettings\":{\"type\":\"static\",\"mode\":\"background\",\"heatmapPalette\":\"greenRed\"},\"tagText\":\"\",\"valueFontStyle\":\"mega\"}},\"customWidth\":\"33\",\"name\":\"Marked as Infected\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"42402\\\"\\r\\n| extend original_host = Computer\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| count\",\"size\":3,\"title\":\"Four-Eyes Authorization Events\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Count\",\"exportParameterName\":\"FourEyesAuthorizationEventsCount\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false},\"statSettings\":{\"valueAggregation\":\"None\",\"colorSettings\":{\"type\":\"static\",\"mode\":\"background\",\"heatmapPalette\":\"greenRed\"},\"tagText\":\"\",\"valueFontStyle\":\"mega\"}},\"customWidth\":\"33\",\"name\":\"Four-Eyes Authorization Events\",\"styleSettings\":{\"showBorder\":true}},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Syslog\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"41600\\\"\\r\\n| extend original_host = Computer\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| count\",\"size\":3,\"title\":\"Marked as Suspicious\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Count\",\"exportParameterName\":\"MarkedAsSuspiciousCount\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"tiles\",\"tileSettings\":{\"leftContent\":{\"columnMatch\":\"Count\",\"formatter\":12,\"formatOptions\":{\"palette\":\"blue\"}},\"showBorder\":false},\"statSettings\":{\"valueAggregation\":\"None\",\"colorSettings\":{\"type\":\"static\",\"mode\":\"background\",\"heatmapPalette\":\"greenRed\"},\"tagText\":\"\",\"valueFontStyle\":\"mega\"}},\"customWidth\":\"33\",\"name\":\"Marked as Suspicious\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"42402\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Four-Eyes Authorization Events Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"MarkedAsInfectedCount\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"FourEyesAuthorizationEventsCount\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"MarkedAsSuspiciousCount\",\"comparison\":\"isEqualTo\"}],\"name\":\"Four-Eyes Authorization Events Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"42220\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Marked as Infected Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"MarkedAsInfectedCount\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"MarkedAsSuspiciousCount\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"FourEyesAuthorizationEventsCount\",\"comparison\":\"isEqualTo\"}],\"name\":\"Marked as Infected Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"41600\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Four-Eyes Authorization Events Drilldown\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"MarkedAsInfectedCount\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"MarkedAsSuspiciousCount\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"FourEyesAuthorizationEventsCount\",\"comparison\":\"isEqualTo\"}],\"name\":\"Four-Eyes Authorization Events Drilldown\"}]},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"0\"},\"name\":\"Overview\",\"styleSettings\":{\"showBorder\":true}},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Daily Security Activities\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), SeverityDescription\",\"size\":0,\"aggregation\":5,\"title\":\"Daily Veeam Backup & Replication Security Events\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"DailyVeeamBackupReplicationSecurityEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"Critical\",\"color\":\"purple\"},{\"seriesName\":\"High\",\"color\":\"redBright\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"}]}},\"customWidth\":\"50\",\"name\":\"Daily Veeam Backup & Replication Security Events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), SeverityDescription\\r\\n| order by TimeGenerated asc\\r\\n| render timechart \",\"size\":0,\"aggregation\":5,\"title\":\" Daily Veeam ONE Alarms\",\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"fieldName\":\"\",\"parameterName\":\"DailyVeeamONEAlarmsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"chartSettings\":{\"seriesLabelSettings\":[{\"seriesName\":\"Critical\",\"color\":\"purple\"},{\"seriesName\":\"Medium\",\"color\":\"orange\"},{\"seriesName\":\"Information\",\"color\":\"blue\"},{\"seriesName\":\"High\",\"color\":\"redBright\"}]}},\"customWidth\":\"50\",\"name\":\" Daily Veeam ONE Alarms\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{DailyVeeamBackupReplicationSecurityEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.SeverityDescription == $right.Series\\r\\n| project  TimeGenerated, [\\\"Data Source\\\"] = original_host,  User = user, [\\\"Message Details\\\"] = Description, Severity = SeverityDescription, SyslogMessage\\r\\n\",\"size\":0,\"title\":\"Daily Veeam Backup & Replication Security Events Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"DailyVeeamBackupReplicationSecurityEventsAllFields\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"DailyVeeamONEAlarmsAllFields\",\"comparison\":\"isEqualTo\"}],\"name\":\"Daily Veeam Backup & Replication Security Events Drilldown\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{DailyVeeamONEAlarmsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nVeeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.SeverityDescription == $right.Series\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = VoneHostName, [\\\"Alarm Name\\\"] = alarm_name, Severity = SeverityDescription, [\\\"Alarm Type\\\"] = alarm_name, [\\\"Message Details\\\"] = alarm_details, [\\\"Previous Status\\\"] = status_old, [\\\"Current Status\\\"] = status_new, [\\\"Object Name\\\"] = object_name, [\\\"Object Path\\\"] = object_path, SyslogMessage\",\"size\":0,\"title\":\"Daily Veeam ONE Alarms Drilldown\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibilities\":[{\"parameterName\":\"DailyVeeamBackupReplicationSecurityEventsAllFields\",\"comparison\":\"isEqualTo\"},{\"parameterName\":\"DailyVeeamONEAlarmsAllFields\",\"comparison\":\"isNotEqualTo\"}],\"name\":\"Daily Veeam ONE Alarms Drilldown - Copy\"}]},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"0\"},\"name\":\"Daily Security Activities\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Latest Security Activities\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetSecurityEvents\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or original_host in ({host_token})\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = original_host, User = user, [\\\"Message Details\\\"] = Description, SeverityDescription, SyslogMessage\",\"size\":0,\"title\":\"Latest Veeam Backup & Replication Security Events\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VBRSyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"Latest Veeam Backup & Replication Security Events\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"Veeam_GetVeeamONEAlarms\\r\\n| where \\\"{vone_host_token}\\\" == \\\"'All'\\\" or VoneHostName in ({vone_host_token})\\r\\n| project TimeGenerated, [\\\"Data Source\\\"] = VoneHostName, [\\\"Alarm Name\\\"] = alarm_name, Severity = SeverityDescription, [\\\"Alarm Type\\\"] = alarm_name, [\\\"Message Details\\\"] = alarm_details, [\\\"Previous Status\\\"] = status_old, [\\\"Current Status\\\"] = status_new, [\\\"Object Name\\\"] = object_name, [\\\"Object Path\\\"] = object_path, SyslogMessage\",\"size\":0,\"title\":\"Latest Veeam ONE Alarms\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"VoneSyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"customWidth\":\"50\",\"name\":\"Latest Veeam ONE Alarms\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VBRSyslogMessage}\\r\\n```\"},\"conditionalVisibilities\":[{\"parameterName\":\"VBRSyslogMessage\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VoneSyslogMessage\",\"comparison\":\"isEqualTo\"}],\"name\":\"text - 3\"},{\"type\":1,\"content\":{\"json\":\"Syslog message:\\r\\n```\\r\\n{VoneSyslogMessage}\\r\\n```\"},\"conditionalVisibilities\":[{\"parameterName\":\"VoneSyslogMessage\",\"comparison\":\"isNotEqualTo\"},{\"parameterName\":\"VBRSyslogMessage\",\"comparison\":\"isEqualTo\"}],\"name\":\"text - 4\"}]},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"0\"},\"name\":\"Latest Security Activities\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":1,\"content\":{\"json\":\"# Four-Eyes Authorization Events\"},\"name\":\"text - 0\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let watchlist = _GetWatchlist(\\\"operation_names_lookup\\\"); \\r\\nSyslog\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"42402\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or Computer in ({host_token})\\r\\n| extend OperationId = extract(\\\"OperationId=\\\\\\\"(?<alarm_name>[^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| lookup kind=inner (watchlist) \\r\\n    on $left.OperationId == $right.[\\\"Operation Id\\\"]\\r\\n| summarize Count = count() by bin(TimeGenerated, 1d), OperationName\\r\\n\",\"size\":0,\"timeContextFromParameter\":\"TimeRange\",\"exportMultipleValues\":true,\"exportedParameters\":[{\"parameterName\":\"FourEyesAuthorizationEventsAllFields\",\"parameterType\":1}],\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"timechart\"},\"name\":\"query - 1\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let watchlist = _GetWatchlist(\\\"operation_names_lookup\\\"); \\r\\n\\r\\nlet filters =\\r\\n    print arr = parse_json(replace(@\\\"\\\\\\\"\\\"(\\\\{.*?\\\\})\\\\\\\"\\\"\\\", @\\\"\\\\1\\\", strcat('[', '{FourEyesAuthorizationEventsAllFields}', ']')))\\r\\n    | mv-expand elem = arr\\r\\n    | extend parsed = parse_json(tostring(elem))\\r\\n    | project DateOnly = startofday(todatetime(parsed.x)), Series = tostring(parsed.series);\\r\\n\\r\\n// Step 2: Join main table with filters on both Date and Series\\r\\nSyslog\\r\\n| where SyslogMessage has \\\"instanceId\\\"\\r\\n| extend instanceId = extract(\\\"instanceId=(\\\\\\\\d+)\\\", 1, SyslogMessage)  \\r\\n| where instanceId == \\\"42402\\\"\\r\\n| where \\\"{host_token}\\\" == \\\"'All'\\\" or Computer in ({host_token})\\r\\n| extend OperationId = extract(\\\"OperationId=\\\\\\\"(?<alarm_name>[^\\\\\\\"]*)\\\\\\\"\\\", 1, SyslogMessage)\\r\\n| lookup kind=inner (watchlist) \\r\\n    on $left.OperationId == $right.[\\\"Operation Id\\\"]\\r\\n| extend DateOnly = startofday(TimeGenerated)\\r\\n| join kind=inner (filters) on DateOnly, $left.OperationName == $right.Series\\r\\n| project TimeGenerated, Computer, EventTime, Facility, HostName, SeverityLevel, instanceId, OperationId, LastUpdatedTime = LastUpdatedTimeUTC, SearchKey, OperationName, SyslogMessage\\r\\n\\r\\n\",\"size\":0,\"exportFieldName\":\"SyslogMessage\",\"exportParameterName\":\"SyslogMessage\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"visualization\":\"table\",\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"SyslogMessage\",\"formatter\":5}]}},\"name\":\"query - 0\"},{\"type\":1,\"content\":{\"json\":\"Syslog message\\r\\n```\\r\\n{SyslogMessage}\\r\\n```\"},\"name\":\"text - 1\"}]},\"conditionalVisibility\":{\"parameterName\":\"FourEyesAuthorizationEventsAllFields\",\"comparison\":\"isNotEqualTo\"},\"name\":\"group - 2\"}]},\"conditionalVisibility\":{\"parameterName\":\"isRest\",\"comparison\":\"isEqualTo\",\"value\":\"0\"},\"name\":\"Four-Eyes Authorization Events\"}],\"fromTemplateId\":\"sentinel-VeeamSecurityActivities\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId2'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=VeeamSecurityActivitiesWorkbook; logoFileName=VeeamLogo.svg; description=The Veeam Security Activities dashboard shows an aggregated view of security events from your Veeam Backup & Replication servers and Veeam ONE servers, as well as Coveware findings.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.1; title=Veeam Security Activities; templateRelativePath=VeeamSecurityActivities.json; subtitle=; provider=Veeam}.description",
                "parentId": "[variables('workbookId2')]",
                "contentId": "[variables('_workbookContentId2')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Veeam",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Nikita Konoplin",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Veeam Software",
                  "email": "microsoftappsupport@veeam.com",
                  "tier": "Partner",
                  "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "VeeamMalwareEvents_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VeeamAuthorizationEvents_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VeeamOneTriggeredAlarms_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VeeamSecurityComplianceAnalyzer_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VeeamCovewareFindings_CL",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "Syslog",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "VeeamCustomTablesDataConnector",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "Syslog",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId2')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook2-name')]",
        "contentProductId": "[variables('_workbookcontentProductId2')]",
        "id": "[variables('_workbookcontentProductId2')]",
        "version": "[variables('workbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Veeam",
        "publisherDisplayName": "Veeam Software",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Veeam/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>Veeam App for Microsoft Sentinel allows Veeam Data Platform Advanced and Premium customers to combine the powerful cyberthreat detection and response features of Microsoft Sentinel with a simple and powerful data platform that goes beyond backup, providing organizations with reliable data protection, seamless recovery, and vital security insights.</p>\n<p><strong>Underlying Microsoft Technologies used:</strong></p>\n<p>This solution takes a dependency on the following technologies, and some of these dependencies either may be in <a href=\"https://azure.microsoft.com/support/legal/preview-supplemental-terms/\">Preview</a> state or might result in additional ingestion or operational costs:</p>\n<ol type=\"a\">\n<li><p><a href=\"https://learn.microsoft.com/azure/azure-monitor/logs/data-collector-api\">Azure Monitor Ingestion API</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/products/functions/#overview\">Azure Functions</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/products/key-vault/\">Azure Key Vault</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/products/storage/\">Azure Storage Account</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/products/service-bus/\">Azure Relays</a></p>\n</li>\n<li><p><a href=\"https://azure.microsoft.com/products/logic-apps/\">Azure Logic Apps</a></p>\n</li>\n<li><p><a href=\"https://learn.microsoft.com/azure/azure-monitor/logs/log-analytics-overview\">Azure Log Analytics</a></p>\n</li>\n</ol>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 4, <strong>Workbooks:</strong> 2, <strong>Analytic Rules:</strong> 132, <strong>Watchlists:</strong> 11, <strong>Playbooks:</strong> 15</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/VeeamLogo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Veeam",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Nikita Konoplin",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Veeam Software",
          "email": "microsoftappsupport@veeam.com",
          "tier": "Partner",
          "link": "https://helpcenter.veeam.com/docs/security_plugins_microsoft_sentinel/guide/"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentId1')]",
              "version": "[variables('dataConnectorVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-ChangeCollectionTime')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectVeeamAuthorizationEvents')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectSecurityComplianceAnalyzerResult')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectMalwareEvents')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectVoneAlarms')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectCovewareFindings')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-CollectConfigurationBackups')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-FindCleanRestorePoints')]",
              "version": "[variables('playbookVersion8')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-PerformScanBackup')]",
              "version": "[variables('playbookVersion9')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-PerformInstantVMRecovery')]",
              "version": "[variables('playbookVersion10')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-ResolveTriggeredAlarm')]",
              "version": "[variables('playbookVersion11')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-StartSecurityComplianceAnalyzer')]",
              "version": "[variables('playbookVersion12')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-PerformConfigurationBackupOnIncident')]",
              "version": "[variables('playbookVersion13')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-StartQuickBackup')]",
              "version": "[variables('playbookVersion14')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_Veeam-SetupConnectionsPlaybook')]",
              "version": "[variables('playbookVersion15')]"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Job Types Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_License Editions Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_License Types Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Operation Names Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Session States Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_VBR Events Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Action Results Lookup')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Veeam Backup & Replication Settings')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_VONE Settings')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Coveware Settings')]",
              "version": "3.0.1"
            },
            {
              "kind": "Watchlist",
              "contentId": "[variables('_Veeam Collection Schedule Settings')]",
              "version": "3.0.1"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject2')._analyticRulecontentId2]",
              "version": "[variables('analyticRuleObject2').analyticRuleVersion2]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject3')._analyticRulecontentId3]",
              "version": "[variables('analyticRuleObject3').analyticRuleVersion3]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject4')._analyticRulecontentId4]",
              "version": "[variables('analyticRuleObject4').analyticRuleVersion4]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject5')._analyticRulecontentId5]",
              "version": "[variables('analyticRuleObject5').analyticRuleVersion5]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject6')._analyticRulecontentId6]",
              "version": "[variables('analyticRuleObject6').analyticRuleVersion6]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject7')._analyticRulecontentId7]",
              "version": "[variables('analyticRuleObject7').analyticRuleVersion7]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject8')._analyticRulecontentId8]",
              "version": "[variables('analyticRuleObject8').analyticRuleVersion8]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject9')._analyticRulecontentId9]",
              "version": "[variables('analyticRuleObject9').analyticRuleVersion9]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject10')._analyticRulecontentId10]",
              "version": "[variables('analyticRuleObject10').analyticRuleVersion10]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject11')._analyticRulecontentId11]",
              "version": "[variables('analyticRuleObject11').analyticRuleVersion11]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject12')._analyticRulecontentId12]",
              "version": "[variables('analyticRuleObject12').analyticRuleVersion12]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject13')._analyticRulecontentId13]",
              "version": "[variables('analyticRuleObject13').analyticRuleVersion13]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject14')._analyticRulecontentId14]",
              "version": "[variables('analyticRuleObject14').analyticRuleVersion14]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject15')._analyticRulecontentId15]",
              "version": "[variables('analyticRuleObject15').analyticRuleVersion15]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject16')._analyticRulecontentId16]",
              "version": "[variables('analyticRuleObject16').analyticRuleVersion16]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject17')._analyticRulecontentId17]",
              "version": "[variables('analyticRuleObject17').analyticRuleVersion17]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject18')._analyticRulecontentId18]",
              "version": "[variables('analyticRuleObject18').analyticRuleVersion18]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject19')._analyticRulecontentId19]",
              "version": "[variables('analyticRuleObject19').analyticRuleVersion19]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject20')._analyticRulecontentId20]",
              "version": "[variables('analyticRuleObject20').analyticRuleVersion20]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject21')._analyticRulecontentId21]",
              "version": "[variables('analyticRuleObject21').analyticRuleVersion21]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject22')._analyticRulecontentId22]",
              "version": "[variables('analyticRuleObject22').analyticRuleVersion22]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject23')._analyticRulecontentId23]",
              "version": "[variables('analyticRuleObject23').analyticRuleVersion23]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject24')._analyticRulecontentId24]",
              "version": "[variables('analyticRuleObject24').analyticRuleVersion24]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject25')._analyticRulecontentId25]",
              "version": "[variables('analyticRuleObject25').analyticRuleVersion25]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject26')._analyticRulecontentId26]",
              "version": "[variables('analyticRuleObject26').analyticRuleVersion26]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject27')._analyticRulecontentId27]",
              "version": "[variables('analyticRuleObject27').analyticRuleVersion27]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject28')._analyticRulecontentId28]",
              "version": "[variables('analyticRuleObject28').analyticRuleVersion28]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject29')._analyticRulecontentId29]",
              "version": "[variables('analyticRuleObject29').analyticRuleVersion29]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject30')._analyticRulecontentId30]",
              "version": "[variables('analyticRuleObject30').analyticRuleVersion30]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject31')._analyticRulecontentId31]",
              "version": "[variables('analyticRuleObject31').analyticRuleVersion31]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject32')._analyticRulecontentId32]",
              "version": "[variables('analyticRuleObject32').analyticRuleVersion32]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject33')._analyticRulecontentId33]",
              "version": "[variables('analyticRuleObject33').analyticRuleVersion33]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject34')._analyticRulecontentId34]",
              "version": "[variables('analyticRuleObject34').analyticRuleVersion34]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject35')._analyticRulecontentId35]",
              "version": "[variables('analyticRuleObject35').analyticRuleVersion35]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject36')._analyticRulecontentId36]",
              "version": "[variables('analyticRuleObject36').analyticRuleVersion36]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject37')._analyticRulecontentId37]",
              "version": "[variables('analyticRuleObject37').analyticRuleVersion37]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject38')._analyticRulecontentId38]",
              "version": "[variables('analyticRuleObject38').analyticRuleVersion38]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject39')._analyticRulecontentId39]",
              "version": "[variables('analyticRuleObject39').analyticRuleVersion39]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject40')._analyticRulecontentId40]",
              "version": "[variables('analyticRuleObject40').analyticRuleVersion40]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject41')._analyticRulecontentId41]",
              "version": "[variables('analyticRuleObject41').analyticRuleVersion41]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject42')._analyticRulecontentId42]",
              "version": "[variables('analyticRuleObject42').analyticRuleVersion42]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject43')._analyticRulecontentId43]",
              "version": "[variables('analyticRuleObject43').analyticRuleVersion43]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject44')._analyticRulecontentId44]",
              "version": "[variables('analyticRuleObject44').analyticRuleVersion44]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject45')._analyticRulecontentId45]",
              "version": "[variables('analyticRuleObject45').analyticRuleVersion45]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject46')._analyticRulecontentId46]",
              "version": "[variables('analyticRuleObject46').analyticRuleVersion46]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject47')._analyticRulecontentId47]",
              "version": "[variables('analyticRuleObject47').analyticRuleVersion47]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject48')._analyticRulecontentId48]",
              "version": "[variables('analyticRuleObject48').analyticRuleVersion48]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject49')._analyticRulecontentId49]",
              "version": "[variables('analyticRuleObject49').analyticRuleVersion49]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject50')._analyticRulecontentId50]",
              "version": "[variables('analyticRuleObject50').analyticRuleVersion50]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject51')._analyticRulecontentId51]",
              "version": "[variables('analyticRuleObject51').analyticRuleVersion51]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject52')._analyticRulecontentId52]",
              "version": "[variables('analyticRuleObject52').analyticRuleVersion52]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject53')._analyticRulecontentId53]",
              "version": "[variables('analyticRuleObject53').analyticRuleVersion53]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject54')._analyticRulecontentId54]",
              "version": "[variables('analyticRuleObject54').analyticRuleVersion54]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject55')._analyticRulecontentId55]",
              "version": "[variables('analyticRuleObject55').analyticRuleVersion55]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject56')._analyticRulecontentId56]",
              "version": "[variables('analyticRuleObject56').analyticRuleVersion56]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject57')._analyticRulecontentId57]",
              "version": "[variables('analyticRuleObject57').analyticRuleVersion57]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject58')._analyticRulecontentId58]",
              "version": "[variables('analyticRuleObject58').analyticRuleVersion58]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject59')._analyticRulecontentId59]",
              "version": "[variables('analyticRuleObject59').analyticRuleVersion59]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject60')._analyticRulecontentId60]",
              "version": "[variables('analyticRuleObject60').analyticRuleVersion60]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject61')._analyticRulecontentId61]",
              "version": "[variables('analyticRuleObject61').analyticRuleVersion61]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject62')._analyticRulecontentId62]",
              "version": "[variables('analyticRuleObject62').analyticRuleVersion62]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject63')._analyticRulecontentId63]",
              "version": "[variables('analyticRuleObject63').analyticRuleVersion63]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject64')._analyticRulecontentId64]",
              "version": "[variables('analyticRuleObject64').analyticRuleVersion64]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject65')._analyticRulecontentId65]",
              "version": "[variables('analyticRuleObject65').analyticRuleVersion65]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject66')._analyticRulecontentId66]",
              "version": "[variables('analyticRuleObject66').analyticRuleVersion66]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject67')._analyticRulecontentId67]",
              "version": "[variables('analyticRuleObject67').analyticRuleVersion67]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject68')._analyticRulecontentId68]",
              "version": "[variables('analyticRuleObject68').analyticRuleVersion68]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject69')._analyticRulecontentId69]",
              "version": "[variables('analyticRuleObject69').analyticRuleVersion69]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject70')._analyticRulecontentId70]",
              "version": "[variables('analyticRuleObject70').analyticRuleVersion70]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject71')._analyticRulecontentId71]",
              "version": "[variables('analyticRuleObject71').analyticRuleVersion71]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject72')._analyticRulecontentId72]",
              "version": "[variables('analyticRuleObject72').analyticRuleVersion72]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject73')._analyticRulecontentId73]",
              "version": "[variables('analyticRuleObject73').analyticRuleVersion73]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject74')._analyticRulecontentId74]",
              "version": "[variables('analyticRuleObject74').analyticRuleVersion74]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject75')._analyticRulecontentId75]",
              "version": "[variables('analyticRuleObject75').analyticRuleVersion75]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject76')._analyticRulecontentId76]",
              "version": "[variables('analyticRuleObject76').analyticRuleVersion76]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject77')._analyticRulecontentId77]",
              "version": "[variables('analyticRuleObject77').analyticRuleVersion77]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject78')._analyticRulecontentId78]",
              "version": "[variables('analyticRuleObject78').analyticRuleVersion78]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject79')._analyticRulecontentId79]",
              "version": "[variables('analyticRuleObject79').analyticRuleVersion79]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject80')._analyticRulecontentId80]",
              "version": "[variables('analyticRuleObject80').analyticRuleVersion80]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject81')._analyticRulecontentId81]",
              "version": "[variables('analyticRuleObject81').analyticRuleVersion81]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject82')._analyticRulecontentId82]",
              "version": "[variables('analyticRuleObject82').analyticRuleVersion82]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject83')._analyticRulecontentId83]",
              "version": "[variables('analyticRuleObject83').analyticRuleVersion83]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject84')._analyticRulecontentId84]",
              "version": "[variables('analyticRuleObject84').analyticRuleVersion84]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject85')._analyticRulecontentId85]",
              "version": "[variables('analyticRuleObject85').analyticRuleVersion85]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject86')._analyticRulecontentId86]",
              "version": "[variables('analyticRuleObject86').analyticRuleVersion86]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject87')._analyticRulecontentId87]",
              "version": "[variables('analyticRuleObject87').analyticRuleVersion87]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject88')._analyticRulecontentId88]",
              "version": "[variables('analyticRuleObject88').analyticRuleVersion88]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject89')._analyticRulecontentId89]",
              "version": "[variables('analyticRuleObject89').analyticRuleVersion89]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject90')._analyticRulecontentId90]",
              "version": "[variables('analyticRuleObject90').analyticRuleVersion90]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject91')._analyticRulecontentId91]",
              "version": "[variables('analyticRuleObject91').analyticRuleVersion91]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject92')._analyticRulecontentId92]",
              "version": "[variables('analyticRuleObject92').analyticRuleVersion92]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject93')._analyticRulecontentId93]",
              "version": "[variables('analyticRuleObject93').analyticRuleVersion93]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject94')._analyticRulecontentId94]",
              "version": "[variables('analyticRuleObject94').analyticRuleVersion94]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject95')._analyticRulecontentId95]",
              "version": "[variables('analyticRuleObject95').analyticRuleVersion95]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject96')._analyticRulecontentId96]",
              "version": "[variables('analyticRuleObject96').analyticRuleVersion96]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject97')._analyticRulecontentId97]",
              "version": "[variables('analyticRuleObject97').analyticRuleVersion97]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject98')._analyticRulecontentId98]",
              "version": "[variables('analyticRuleObject98').analyticRuleVersion98]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject99')._analyticRulecontentId99]",
              "version": "[variables('analyticRuleObject99').analyticRuleVersion99]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject100')._analyticRulecontentId100]",
              "version": "[variables('analyticRuleObject100').analyticRuleVersion100]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject101')._analyticRulecontentId101]",
              "version": "[variables('analyticRuleObject101').analyticRuleVersion101]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject102')._analyticRulecontentId102]",
              "version": "[variables('analyticRuleObject102').analyticRuleVersion102]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject103')._analyticRulecontentId103]",
              "version": "[variables('analyticRuleObject103').analyticRuleVersion103]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject104')._analyticRulecontentId104]",
              "version": "[variables('analyticRuleObject104').analyticRuleVersion104]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject105')._analyticRulecontentId105]",
              "version": "[variables('analyticRuleObject105').analyticRuleVersion105]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject106')._analyticRulecontentId106]",
              "version": "[variables('analyticRuleObject106').analyticRuleVersion106]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject107')._analyticRulecontentId107]",
              "version": "[variables('analyticRuleObject107').analyticRuleVersion107]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject108')._analyticRulecontentId108]",
              "version": "[variables('analyticRuleObject108').analyticRuleVersion108]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject109')._analyticRulecontentId109]",
              "version": "[variables('analyticRuleObject109').analyticRuleVersion109]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject110')._analyticRulecontentId110]",
              "version": "[variables('analyticRuleObject110').analyticRuleVersion110]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject111')._analyticRulecontentId111]",
              "version": "[variables('analyticRuleObject111').analyticRuleVersion111]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject112')._analyticRulecontentId112]",
              "version": "[variables('analyticRuleObject112').analyticRuleVersion112]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject113')._analyticRulecontentId113]",
              "version": "[variables('analyticRuleObject113').analyticRuleVersion113]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject114')._analyticRulecontentId114]",
              "version": "[variables('analyticRuleObject114').analyticRuleVersion114]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject115')._analyticRulecontentId115]",
              "version": "[variables('analyticRuleObject115').analyticRuleVersion115]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject116')._analyticRulecontentId116]",
              "version": "[variables('analyticRuleObject116').analyticRuleVersion116]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject117')._analyticRulecontentId117]",
              "version": "[variables('analyticRuleObject117').analyticRuleVersion117]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject118')._analyticRulecontentId118]",
              "version": "[variables('analyticRuleObject118').analyticRuleVersion118]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject119')._analyticRulecontentId119]",
              "version": "[variables('analyticRuleObject119').analyticRuleVersion119]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject120')._analyticRulecontentId120]",
              "version": "[variables('analyticRuleObject120').analyticRuleVersion120]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject121')._analyticRulecontentId121]",
              "version": "[variables('analyticRuleObject121').analyticRuleVersion121]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject122')._analyticRulecontentId122]",
              "version": "[variables('analyticRuleObject122').analyticRuleVersion122]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject123')._analyticRulecontentId123]",
              "version": "[variables('analyticRuleObject123').analyticRuleVersion123]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject124')._analyticRulecontentId124]",
              "version": "[variables('analyticRuleObject124').analyticRuleVersion124]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject125')._analyticRulecontentId125]",
              "version": "[variables('analyticRuleObject125').analyticRuleVersion125]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject126')._analyticRulecontentId126]",
              "version": "[variables('analyticRuleObject126').analyticRuleVersion126]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject127')._analyticRulecontentId127]",
              "version": "[variables('analyticRuleObject127').analyticRuleVersion127]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject128')._analyticRulecontentId128]",
              "version": "[variables('analyticRuleObject128').analyticRuleVersion128]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject129')._analyticRulecontentId129]",
              "version": "[variables('analyticRuleObject129').analyticRuleVersion129]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject130')._analyticRulecontentId130]",
              "version": "[variables('analyticRuleObject130').analyticRuleVersion130]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject131')._analyticRulecontentId131]",
              "version": "[variables('analyticRuleObject131').analyticRuleVersion131]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject132')._analyticRulecontentId132]",
              "version": "[variables('analyticRuleObject132').analyticRuleVersion132]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId2')]",
              "version": "[variables('workbookVersion2')]"
            }
          ]
        },
        "firstPublishDate": "2025-08-26",
        "providers": [
          "Veeam"
        ],
        "categories": {
          "domains": [
            "IT Operations",
            "Security - Threat Protection"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
