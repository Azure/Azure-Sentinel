{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
    "parameters": {
    "functionAppName": {
      "defaultValue": "vmrayfeed",
      "minLength": 1,
      "maxLength": 20,
      "type": "string"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "functionAppPlanSku": {
      "type": "string",
      "defaultValue": "EP1",
      "allowedValues": [
        "EP1",
        "EP2",
        "EP3"
      ],
      "metadata": {
        "description": "Specifies the Azure Function hosting plan SKU."
      }
    },
    "VmrayBaseURL": {
            "type": "string",
            "defaultValue": "https://us.cloud.vmray.com",
            "minLength": 1
    },
    "VmrayAPIKey": {
        "type": "securestring",
        "defaultValue": "<VMRay API Key>",
        "minLength": 1
    },
    "VmraySampleVerdict": {
        "type": "string",
        "allowedValues": [
            "Malicious",
            "Suspicious",
            "Malicious & Suspicious"
        ],
        "defaultValue": "Malicious"
    },
    "VmrayInitialFetchDate": {
        "type": "string",
        "defaultValue": "90",
        "metadata": {
            "description": "Please provide initial fetch interval in days"
        }
    },
    "IndicatorExpirationInDays": {
            "type": "string",
            "defaultValue": "30",
            "metadata": {
                "description": "Please specify the number of days the indicator should remain valid."
            }
    },
    "TimeInterval": {
        "type": "string",
        "allowedValues": [
            "Every 5 min",
            "Every 10 min",
            "Every 60 min",
            "Every 6 hours",
            "Every 12 hours",
            "Every 24 hours"
        ],
            "defaultValue": "Every 6 hours",
        "metadata": {
            "description": "Select the Interval."
        }
    },
    "AzureClientID": {
        "type": "string",
        "minLength": 1,
        "metadata": {
            "description": "Enter Azure Client Id that you have created during app registration."
        }
    },
    "AzureClientSecret": {
        "type": "securestring",
        "minLength": 1,
        "metadata": {
            "description": "Enter Azure Client Secret that you have created during creating the client secret."
        }
    },
    "AzureTenantID": {
        "type": "string",
        "minLength": 1,
        "metadata": {
            "description": "Enter Azure Tenant Id of your Azure Active Directory."
        }
    },
    "AzureWorkspaceID": {
        "type": "string",
        "minLength": 1,
        "metadata": {
            "description": "Enter workspace id Id of your Azure Active Directory."
        }
    },
    "AppInsightsWorkspaceResourceID": {
        "type": "string",
        "metadata": {
            "description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
        }
    }
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('functionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "hostingPlanName": "[parameters('functionAppName')]",
    "applicationInsightsName": "[concat(toLower(parameters('functionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "deploymentStorageContainerName": "vmraystoragecontainer",
    "storageAccountName": "[concat('vmrayti', take(uniqueString(resourceGroup().id), 3))]",
    "PollingMap": {
            "Every 5 min": "*/5 * * * *",
            "Every 10 min": "*/10 * * * *",
            "Every 60 min": "0 * * * *",
            "Every 6 hours": "0 */6 * * *",
            "Every 12 hours": "0 */12 * * *",
            "Every 24 hours" : "0 0 * * *"
        },
    "Polling": "[variables('PollingMap')[parameters('TimeInterval')]]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "sku": {  
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "defaultToOAuthAuthentication": true,
        "allowBlobPublicAccess": false
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "tier": "ElasticPremium",
        "name": "[parameters('functionAppPlanSku')]",
        "family": "EP"
      },
      "properties": {
        "maximumElasticWorkerCount": 20,
        "reserved": true
      },
      "kind": "elastic"
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('FunctionName')]",
        "WorkspaceResourceId": "[parameters('AppInsightsWorkspaceResourceID')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', variables('deploymentStorageContainerName'))]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices',  variables('storageAccountName'), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-12-01",
      "name": "[variables('FunctionName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "python|3.11",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('storageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('FunctionName'))]"
            },
            {
              "name": "storageAccountName",
              "value": "[variables('storageAccountName')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            },
            {
              "name": "VmrayBaseURL",
              "value": "[parameters('VmrayBaseURL')]"
            },
            {
              "name": "VmrayAPIKey",
              "value": "[parameters('VmrayAPIKey')]"
            },
            {
              "name": "VmraySampleVerdict",
              "value": "[parameters('VmraySampleVerdict')]"
            },
            {
              "name": "VmrayInitialFetchDate",
              "value": "[parameters('VmrayInitialFetchDate')]"
            },
            {
              "name": "IndicatorExpirationInDays",
              "value": "[parameters('IndicatorExpirationInDays')]"
            },
            {
              "name": "AzureClientID",
              "value": "[parameters('AzureClientID')]"
            },
            {
              "name": "AzureClientSecret",
              "value": "[parameters('AzureClientSecret')]"
            },
            {
              "name": "AzureTenantID",
              "value": "[parameters('AzureTenantID')]"
            },
            {
              "name": "AzureWorkspaceID",
              "value": "[parameters('AzureWorkspaceID')]"
            },
            {
              "name": "Polling",
              "value": "[variables('Polling')]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('storageAccountName')))]"
      ],
      "sku": {
        "name": "[parameters('storageAccountType')]",
        "tier": "ElasticPremium"
      },
      "properties": {
        "cors": {
          "corsRules": []
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/extensions",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', variables('FunctionName'), 'zipdeploy')]",
      "properties": {
        "packageUri": "https://github.com/vmray/ms-sentinel/raw/refs/heads/main/VMRayThreatIntelligence/PremiumPlan/VMRayConn.zip"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('storageAccountName'), '/default/', tolower(variables('storageAccountName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    }
  ]
}
