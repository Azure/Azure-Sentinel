{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "VMRay URL Analyis",
    "description": "Submits a url or set of urls associated with an incident to VMRay for Analyis.",
    "prerequisites": "VMRay API Key.",
    "prerequisitesDeployTemplateFile": "../VMRay/FunctionApp/azuredeploy.json",
    "postDeploymentSteps": [
      "None"
    ],
    "lastUpdateTime": "2025-02-20T00:00:00.000Z",
    "entities": [
      "url"
    ],
    "tags": [
      "Enrichment"
    ],
    "support": {
      "tier": "community"
    },
    "author": {
      "name": "VMRay"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "Submit-URL-VMRay-Analyzer",
      "type": "string",
      "metadata": {
        "description": "Name of the Logic App/Playbook"
      }
    },
    "WorkspaceID": {
      "defaultValue": "",
      "type": "String",
      "metadata": {
        "description": "Log Analytics Workspace ID"
      }
    },
    "FunctionAppName": {
      "defaultValue": "vmrayenrich",
      "type": "string",
      "metadata": {
        "description": "Name of the FunctionApp"
      }
    }
  },
  "variables": {
    "functionappName": "[concat(toLower(parameters('FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('AzureSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('AzureSentinelConnectionName')]",
        "customParameterValues": {},
        "parameterValueType": "Alternative",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('PlaybookName')]",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Indicator_Expiration_In_Days": {
                "defaultValue": "30",
                "type": "String"
            },
            "$connections": {
                "type": "Object",
                "defaultValue": {}
            }
        },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "body": {
                  "callback_url": "@listCallbackUrl()"
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Entities_-_Get_URLs": {
              "runAfter": {
                "Sorted_VMRay_VTIS": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "path": "/entities/url"
              }
            },
            "For_each_URL": {
              "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
              "actions": {
                "UplaodURL": {
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "url": "@items('For_each_URL')['url']",
                      "tags": ["url_submission_logic_app"]
                    },
                    "function": {
                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/UplaodURL')]"
                    }
                  }
                },
                "Check_if_the_status_is_200": {
                  "actions": {
                    "For_each_submission": {
                      "foreach": "@body('UplaodURL')?['vmray_submission']",
                      "actions": {
                        "Set_Submission_Status": {
                          "type": "SetVariable",
                          "inputs": {
                            "name": "submission_status",
                            "value": false
                          }
                        },
                        "Wait_untill_submission_is_completed": {
                          "actions": {
                            "Delay_By_2_minutes": {
                              "type": "Wait",
                              "inputs": {
                                "interval": {
                                  "count": 2,
                                  "unit": "Minute"
                                }
                              }
                            },
                            "GetVMRaySubmission": {
                              "runAfter": {
                                "Delay_By_2_minutes": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Function",
                              "inputs": {
                                "body": {
                                  "submission_id": "@items('For_each_submission')['SubmissionID']"
                                },
                                "function": {
                                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/GetVMRaySubmission')]"
                                }
                              }
                            },
                            "Check_if_submission_is_completed": {
                              "actions": {
                                "Set_Submission_Status_to_True": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "submission_status",
                                    "value": true
                                  }
                                },
                                "GetVMRaySample": {
                                  "runAfter": {
                                    "Set_Submission_Status_to_True": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Function",
                                  "inputs": {
                                    "body": {
                                      "sample_id": "@body('GetVMRaySubmission')?['submission_sample_id']"
                                    },
                                    "function": {
                                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/GetVMRaySample')]"
                                    }
                                  }
                                },
                                "Check_If_Sample_Verdict_is_Suspicious_or_Malicious": {
                                  "actions": {
                                    "Set_Submission_Report_Variable": {
                                      "type": "SetVariable",
                                      "inputs": {
                                        "name": "submission_report",
                                        "value": [
                                          {
                                            "Submission Status": "@body('GetVMRaySubmission')['submission_status']",
                                            "Sample Verdict": "@body('GetVMRaySample')['sample_verdict']",
                                            "Classification": "@body('GetVMRaySample')['sample_classifications']",
                                            "Threat Names": "@body('GetVMRaySample')['sample_threat_names']",
                                            "Link to the Full Report": "@body('GetVMRaySample')['sample_webif_url']",
                                            "Submission ID": "@body('GetVMRaySubmission')['submission_id']",
                                            "Sample ID": "@body('GetVMRaySample')['sample_id']",
                                            "Notes": "@body('GetVMRaySample')['sample_verdict_reason_description']"
                                          }
                                        ]
                                      }
                                    },
                                    "Create_HTML_table": {
                                      "runAfter": {
                                        "Set_Submission_Report_Variable": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Table",
                                      "inputs": {
                                        "from": "@variables('submission_report')",
                                        "format": "HTML"
                                      }
                                    },
                                    "Add_comment_to_incident_(V3)": {
                                      "runAfter": {
                                        "Create_HTML_table": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "body": {
                                          "incidentArmId": "@triggerBody()?['object']?['id']",
                                          "message": "<p class=\"editor-paragraph\">VMRay Submission Details for URL: @{replace(replace(items('For_each_URL')?['url'],'https://',''),'http://','')}</p><p class=\"editor-paragraph\">@{body('Create_HTML_table')}@{body('Create_HTML_table_2')}</p>"
                                        },
                                        "path": "/Incidents/Comment"
                                      }
                                    },
                                    "GetVMRayIOCs": {
                                      "runAfter": {
                                        "Add_comment_to_incident_(V3)": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "Function",
                                      "inputs": {
                                        "body": {
                                          "sample_id": "@body('GetVMRaySample')['sample_id']",
                                          "submission_id": "@body('GetVMRaySubmission')['submission_id']",
                                          "sample_verdict": [
                                            "malicious",
                                            "suspicious"
                                          ],
                                          "incident_id": "@triggerBody()?['object']?['properties']?['incidentNumber']",
                                          "valid_until": "@parameters('Indicator_Expiration_In_Days')"
                                        },
                                        "function": {
                                          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/GetVMRayIOCs')]"
                                        }
                                      }
                                    },
                                    "Check_if_VMRay_has_any_indicators_for_the_sample": {
                                      "type": "If",
                                      "expression": {
                                        "and": [
                                          {
                                            "greater": [
                                              "@length(body('GetVMRayIOCs')['custom_resp'])",
                                              0
                                            ]
                                          }
                                        ]
                                      },
                                      "actions": {
                                        "Threat_Intelligence_-_Upload_Indicators_of_Compromise_(V2)_(Preview)": {
                                          "type": "ApiConnection",
                                          "inputs": {
                                            "host": {
                                              "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                              }
                                            },
                                            "method": "post",
                                            "body": {
                                              "sourcesystem": "VMRayThreatIntelligence",
                                              "indicators": "@body('GetVMRayIOCs')['custom_resp']"
                                            },
                                            "path": "/V2/ThreatIntelligence/@{encodeURIComponent(triggerBody()?['workspaceId'])}/UploadIndicators/"
                                          }
                                        }
                                      },
                                      "else": {
                                        "actions": {}
                                      },
                                      "runAfter": {
                                        "GetVMRayIOCs": [
                                          "Succeeded"
                                        ]
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Create_HTML_table_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "else": {
                                    "actions": {
                                      "Set_Submission_Report_Variable_01": {
                                        "type": "SetVariable",
                                        "inputs": {
                                          "name": "submission_report",
                                          "value": [
                                            {
                                              "Submission Status": "@body('GetVMRaySubmission')['submission_status']",
                                              "Sample Verdict": "@body('GetVMRaySample')['sample_verdict']",
                                              "Classification": "@body('GetVMRaySample')['sample_classifications']",
                                              "Threat Names": "@body('GetVMRaySample')['sample_threat_names']",
                                              "Link to the Full Report": "@body('GetVMRaySample')['sample_webif_url']",
                                              "Submission ID": "@body('GetVMRaySubmission')['submission_id']",
                                              "Sample ID": "@body('GetVMRaySample')['sample_id']",
                                              "Notes": "@body('GetVMRaySample')['sample_verdict_reason_description']"
                                            }
                                          ]
                                        }
                                      },
                                      "Create_HTML_table_1": {
                                        "runAfter": {
                                          "Set_Submission_Report_Variable_01": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "Table",
                                        "inputs": {
                                          "from": "@variables('submission_report')",
                                          "format": "HTML"
                                        }
                                      },
                                      "Add_comment_to_incident_(V3)_1": {
                                        "runAfter": {
                                          "Create_HTML_table_1": [
                                            "Succeeded"
                                          ]
                                        },
                                        "type": "ApiConnection",
                                        "inputs": {
                                          "host": {
                                            "connection": {
                                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                          },
                                          "method": "post",
                                          "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p class=\"editor-paragraph\">VMRay Submission Details for URL: @{replace(replace(items('For_each_URL')?['url'],'https://',''),'http://','')}<br>@{body('Create_HTML_table_1')}@{body('Create_HTML_table_2')}</p>"
                                          },
                                          "path": "/Incidents/Comment"
                                        }
                                      }
                                    }
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "not": {
                                          "equals": [
                                            "@body('GetVMRaySample')['sample_verdict']",
                                            "clean"
                                          ]
                                        }
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "vmrayenrichcox-GetVMRayVTIs": {
                                  "runAfter": {
                                    "GetVMRaySample": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Function",
                                  "inputs": {
                                    "body": {
                                      "sample_id": "@body('GetVMRaySubmission')?['submission_sample_id']"
                                    },
                                    "function": {
                                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('Functionappname'), '/functions/GetVMRayVTIs')]"
                                    }
                                  }
                                },
                                "Set_VTIS": {
                                  "runAfter": {
                                    "vmrayenrichcox-GetVMRayVTIs": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "sample_vtis",
                                    "value": "@body('vmrayenrichcox-GetVMRayVTIs')['threat_indicators']"
                                  }
                                },
                                "Create_HTML_table_2": {
                                  "runAfter": {
                                    "Set_variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table",
                                  "inputs": {
                                    "from": "@reverse(variables('sorted_vmray_vtis'))",
                                    "format": "HTML"
                                  }
                                },
                                "For_each_VTI": {
                                  "foreach": "@variables('sample_vtis')",
                                  "actions": {
                                    "Compose": {
                                      "type": "Compose",
                                      "inputs": {
                                        "Severity": "@items('For_each_VTI')?['score']",
                                        "Category": "@items('For_each_VTI')?['category']",
                                        "Operation": "@items('For_each_VTI')?['operation']",
                                        "Classifications": "@items('For_each_VTI')?['classifications']"
                                      }
                                    },
                                    "Append_to_array_variable": {
                                      "runAfter": {
                                        "Compose": [
                                          "Succeeded"
                                        ]
                                      },
                                      "type": "AppendToArrayVariable",
                                      "inputs": {
                                        "name": "vmray_vtis",
                                        "value": "@outputs('Compose')"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "Set_variable_2": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Foreach"
                                },
                                "Set_variable": {
                                  "runAfter": {
                                    "For_each_VTI": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "sorted_vmray_vtis",
                                    "value": "@sort(variables('vmray_vtis'), 'Severity')"
                                  }
                                },
                                "Set_variable_1": {
                                  "runAfter": {
                                    "Set_VTIS": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "vmray_vtis",
                                    "value": "@null"
                                  }
                                },
                                "Set_variable_2": {
                                  "runAfter": {
                                    "Set_variable_1": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "sorted_vmray_vtis",
                                    "value": "@null"
                                  }
                                }
                              },
                              "runAfter": {
                                "GetVMRaySubmission": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {}
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@body('GetVMRaySubmission')?['submission_finished']",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {
                            "Set_Submission_Status": [
                              "Succeeded"
                            ]
                          },
                          "expression": "@equals(variables('submission_status'),true)",
                          "limit": {
                            "count": 60,
                            "timeout": "PT1H"
                          },
                          "type": "Until"
                        }
                      },
                      "type": "Foreach"
                    }
                  },
                  "runAfter": {
                    "UplaodURL": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Add_Comment_to_incident": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuresentinel-1']['connectionId']"
                            }
                          },
                          "method": "post",
                          "body": {
                            "incidentArmId": "@triggerBody()?['object']?['id']",
                            "message": "<p class=\"editor-paragraph\">Invalid API Response</p>"
                          },
                          "path": "/Incidents/Comment"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('UplaodURL')['statusCode']",
                          200
                        ]
                      }
                    ]
                  },
                  "type": "If"
                }
              },
              "runAfter": {
                "Entities_-_Get_URLs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "SubmissionReportforTable": {
              "runAfter": {
                "check_submission_status": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_report",
                    "type": "array"
                  }
                ]
              }
            },
            "check_submission_status": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_status",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Sample_VTIS": {
              "runAfter": {
                "SubmissionReportforTable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "sample_vtis",
                    "type": "array"
                  }
                ]
              }
            },
            "VMRay_VTIS": {
              "runAfter": {
                "Sample_VTIS": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "vmray_vtis",
                    "type": "array"
                  }
                ]
              }
            },
            "Sorted_VMRay_VTIS": {
              "runAfter": {
                "VMRay_VTIS": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "sorted_vmray_vtis",
                    "type": "array"
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "connectionName": "[variables('AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    }
  ]
}
