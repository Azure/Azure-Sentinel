{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Internet data.",
        "title": "MDTI-Data-Cookies",
        "description": "This playbook uses the MDTI Components data to automatically enrich incidents generated by Microsoft Sentinel. Leverage this playbook in order to enrich your incidents with [Cookies](https://learn.microsoft.com/en-us/defender/threat-intelligence/data-sets#cookies) data hosted by the indicators found within the incident. These values sometimes contain a state for the application or little bits of tracking data. Defender TI highlights and indexes cookie names observed when crawling a website and allows users to dig into everywhere we have observed specific cookie names across its crawling and data collection.",
        "prerequisites": [
            "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
            "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
        ],
        "lastUpdateTime": "2025-09-15T00:00:00.000Z",
        "entities": [
            "IP",
            "Host"
        ],
        "tags": [
            "Microsoft Sentinel",
            "Microsoft Defender Threat Intelligence",
            "MDTI",
            "Threat Intelligence",
            "SOAR",
            "Playbook"
        ],
        "postDeployment": [
            "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
            "2. Authorize/Configure all the connections.",
            "3. Assign Microsoft Sentinel Responder Role to playbook.",
            "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
            "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Data-Cookies/readme.md)"
        ],
        "support": {
            "tier": "Microsoft"
        },
        "author": {
            "name": "Microsoft"
        },
        "releaseNotes": [
            {
                "version": "1.1.0",
                "title": "MDTI Data Cookies",
                "notes": [
                    "Add support for authentication using Managed Identity"
                ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "MDTI-Data-Cookies",
            "type": "string"
        },
        "MDTI-BaseUrl": {
            "type": "String",
            "defaultValue": "https://graph.microsoft.com",
            "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
            }
        },
        "Api-Version": {
            "type": "String",
            "defaultValue": "v1.0",
            "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
            }
        }
    },
    "variables": {
        "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {
                            },
                            "type": "Object"
                        },
                        "MDTI-BaseUrl": {
                            "defaultValue": "[parameters('MDTI-BaseUrl')]",
                            "type": "String"
                        },
                        "Api-Version": {
                            "defaultValue": "[parameters('Api-Version')]",
                            "type": "String"
                        }
                    },
                    "triggers": {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Entities_-_Get_Hosts": {
                            "runAfter": {
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs": {
                            "runAfter": {
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "path": "/entities/ip"
                            }
                        },
                        "For_each_Host": {
                            "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions": {
                                "Add_comment_to_incident_(V3)_4": {
                                    "runAfter": {
                                        "Condition": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "\u003cp\u003eMDTI Cookies for Indicator: @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}\u003cbr\u003e\n@{variables('Domain_comment')}\u003c/p\u003e"
                                        },
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Condition": {
                                    "actions": {
                                        "Create_Cookies_HtmlTable": {
                                            "type": "Table",
                                            "inputs": {
                                                "from": "@variables('result_output_host')",
                                                "format": "HTML"
                                            }
                                        },
                                        "Set_domain_comment": {
                                            "runAfter": {
                                                "Create_Cookies_HtmlTable": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Domain_comment",
                                                "value": "@body('Create_Cookies_HtmlTable')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_domain_comment_empty": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "Domain_comment",
                                                    "value": "No results found."
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('result_output_host'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Cookies_by_Hostname": {
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/cookies?$count=true",
                                        "method": "GET",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    }
                                },
                                "For_each": {
                                    "foreach": "@body('Parse_results_from_Get_request_for_Cookies')?['value']",
                                    "actions": {
                                        "Append_to_array_variable": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "result_output_host",
                                                "value": {
                                                    "First": "@{items('For_each')?['firstSeenDateTime']}",
                                                    "Last": "@{items('For_each')?['lastSeenDateTime']}",
                                                    "Name": "@{items('For_each')?['name']}",
                                                    "domain": "@{items('For_each')?['domain']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_results_from_Get_request_for_Cookies": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Parse_results_from_Get_request_for_Cookies": {
                                    "runAfter": {
                                        "Cookies_by_Hostname": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Cookies_by_Hostname')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.count": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string"
                                                            },
                                                            "firstSeenDateTime": {
                                                                "type": "string"
                                                            },
                                                            "host": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "lastSeenDateTime": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "domain",
                                                            "name",
                                                            "host"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Set_variable": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)_4": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "result_output_host",
                                        "value": [
                                        ]
                                    }
                                }
                            },
                            "runAfter": {
                                "intialize_domain_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "For_each_IP_Address": {
                            "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Condition_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "\u003cp\u003eMDTI Cookies for Indicator: @{items('For_each_IP_Address')?['Address']}\u003cbr\u003e\n@{variables('IPcomment')}\u003c/p\u003e"
                                        },
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Condition_2": {
                                    "actions": {
                                        "Cookies_for_IP_address_Results_HTML_Table": {
                                            "type": "Table",
                                            "inputs": {
                                                "from": "@variables('result_output_ip')",
                                                "format": "HTML"
                                            }
                                        },
                                        "Set_variable_2": {
                                            "runAfter": {
                                                "Cookies_for_IP_address_Results_HTML_Table": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "IPcomment",
                                                "value": "@body('Cookies_for_IP_address_Results_HTML_Table')"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "For_each_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "else": {
                                        "actions": {
                                            "Set_variable_3": {
                                                "type": "SetVariable",
                                                "inputs": {
                                                    "name": "IPcomment",
                                                    "value": "No results found."
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(variables('result_output_ip'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "Cookies_by_IP_Address": {
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/cookies?$count=true",
                                        "method": "GET",
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "authentication": {
                                            "type": "ManagedServiceIdentity",
                                            "audience": "https://graph.microsoft.com"
                                        }
                                    }
                                },
                                "For_each_2": {
                                    "foreach": "@body('Parse_results_from_Get_request_for_Cookies_')?['value']",
                                    "actions": {
                                        "Append_to_array_variable_2": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "result_output_ip",
                                                "value": {
                                                    "First": "@{items('For_each_2')?['firstSeenDateTime']}",
                                                    "Last": "@{items('For_each_2')?['lastSeenDateTime']}",
                                                    "Name": "@{items('For_each_2')?['name']}",
                                                    "domain": "@{items('For_each_2')?['domain']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_results_from_Get_request_for_Cookies_": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Parse_results_from_Get_request_for_Cookies_": {
                                    "runAfter": {
                                        "Cookies_by_IP_Address": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('Cookies_by_IP_Address')",
                                        "schema": {
                                            "properties": {
                                                "@@odata.context": {
                                                    "type": "string"
                                                },
                                                "@@odata.count": {
                                                    "type": "integer"
                                                },
                                                "value": {
                                                    "items": {
                                                        "properties": {
                                                            "domain": {
                                                                "type": "string"
                                                            },
                                                            "firstSeenDateTime": {
                                                                "type": "string"
                                                            },
                                                            "host": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "lastSeenDateTime": {
                                                                "type": "string"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "required": [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "domain",
                                                            "name",
                                                            "host"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Reset_IP_variable": {
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "result_output_ip",
                                        "value": [
                                        ]
                                    }
                                }
                            },
                            "runAfter": {
                                "Initializa_IP_Comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach",
                            "runtimeConfiguration": {
                                "concurrency": {
                                    "repetitions": 1
                                }
                            }
                        },
                        "Init_Result_Host": {
                            "runAfter": {
                                "Entities_-_Get_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "result_output_host",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Init_Result_IP": {
                            "runAfter": {
                                "Entities_-_Get_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "result_output_ip",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initializa_IP_Comment": {
                            "runAfter": {
                                "Init_Result_IP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPcomment",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "intialize_domain_comment": {
                            "runAfter": {
                                "Init_Result_Host": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Domain_comment",
                                        "type": "string"
                                    }
                                ]
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelTemplateName": "MDTI-Data-Cookies",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('MicrosoftSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('MicrosoftSentinelConnectionName')]",
                "customParameterValues": {
                },
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
                }
            }
        }
    ]
}
