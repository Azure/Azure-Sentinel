{
    "$schema":  "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion":  "1.0.0.0",
    "metadata":  {
        "comments": "Get Trackers data the Microsoft Sentinels Incident based on MDTI Trackers data.",
        "title":  "MDTI-Data-Trackers",
        "description":  "This logic app automatically retrieves and enriches incident indicators generated by Sentinel by leveraging data from the MDTI tracker endpoint.",
        "prerequisites":  "This playbook inherits API connections created and established within a base playbook. Ensure you have deployed [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) prior to deploying this playbook. If you have trouble accessing your account or your credentials contact your account representative or (mdtidiscussion[@]microsoft.com).",
        "postDeployment":  [ "After deploying the playbook, you must authorize the connections leveraged.",
            "1. Visit the playbook resource.",
            "2. Under 'Development Tools' (located on the left), click 'API Connections'.",
            "3. Ensure each connection has been authorized.",
            "**Note: If you've deployed the [MDTI-Base](https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Base/azuredeploy.json) playbook, you will only need to authorize the Microsoft Sentinel connection.**"
        ],
        "prerequisitesDeployTemplateFile":  "",
        "lastUpdateTime":  "2023-04-09T00:00:00.000Z",
        "entities":  [
        ],
        "tags":  [
        ],
        "support":  {
            "tier":  "Microsoft",
            "armtemplate":  "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author":  {
            "name":  "Sean Wasonga, Microsoft"
        }
    },
    "parameters":  {
        "PlaybookName":  {
            "defaultValue":  "MDTI-Data-Trackers",
            "type":  "string"
        }
    },
    "variables":  {
        "MicrosoftSentinelConnectionName":  "[concat('azursentinel-', parameters('PlaybookName'))]"
    },
    "resources":  [
        {
 "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[variables('MicrosoftSentinelConnectionName')]",
        "location": "[resourceGroup().location]",
            "properties":  {
 "api": {
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
            }
 }
    },{
"type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI"
            },
	    "dependsOn": [
            "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
        ],
            "properties": {
                "state":  "Enabled",
                "definition":  {
                    "$schema":  "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion":  "1.0.0.0",
                    "parameters":  {
                        "$connections":  {
                            "defaultValue":  {
                            },
                            "type":  "Object"
                        }
                    },
                    "triggers":  {
                        "When_Azure_Sentinel_incident_creation_rule_was_triggered":  {
                            "type":  "ApiConnectionWebhook",
                            "inputs":  {
                                "body":  {
                                    "callback_url":  "@{listCallbackUrl()}"
                                },
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path":  "/incident-creation"
                            }
                        }
                    },
                    "actions":  {
                        "Entities_-_Get_Hosts":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/host"
                            }
                        },
                        "Entities_-_Get_IPs":  {
                            "runAfter":  {
                                "MDTI-Base":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "ApiConnection",
                            "inputs":  {
                                "body":  "@triggerBody()?['object']?['properties']?['relatedEntities']",
                                "host":  {
                                    "connection":  {
                                        "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method":  "post",
                                "path":  "/entities/ip"
                            }
                        },
                        "For_each_Host":  {
                            "foreach":  "@body('Entities_-_Get_Hosts')?['Hosts']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)_4":  {
                                    "runAfter":  {
                                        "Condition":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003eTrackers for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}\u003cbr\u003e\n@{variables('Domain_comment')}\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Condition":  {
                                    "actions":  {
                                        "Create_Trackers_for_Host_HtmlTable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Table",
                                            "inputs":  {
                                                "format":  "HTML",
                                                "from":  "@variables('result_output_host')"
                                            }
                                        },
                                        "Set_domain_comment":  {
                                            "runAfter":  {
                                                "Create_Trackers_for_Host_HtmlTable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "Domain_comment",
                                                "value":  "@body('Create_Trackers_for_Host_HtmlTable')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "For_each":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_domain_comment_empty":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "Domain_comment",
                                                    "value":  "No results found."
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "greater":  [
                                                    "@length(variables('result_output_host'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each":  {
                                    "foreach":  "@body('Parse_results_from_Get_request_for_Trackers_for_Host')?['value']",
                                    "actions":  {
                                        "Append_to_array_variable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "result_output_host",
                                                "value":  {
                                                    "First Seen":  "@{items('For_each')?['firstSeenDateTime']}",
                                                    "Hostname":  "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}",
                                                    "Type":  "@{items('For_each')?['kind']}",
                                                    "Value":  "@{items('For_each')?['value']}",
                                                    "last Seen":  "@{items('For_each')?['lastSeenDateTime']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_results_from_Get_request_for_Trackers_for_Host":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_results_from_Get_request_for_Trackers_for_Host":  {
                                    "runAfter":  {
                                        "Trackers_for_Hostname":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Trackers_for_Hostname')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.context":  {
                                                    "type":  "string"
                                                },
                                                "@@odata.count":  {
                                                    "type":  "integer"
                                                },
                                                "@@odata.nextLink":  {
                                                    "type":  "string"
                                                },
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "firstSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "host":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "kind":  {
                                                                "type":  "string"
                                                            },
                                                            "lastSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "value":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "kind",
                                                            "value",
                                                            "host"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Set_variable":  {
                                    "runAfter":  {
                                        "Add_comment_to_incident_(V3)_4":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "result_output_host",
                                        "value":  [
                                        ]
                                    }
                                },
                                "Trackers_for_Hostname":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "audience":  "@body('MDTI-Base')?['resource']",
                                            "clientId":  "@body('MDTI-Base')?['clientId']",
                                            "secret":  "@body('MDTI-Base')?['clientSecret']",
                                            "tenant":  "@body('MDTI-Base')?['tenantId']",
                                            "type":  "ActiveDirectoryOAuth"
                                        },
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/trackers?$count=true"
                                    }
                                }
                            },
                            "runAfter":  {
                                "intialize_domain_comment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        },
                        "For_each_IP_Address":  {
                            "foreach":  "@body('Entities_-_Get_IPs')?['IPs']",
                            "actions":  {
                                "Add_comment_to_incident_(V3)":  {
                                    "runAfter":  {
                                        "Condition_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ApiConnection",
                                    "inputs":  {
                                        "body":  {
                                            "incidentArmId":  "@triggerBody()?['object']?['id']",
                                            "message":  "\u003cp\u003eTrackers for .@{items('For_each_IP_Address')?['Address']}\u003cbr\u003e\n@{variables('IPcomment')} \u0026nbsp;\u003c/p\u003e"
                                        },
                                        "host":  {
                                            "connection":  {
                                                "name":  "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method":  "post",
                                        "path":  "/Incidents/Comment"
                                    }
                                },
                                "Condition_2":  {
                                    "actions":  {
                                        "Create_Trackers_for_IP_address_HtmlTable":  {
                                            "runAfter":  {
                                            },
                                            "type":  "Table",
                                            "inputs":  {
                                                "format":  "HTML",
                                                "from":  "@variables('result_output_ip')"
                                            }
                                        },
                                        "Set_Ip_Comment":  {
                                            "runAfter":  {
                                                "Create_Trackers_for_IP_address_HtmlTable":  [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type":  "SetVariable",
                                            "inputs":  {
                                                "name":  "IPcomment",
                                                "value":  "@body('Create_Trackers_for_IP_address_HtmlTable')"
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "For_each_2":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "else":  {
                                        "actions":  {
                                            "Set_variable_2":  {
                                                "runAfter":  {
                                                },
                                                "type":  "SetVariable",
                                                "inputs":  {
                                                    "name":  "IPcomment",
                                                    "value":  "No results found"
                                                }
                                            }
                                        }
                                    },
                                    "expression":  {
                                        "and":  [
                                            {
                                                "greater":  [
                                                    "@length(variables('result_output_ip'))",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type":  "If"
                                },
                                "For_each_2":  {
                                    "foreach":  "@body('Parse_results_from_Get_request_for_Trackers_for_IP_Address')?['value']",
                                    "actions":  {
                                        "Append_to_array_variable_2":  {
                                            "runAfter":  {
                                            },
                                            "type":  "AppendToArrayVariable",
                                            "inputs":  {
                                                "name":  "result_output_ip",
                                                "value":  {
                                                    "First Seen":  "@{items('For_each_2')?['firstSeenDateTime']}",
                                                    "IP Address":  "@{items('For_each_2')?['host']?['id']}",
                                                    "Type":  "@{items('For_each_2')?['kind']}",
                                                    "Value":  "@{items('For_each_2')?['value']}",
                                                    "last Seen":  "@{items('For_each_2')?['lastSeenDateTime']}"
                                                }
                                            }
                                        }
                                    },
                                    "runAfter":  {
                                        "Parse_results_from_Get_request_for_Trackers_for_IP_Address":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "Foreach"
                                },
                                "Parse_results_from_Get_request_for_Trackers_for_IP_Address":  {
                                    "runAfter":  {
                                        "Trackers_for_IP_Address":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "ParseJson",
                                    "inputs":  {
                                        "content":  "@body('Trackers_for_IP_Address')",
                                        "schema":  {
                                            "properties":  {
                                                "@@odata.context":  {
                                                    "type":  "string"
                                                },
                                                "@@odata.count":  {
                                                    "type":  "integer"
                                                },
                                                "value":  {
                                                    "items":  {
                                                        "properties":  {
                                                            "firstSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "host":  {
                                                                "properties":  {
                                                                    "id":  {
                                                                        "type":  "string"
                                                                    }
                                                                },
                                                                "type":  "object"
                                                            },
                                                            "id":  {
                                                                "type":  "string"
                                                            },
                                                            "kind":  {
                                                                "type":  "string"
                                                            },
                                                            "lastSeenDateTime":  {
                                                                "type":  "string"
                                                            },
                                                            "value":  {
                                                                "type":  "string"
                                                            }
                                                        },
                                                        "required":  [
                                                            "id",
                                                            "firstSeenDateTime",
                                                            "lastSeenDateTime",
                                                            "kind",
                                                            "value",
                                                            "host"
                                                        ],
                                                        "type":  "object"
                                                    },
                                                    "type":  "array"
                                                }
                                            },
                                            "type":  "object"
                                        }
                                    }
                                },
                                "Reset_IP_variable":  {
                                    "runAfter":  {
                                        "Add_comment_to_incident_(V3)":  [
                                            "Succeeded"
                                        ]
                                    },
                                    "type":  "SetVariable",
                                    "inputs":  {
                                        "name":  "result_output_ip",
                                        "value":  [
                                        ]
                                    }
                                },
                                "Trackers_for_IP_Address":  {
                                    "runAfter":  {
                                    },
                                    "type":  "Http",
                                    "inputs":  {
                                        "authentication":  {
                                            "audience":  "@body('MDTI-Base')?['resource']",
                                            "clientId":  "@body('MDTI-Base')?['clientId']",
                                            "secret":  "@body('MDTI-Base')?['clientSecret']",
                                            "tenant":  "@body('MDTI-Base')?['tenantId']",
                                            "type":  "ActiveDirectoryOAuth"
                                        },
                                        "headers":  {
                                            "Content-Type":  "application/json"
                                        },
                                        "method":  "GET",
                                        "uri":  "https://@{body('MDTI-Base')?['MDTI-BaseUrl']}/@{body('MDTI-Base')?['Api-Version']}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/trackers?$count=true"
                                    }
                                }
                            },
                            "runAfter":  {
                                "Initializa_IP_Comment":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "Foreach",
                            "runtimeConfiguration":  {
                                "concurrency":  {
                                    "repetitions":  1
                                }
                            }
                        },
                        "Init_Result_Host":  {
                            "runAfter":  {
                                "Entities_-_Get_Hosts":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "result_output_host",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Init_Result_IP":  {
                            "runAfter":  {
                                "Entities_-_Get_IPs":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "result_output_ip",
                                        "type":  "array"
                                    }
                                ]
                            }
                        },
                        "Initializa_IP_Comment":  {
                            "runAfter":  {
                                "Init_Result_IP":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "IPcomment",
                                        "type":  "string"
                                    }
                                ]
                            }
                        },
                        "MDTI-Base":  {
                            "runAfter":  {
                            },
                            "type":  "Workflow",
                            "inputs":  {
                                "host":  {
                                    "triggerName":  "manual",
                                    "workflow":  {
                                        "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Logic/workflows/MDTI-Base')]"
                                    }
                                }
                            }
                        },
                        "intialize_domain_comment":  {
                            "runAfter":  {
                                "Init_Result_Host":  [
                                    "Succeeded"
                                ]
                            },
                            "type":  "InitializeVariable",
                            "inputs":  {
                                "variables":  [
                                    {
                                        "name":  "Domain_comment",
                                        "type":  "string"
                                    }
                                ]
                            }
                        }
                    }
                },
               "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                            	"connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                            	"id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                        }
                        }
                    }
                }
            }
        }
    ]
}