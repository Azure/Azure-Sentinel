{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Microsoft Defender Threat Intelligence"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "workbook1-name": {
      "type": "string",
      "defaultValue": "Threat Intelligence",
      "minLength": 1,
      "metadata": {
        "description": "Name for the workbook"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Microsoft Defender Threat Intelligence",
    "_solutionVersion": "3.0.2",
    "solutionId": "azuresentinel.azure-sentinel-solution-microsoftdefenderthreatint",
    "_solutionId": "[variables('solutionId')]",
    "MDTI-Automated-Triage": "MDTI-Automated-Triage",
    "_MDTI-Automated-Triage": "[variables('MDTI-Automated-Triage')]",
    "TemplateEmptyArray": "[json('[]')]",
    "playbookVersion1": "1.0",
    "playbookContentId1": "MDTI-Automated-Triage",
    "_playbookContentId1": "[variables('playbookContentId1')]",
    "playbookId1": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId1'))]",
    "playbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId1'))))]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "_playbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId1'),'-', variables('playbookVersion1'))))]",
    "MDTI-Data-Cookies": "MDTI-Data-Cookies",
    "_MDTI-Data-Cookies": "[variables('MDTI-Data-Cookies')]",
    "playbookVersion2": "1.0",
    "playbookContentId2": "MDTI-Data-Cookies",
    "_playbookContentId2": "[variables('playbookContentId2')]",
    "playbookId2": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId2'))]",
    "playbookTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId2'))))]",
    "_playbookcontentProductId2": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId2'),'-', variables('playbookVersion2'))))]",
    "MDTI-Data-WebComponents": "MDTI-Data-WebComponents",
    "_MDTI-Data-WebComponents": "[variables('MDTI-Data-WebComponents')]",
    "playbookVersion3": "1.0",
    "playbookContentId3": "MDTI-Data-WebComponents",
    "_playbookContentId3": "[variables('playbookContentId3')]",
    "playbookId3": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId3'))]",
    "playbookTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId3'))))]",
    "_playbookcontentProductId3": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId3'),'-', variables('playbookVersion3'))))]",
    "MDTI-Intel-Reputation": "MDTI-Intel-Reputation",
    "_MDTI-Intel-Reputation": "[variables('MDTI-Intel-Reputation')]",
    "playbookVersion4": "1.0",
    "playbookContentId4": "MDTI-Intel-Reputation",
    "_playbookContentId4": "[variables('playbookContentId4')]",
    "playbookId4": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId4'))]",
    "playbookTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId4'))))]",
    "_playbookcontentProductId4": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId4'),'-', variables('playbookVersion4'))))]",
    "MDTI-PassiveDns": "MDTI-PassiveDns",
    "_MDTI-PassiveDns": "[variables('MDTI-PassiveDns')]",
    "playbookVersion5": "1.0",
    "playbookContentId5": "MDTI-PassiveDns",
    "_playbookContentId5": "[variables('playbookContentId5')]",
    "playbookId5": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId5'))]",
    "playbookTemplateSpecName5": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId5'))))]",
    "_playbookcontentProductId5": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId5'),'-', variables('playbookVersion5'))))]",
    "MDTI-PassiveDnsReverse": "MDTI-PassiveDnsReverse",
    "_MDTI-PassiveDnsReverse": "[variables('MDTI-PassiveDnsReverse')]",
    "playbookVersion6": "1.0",
    "playbookContentId6": "MDTI-PassiveDnsReverse",
    "_playbookContentId6": "[variables('playbookContentId6')]",
    "playbookId6": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId6'))]",
    "playbookTemplateSpecName6": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId6'))))]",
    "_playbookcontentProductId6": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId6'),'-', variables('playbookVersion6'))))]",
    "MDTI-Trackers": "MDTI-Trackers",
    "_MDTI-Trackers": "[variables('MDTI-Trackers')]",
    "playbookVersion7": "1.0",
    "playbookContentId7": "MDTI-Trackers",
    "_playbookContentId7": "[variables('playbookContentId7')]",
    "playbookId7": "[resourceId('Microsoft.Logic/workflows', variables('playbookContentId7'))]",
    "playbookTemplateSpecName7": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pl-',uniquestring(variables('_playbookContentId7'))))]",
    "_playbookcontentProductId7": "[concat(take(variables('_solutionId'),50),'-','pl','-', uniqueString(concat(variables('_solutionId'),'-','Playbook','-',variables('_playbookContentId7'),'-', variables('playbookVersion7'))))]",
    "workbookVersion1": "1.0.0",
    "workbookContentId1": "MicrosoftThreatIntelligenceWorkbook",
    "workbookId1": "[resourceId('Microsoft.Insights/workbooks', variables('workbookContentId1'))]",
    "workbookTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-wb-',uniquestring(variables('_workbookContentId1'))))]",
    "_workbookContentId1": "[variables('workbookContentId1')]",
    "_workbookcontentProductId1": "[concat(take(variables('_solutionId'),50),'-','wb','-', uniqueString(concat(variables('_solutionId'),'-','Workbook','-',variables('_workbookContentId1'),'-', variables('workbookVersion1'))))]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Automated-Triage Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion1')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Automated-Triage",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "runAfter": {
                        "Init_Classification_Bit": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "runAfter": {
                        "Init_Classification_Bit": [
                          "Succeeded"
                        ]
                      },
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Create_Host_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\nClassification: @{body('Get_Reputation_for_host')?['classification']} (@{body('Get_Reputation_for_host')?['score']})<br>\n@{body('Create_Host_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Append_host_classification": {
                          "runAfter": {
                            "Get_Reputation_for_host": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "classification_bit",
                            "value": "@body('Get_Reputation_for_host')?['classification']"
                          }
                        },
                        "Create_Host_HTML_table": {
                          "runAfter": {
                            "Set_host_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_host')",
                            "format": "HTML"
                          }
                        },
                        "Get_Reputation_for_host": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/reputation",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Reset_host_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        },
                        "Set_host_variable": {
                          "runAfter": {
                            "Append_host_classification": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "@body('Get_Reputation_for_host')?['rules']"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Create_IP_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Reputation: @{items('For_each_IP_Address')?['Address']}<br>\nClassification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br>\n@{body('Create_IP_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Append_ip_classification": {
                          "runAfter": {
                            "Get_reputation": [
                              "Succeeded"
                            ]
                          },
                          "type": "AppendToArrayVariable",
                          "inputs": {
                            "name": "classification_bit",
                            "value": "@body('Get_reputation')?['classification']"
                          }
                        },
                        "Create_IP_HTML_table": {
                          "runAfter": {
                            "Set_IP_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_ip')",
                            "format": "HTML"
                          }
                        },
                        "Get_reputation": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/reputation",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Reset_IP_Variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        },
                        "Set_IP_variable": {
                          "runAfter": {
                            "Append_ip_classification": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "@body('Get_reputation')?['rules']"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Init_Classification_Bit": {
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "classification_bit",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "Malicious_or_Suspicious": {
                      "actions": {
                        "Condition_2": {
                          "actions": {
                            "Update_incident": {
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "body": {
                                  "incidentArmId": "@triggerBody()?['object']?['id']",
                                  "tagsToAdd": {
                                    "TagsToAdd": [
                                      {
                                        "Tag": "MDTI Malicious"
                                      }
                                    ]
                                  },
                                  "ownerAction": "Unassign",
                                  "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                  "severity": "High",
                                  "status": "Active"
                                },
                                "path": "/Incidents"
                              }
                            }
                          },
                          "else": {
                            "actions": {
                              "Update_incident_2": {
                                "type": "ApiConnection",
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                  },
                                  "method": "put",
                                  "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "tagsToAdd": {
                                      "TagsToAdd": [
                                        {
                                          "Tag": "MDTI Suspicious"
                                        }
                                      ]
                                    },
                                    "ownerAction": "Unassign",
                                    "owner": "@triggerBody()?['object']?['properties']?['owner']?['objectId']",
                                    "severity": "Medium",
                                    "status": "Active"
                                  },
                                  "path": "/Incidents"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "contains": [
                                  "@variables('classification_bit')",
                                  "malicious"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      },
                      "runAfter": {
                        "For_each_Host": [
                          "Succeeded"
                        ],
                        "For_each_IP_Address": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "or": [
                          {
                            "contains": [
                              "@variables('classification_bit')",
                              "malicious"
                            ]
                          },
                          {
                            "contains": [
                              "@variables('classification_bit')",
                              "suspicious"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Automated-Triage",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId1'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId1')]",
                "contentId": "[variables('_playbookContentId1')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Perform automated triage actions on the Microsoft Sentinels Incident based on MDTI Reputation data.",
            "title": "MDTI-Automated-Triage",
            "description": "This playbook uses the MDTI Reputation data to automatically enrich incidents generated by Microsoft Sentinel. Indicators from an incident will be evaluated with MDTI reputation data. If any indicators are labeled as 'suspicious', the incident will be tagged as such and its severity will be marked as 'medium'. If any indicators are labeled as 'malicious', the incident will be tagged as such and its severity will be marked as 'high'. Regardless of the reputation state, comments will be added to the incident outlining the reputation details with links to further information if applicable.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook",
              "Automated Triage"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Contributor Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Automated-Triage/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Automated Triage",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId1')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Automated-Triage",
        "contentProductId": "[variables('_playbookcontentProductId1')]",
        "id": "[variables('_playbookcontentProductId1')]",
        "version": "[variables('playbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName2')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Data-Cookies Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion2')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Data-Cookies",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_4": {
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Cookies for Indicator: @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br>\n@{variables('Domain_comment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition": {
                          "actions": {
                            "Create_Cookies_HtmlTable": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_host')",
                                "format": "HTML"
                              }
                            },
                            "Set_domain_comment": {
                              "runAfter": {
                                "Create_Cookies_HtmlTable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Domain_comment",
                                "value": "@body('Create_Cookies_HtmlTable')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_domain_comment_empty": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Domain_comment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_host'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Cookies_by_Hostname": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/cookies?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "For_each": {
                          "foreach": "@body('Parse_results_from_Get_request_for_Cookies')?['value']",
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_host",
                                "value": {
                                  "First": "@{items('For_each')?['firstSeenDateTime']}",
                                  "Last": "@{items('For_each')?['lastSeenDateTime']}",
                                  "Name": "@{items('For_each')?['name']}",
                                  "domain": "@{items('For_each')?['domain']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_Cookies": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_Cookies": {
                          "runAfter": {
                            "Cookies_by_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Cookies_by_Hostname')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "domain": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "host": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "domain",
                                      "name",
                                      "host"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Set_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "intialize_domain_comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Condition_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Cookies for Indicator: @{items('For_each_IP_Address')?['Address']}<br>\n@{variables('IPcomment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition_2": {
                          "actions": {
                            "Cookies_for_IP_address_Results_HTML_Table": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_ip')",
                                "format": "HTML"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Cookies_for_IP_address_Results_HTML_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IPcomment",
                                "value": "@body('Cookies_for_IP_address_Results_HTML_Table')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_2": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_variable_3": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IPcomment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_ip'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Cookies_by_IP_Address": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/cookies?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "For_each_2": {
                          "foreach": "@body('Parse_results_from_Get_request_for_Cookies_')?['value']",
                          "actions": {
                            "Append_to_array_variable_2": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_ip",
                                "value": {
                                  "First": "@{items('For_each_2')?['firstSeenDateTime']}",
                                  "Last": "@{items('For_each_2')?['lastSeenDateTime']}",
                                  "Name": "@{items('For_each_2')?['name']}",
                                  "domain": "@{items('For_each_2')?['domain']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_Cookies_": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_Cookies_": {
                          "runAfter": {
                            "Cookies_by_IP_Address": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Cookies_by_IP_Address')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "domain": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "host": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "domain",
                                      "name",
                                      "host"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Reset_IP_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Initializa_IP_Comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initializa_IP_Comment": {
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPcomment",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "intialize_domain_comment": {
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Domain_comment",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelTemplateName": "MDTI-Data-Cookies",
                "hidden-SentinelTemplateVersion": "1.0",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId2'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId2')]",
                "contentId": "[variables('_playbookContentId2')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion2')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Internet data.",
            "title": "MDTI-Data-Cookies",
            "description": "This playbook uses the MDTI Components data to automatically enrich incidents generated by Microsoft Sentinel. Leverage this playbook in order to enrich your incidents with [Cookies](https://learn.microsoft.com/en-us/defender/threat-intelligence/data-sets#cookies) data hosted by the indicators found within the incident. These values sometimes contain a state for the application or little bits of tracking data. Defender TI highlights and indexes cookie names observed when crawling a website and allows users to dig into everywhere we have observed specific cookie names across its crawling and data collection.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Data-Cookies/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Data Cookies",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId2')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Data-Cookies",
        "contentProductId": "[variables('_playbookcontentProductId2')]",
        "id": "[variables('_playbookcontentProductId2')]",
        "version": "[variables('playbookVersion2')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName3')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Data-WebComponents Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion3')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Data-WebComponents",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Create_Host_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Web Components for Indicator : @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\n@{body('Create_Host_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Create_Host_HTML_table": {
                          "runAfter": {
                            "For_each_host_component": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_host')",
                            "format": "HTML"
                          }
                        },
                        "For_each_host_component": {
                          "foreach": "@body('Parse_host_components')",
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_host",
                                "value": {
                                  "Category": "@items('For_each_host_component')['category']",
                                  "LastSeenDateTime": "@items('For_each_host_component')['lastSeenDateTime']",
                                  "Name": "@items('For_each_host_component')['name']",
                                  "Version": "@items('For_each_host_component')['version']"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Set_Result_Host": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_components_for_host": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/components",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "queries": {
                              "$count": "true",
                              "$top": "25"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Parse_host_components": {
                          "runAfter": {
                            "Get_components_for_host": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_components_for_host')?['value']",
                            "schema": {
                              "items": {
                                "properties": {
                                  "category": {
                                    "type": "string"
                                  },
                                  "firstSeenDateTime": {
                                    "type": "string"
                                  },
                                  "host": {
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "lastSeenDateTime": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "firstSeenDateTime",
                                  "lastSeenDateTime",
                                  "name",
                                  "version",
                                  "category",
                                  "host"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          }
                        },
                        "Set_Result_Host": {
                          "runAfter": {
                            "Parse_host_components": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Create_IP_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Web Components for Indicator: @{items('For_each_IP_Address')?['Address']}<br>\n@{body('Create_IP_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Create_IP_HTML_table": {
                          "runAfter": {
                            "For_each_component": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_ip')",
                            "format": "HTML"
                          }
                        },
                        "For_each_component": {
                          "foreach": "@body('Parse_components')",
                          "actions": {
                            "Append_to_Result_IP": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_ip",
                                "value": {
                                  "Category": "@items('For_each_component')?['category']",
                                  "LastSeenDateTime": "@items('For_each_component')?['lastSeenDateTime']",
                                  "Name": "@items('For_each_component')?['name']",
                                  "Version": "@items('For_each_component')?['version']"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Set_Result_IP": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Get_components": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/components",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "queries": {
                              "$count": "true",
                              "$top": "25"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Parse_components": {
                          "runAfter": {
                            "Get_components": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Get_components')?['value']",
                            "schema": {
                              "items": {
                                "properties": {
                                  "category": {
                                    "type": "string"
                                  },
                                  "firstSeenDateTime": {
                                    "type": "string"
                                  },
                                  "host": {
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "id": {
                                    "type": "string"
                                  },
                                  "lastSeenDateTime": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "version": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "firstSeenDateTime",
                                  "lastSeenDateTime",
                                  "name",
                                  "version",
                                  "category",
                                  "host"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          }
                        },
                        "Set_Result_IP": {
                          "runAfter": {
                            "Parse_components": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Data-WebComponents",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId3'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId3')]",
                "contentId": "[variables('_playbookContentId3')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion3')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Internet data.",
            "title": "MDTI-Data-WebComponents",
            "description": "This playbook uses the MDTI Components data to automatically enrich incidents generated by Microsoft Sentinel. Leverage this playbook in order to enrich your incidents with [Webcomponents](https://learn.microsoft.com/en-us/defender/threat-intelligence/data-sets#components) data hosted by the indicators found within the incident. These components allow a user to understand the makeup of a webpage or the technology and services driving a specific piece of infrastructure. Pivoting on unique components can find actors' infrastructure or other sites that are compromised. Users can also understand if a website might be vulnerable to a specific attack or compromise based on the technologies that it is running.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Data-WebComponents/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Data WebComponents",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId3')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Data-WebComponents",
        "contentProductId": "[variables('_playbookcontentProductId3')]",
        "id": "[variables('_playbookcontentProductId3')]",
        "version": "[variables('playbookVersion3')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName4')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Intel-Reputation Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion4')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Intel-Reputation",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Create_Host_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Reputation: @{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}<br>\nClassification: @{body('Get_reputation_for_host')?['classification']} (@{body('Get_reputation_for_host')?['score']})<br>\n@{body('Create_Host_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Create_Host_HTML_table": {
                          "runAfter": {
                            "Set_host_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_host')",
                            "format": "HTML"
                          }
                        },
                        "Get_reputation_for_host": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/reputation",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            },
                            "path": "/reputation"
                          }
                        },
                        "Set_host_variable": {
                          "runAfter": {
                            "Get_reputation_for_host": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "@body('Get_reputation_for_host')?['rules']"
                          }
                        },
                        "Reset_host_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Create_IP_HTML_table": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>MDTI Reputation: @{items('For_each_IP_Address')?['Address']}<br>\nClassification: @{body('Get_reputation')?['classification']} (@{body('Get_reputation')?['score']})<br>\n@{body('Create_IP_HTML_table')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Create_IP_HTML_table": {
                          "runAfter": {
                            "Set_ip_variable": [
                              "Succeeded"
                            ]
                          },
                          "type": "Table",
                          "inputs": {
                            "from": "@variables('result_output_ip')",
                            "format": "HTML"
                          }
                        },
                        "Get_reputation": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/reputation",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            },
                            "path": "/reputation"
                          }
                        },
                        "Set_ip_variable": {
                          "runAfter": {
                            "Get_reputation": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "@body('Get_reputation')?['rules']"
                          }
                        },
                        "Reset_IP_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach"
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Intel-Reputation",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId4'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId4')]",
                "contentId": "[variables('_playbookContentId4')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion4')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Perform automated enrichment on the Microsoft Sentinel Incidents based on MDTI Reputation data.",
            "title": "MDTI-Intel-Reputation",
            "description": "This playbook uses the MDTI API to automatically enrich incidents generated by Microsoft Sentinel. Reputation information provides analyst with a decision as to whether an indicator is considered benign, suspicious or malicious. Analysts can leverage this playbook in order to enrich indicators found within an incident. Each reputation result is contained within a comment and will include detailed scoring information noting why a given indicator is considered suspicious or malicious with links back to the MDTI platform for more information.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Intel-Reputation/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Intel Reputation",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId4')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Intel-Reputation",
        "contentProductId": "[variables('_playbookcontentProductId4')]",
        "id": "[variables('_playbookcontentProductId4')]",
        "version": "[variables('playbookVersion4')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName5')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Data-PassiveDns Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion5')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Data-PassiveDns",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_4": {
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Passive DNS for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br>\n@{variables('Domain_comment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition": {
                          "actions": {
                            "Create_passiveDns_HtmlTable": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_host')",
                                "format": "HTML"
                              }
                            },
                            "Set_domain_comment": {
                              "runAfter": {
                                "Create_passiveDns_HtmlTable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Domain_comment",
                                "value": "@body('Create_passiveDns_HtmlTable')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_domain_comment_empty": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Domain_comment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_host'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each": {
                          "foreach": "@body('Parse_results_from_Get_request_for_PassiveDns')?['value']",
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_host",
                                "value": {
                                  "First seen date": "@{items('For_each')?['firstSeenDateTime']}",
                                  "Last seen date": "@{items('For_each')?['lastSeenDateTime']}",
                                  "Type": "@{items('For_each')?['recordType']}",
                                  "Value": "@{items('For_each')?['artifact']?['id']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_PassiveDns": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_PassiveDns": {
                          "runAfter": {
                            "PassiveDns_by_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('PassiveDns_by_Hostname')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "artifact": {
                                        "properties": {
                                          "@@odata.type": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "collectedDateTime": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "parentHost": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "recordType": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "collectedDateTime",
                                      "recordType",
                                      "parentHost",
                                      "artifact"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "PassiveDns_by_Hostname": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/passiveDns?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Set_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "intialize_domain_comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Condition_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Passive DNS for .@{items('For_each_IP_Address')?['Address']}<br>\n@{variables('IPcomment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition_2": {
                          "actions": {
                            "Passive_Dns_for_IP_address_Results_HTML_Table": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_ip')",
                                "format": "HTML"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Passive_Dns_for_IP_address_Results_HTML_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IPcomment",
                                "value": "@body('Passive_Dns_for_IP_address_Results_HTML_Table')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_2": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_variable_3": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IPcomment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_ip'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each_2": {
                          "foreach": "@body('Parse_results_from_Get_request_for_PassiveDns2')?['value']",
                          "actions": {
                            "Append_to_array_variable_2": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_ip",
                                "value": {
                                  "First": "@{items('For_each_2')?['firstSeenDateTime']}",
                                  "Last": "@{items('For_each_2')?['lastSeenDateTime']}",
                                  "Type": "@{items('For_each_2')?['recordType']}",
                                  "Value": "@{items('For_each_2')?['artifact']?['id']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_PassiveDns2": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_PassiveDns2": {
                          "runAfter": {
                            "PassiveDns_by_IP_Address": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('PassiveDns_by_IP_Address')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "@@odata.nextLink": {
                                  "type": "string"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "artifact": {
                                        "properties": {
                                          "@@odata.type": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "collectedDateTime": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "parentHost": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "recordType": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "collectedDateTime",
                                      "recordType",
                                      "parentHost",
                                      "artifact"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "PassiveDns_by_IP_Address": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/passiveDns?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Reset_IP_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Initializa_IP_Comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initializa_IP_Comment": {
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPcomment",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "intialize_domain_comment": {
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Domain_comment",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Data-PassiveDns",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId5'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId5')]",
                "contentId": "[variables('_playbookContentId5')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion5')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Get Passive DNS data the Microsoft Sentinels Incident based on MDTI Passive DNS data endpoint.",
            "title": "MDTI-Data-PassiveDns",
            "description": "This playbook enriches Microsoft Sentinel incidents by querying Microsoft Defender Threat Intelligence Passive DNS data for related host and IP entities.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-PassiveDns/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Data PassiveDns",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId5')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Data-PassiveDns",
        "contentProductId": "[variables('_playbookcontentProductId5')]",
        "id": "[variables('_playbookcontentProductId5')]",
        "version": "[variables('playbookVersion5')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName6')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Data-ReverseDnS Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion6')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Data-ReverseDnS",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_4": {
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Reverse Dns  for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br>\n@{variables('Domain_comment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition": {
                          "actions": {
                            "Create_PassiveDnsReverse__HtmlTable": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_host')",
                                "format": "HTML"
                              }
                            },
                            "Set_domain_comment": {
                              "runAfter": {
                                "Create_PassiveDnsReverse__HtmlTable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Domain_comment",
                                "value": "@body('Create_PassiveDnsReverse__HtmlTable')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_domain_comment_empty": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Domain_comment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_host'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each": {
                          "foreach": "@body('Parse_results_from_Get_request_for_PassiveDnsReverse_')?['value']",
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_host",
                                "value": {
                                  "Collected date": "@{items('For_each')?['collectedDateTime']}",
                                  "First seen date": "@{items('For_each')?['firstSeenDateTime']}",
                                  "Last seen date": "@{items('For_each')?['lastSeenDateTime']}",
                                  "Type": "@{items('For_each')?['recordType']}",
                                  "Value": "@{items('For_each')?['artifact']?['id']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_PassiveDnsReverse_": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_PassiveDnsReverse_": {
                          "runAfter": {
                            "PassiveDnsReverse_by_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('PassiveDnsReverse_by_Hostname')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "artifact": {
                                        "properties": {
                                          "@@odata.type": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "collectedDateTime": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "parentHost": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "recordType": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "collectedDateTime",
                                      "recordType",
                                      "parentHost",
                                      "artifact"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "PassiveDnsReverse_by_Hostname": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/passiveDnsReverse?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Set_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "intialize_domain_comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_2": {
                          "runAfter": {
                            "Condition_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Reverse Dns  for @{items('For_each_IP_Address')?['Address']}<br>\n@{variables('IPcomment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition_2": {
                          "actions": {
                            "Passive_DnsReverse_HTML_Results_Table": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_ip')",
                                "format": "HTML"
                              }
                            },
                            "Set_variable_2": {
                              "runAfter": {
                                "Passive_DnsReverse_HTML_Results_Table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IPcomment",
                                "value": "@body('Passive_DnsReverse_HTML_Results_Table')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_2": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_variable_3": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IPcomment",
                                  "value": "No Results found"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_ip'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each_2": {
                          "foreach": "@body('Parse_results_from_Get_request_for_PassiveDnsReverse2')?['value']",
                          "actions": {
                            "Append_to_array_variable_2": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_ip",
                                "value": {
                                  "Collected date": "@{items('For_each_2')?['collectedDateTime']}",
                                  "First seen date": "@{items('For_each_2')?['firstSeenDateTime']}",
                                  "Last seen date": "@{items('For_each_2')?['lastSeenDateTime']}",
                                  "Type": "@{items('For_each_2')?['recordType']}",
                                  "Value": "@{items('For_each_2')?['artifact']?['id']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_PassiveDnsReverse2": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_PassiveDnsReverse2": {
                          "runAfter": {
                            "PassiveDnsReverse__by_IP_Address": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('PassiveDnsReverse__by_IP_Address')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "@@odata.nextLink": {
                                  "type": "string"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "artifact": {
                                        "properties": {
                                          "@@odata.type": {
                                            "type": "string"
                                          },
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "collectedDateTime": {
                                        "type": "string"
                                      },
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "parentHost": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "recordType": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "collectedDateTime",
                                      "recordType",
                                      "parentHost",
                                      "artifact"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "PassiveDnsReverse__by_IP_Address": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/passiveDnsReverse?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        },
                        "Reset_IP_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Initializa_IP_Comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initializa_IP_Comment": {
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPcomment",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "intialize_domain_comment": {
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Domain_comment",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Data-ReverseDnS",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId6'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId6')]",
                "contentId": "[variables('_playbookContentId6')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion6')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Get  Reverse Dns data the Microsoft Sentinels Incident based on MDTI Passive DNS Reverse data endpoint.",
            "title": "MDTI-Data-ReverseDnS",
            "description": "This logic app automatically retrieves and enriches incident indicators generated by Microsoft Sentinel by leveraging data from the MDTI Passive DNS Reverse endpoint.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-PassiveDnsReverse/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI-Data-ReverseDnS",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId6')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Data-ReverseDnS",
        "contentProductId": "[variables('_playbookcontentProductId6')]",
        "id": "[variables('_playbookcontentProductId6')]",
        "version": "[variables('playbookVersion6')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('playbookTemplateSpecName7')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MDTI-Data-Trackers Playbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('playbookVersion7')]",
          "parameters": {
            "PlaybookName": {
              "defaultValue": "MDTI-Data-Trackers",
              "type": "string"
            },
            "MDTI-BaseUrl": {
              "type": "String",
              "defaultValue": "https://graph.microsoft.com",
              "metadata": {
                "description": "Enter MDTI API endpoint base url,  must start with https://"
              }
            },
            "Api-Version": {
              "type": "String",
              "defaultValue": "v1.0",
              "metadata": {
                "description": "Enter MDTI API version. Default is v1.0"
              }
            }
          },
          "variables": {
            "MicrosoftSentinelConnectionName": "[[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
            "connection-2": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
            "_connection-2": "[[variables('connection-2')]",
            "workspace-location-inline": "[concat('[resourceGroup().locatio', 'n]')]",
            "workspace-name": "[parameters('workspace')]",
            "workspaceResourceId": "[[resourceId('microsoft.OperationalInsights/Workspaces', variables('workspace-name'))]"
          },
          "resources": [
            {
              "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                  "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                  "contentVersion": "1.0.0.0",
                  "parameters": {
                    "$connections": {
                      "type": "Object"
                    },
                    "MDTI-BaseUrl": {
                      "defaultValue": "[[parameters('MDTI-BaseUrl')]",
                      "type": "String"
                    },
                    "Api-Version": {
                      "defaultValue": "[[parameters('Api-Version')]",
                      "type": "String"
                    }
                  },
                  "triggers": {
                    "When_Azure_Sentinel_incident_creation_rule_was_triggered": {
                      "type": "ApiConnectionWebhook",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "body": {
                          "callback_url": "@{listCallbackUrl()}"
                        },
                        "path": "/incident-creation"
                      }
                    }
                  },
                  "actions": {
                    "Entities_-_Get_Hosts": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/host"
                      }
                    },
                    "Entities_-_Get_IPs": {
                      "type": "ApiConnection",
                      "inputs": {
                        "host": {
                          "connection": {
                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                          }
                        },
                        "method": "post",
                        "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                        "path": "/entities/ip"
                      }
                    },
                    "For_each_Host": {
                      "foreach": "@body('Entities_-_Get_Hosts')?['Hosts']",
                      "actions": {
                        "Add_comment_to_incident_(V3)_4": {
                          "runAfter": {
                            "Condition": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Trackers for @{items('For_each_host')?['HostName']}.@{items('For_each_host')?['DnsDomain']}<br>\n@{variables('Domain_comment')}</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition": {
                          "actions": {
                            "Create_Trackers_for_Host_HtmlTable": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_host')",
                                "format": "HTML"
                              }
                            },
                            "Set_domain_comment": {
                              "runAfter": {
                                "Create_Trackers_for_Host_HtmlTable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "Domain_comment",
                                "value": "@body('Create_Trackers_for_Host_HtmlTable')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_domain_comment_empty": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "Domain_comment",
                                  "value": "No results found."
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_host'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each": {
                          "foreach": "@body('Parse_results_from_Get_request_for_Trackers_for_Host')?['value']",
                          "actions": {
                            "Append_to_array_variable": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_host",
                                "value": {
                                  "First Seen": "@{items('For_each')?['firstSeenDateTime']}",
                                  "Hostname": "@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}",
                                  "Type": "@{items('For_each')?['kind']}",
                                  "Value": "@{items('For_each')?['value']}",
                                  "last Seen": "@{items('For_each')?['lastSeenDateTime']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_Trackers_for_Host": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_Trackers_for_Host": {
                          "runAfter": {
                            "Trackers_for_Hostname": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Trackers_for_Hostname')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "@@odata.nextLink": {
                                  "type": "string"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "host": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "kind",
                                      "value",
                                      "host"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Set_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)_4": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_host",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        },
                        "Trackers_for_Hostname": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_Host')?['HostName']}.@{items('For_each_Host')?['DnsDomain']}')/trackers?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "intialize_domain_comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "For_each_IP_Address": {
                      "foreach": "@body('Entities_-_Get_IPs')?['IPs']",
                      "actions": {
                        "Add_comment_to_incident_(V3)": {
                          "runAfter": {
                            "Condition_2": [
                              "Succeeded"
                            ]
                          },
                          "type": "ApiConnection",
                          "inputs": {
                            "host": {
                              "connection": {
                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                              }
                            },
                            "method": "post",
                            "body": {
                              "incidentArmId": "@triggerBody()?['object']?['id']",
                              "message": "<p>Trackers for .@{items('For_each_IP_Address')?['Address']}<br>\n@{variables('IPcomment')} &nbsp;</p>"
                            },
                            "path": "/Incidents/Comment"
                          }
                        },
                        "Condition_2": {
                          "actions": {
                            "Create_Trackers_for_IP_address_HtmlTable": {
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('result_output_ip')",
                                "format": "HTML"
                              }
                            },
                            "Set_Ip_Comment": {
                              "runAfter": {
                                "Create_Trackers_for_IP_address_HtmlTable": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "IPcomment",
                                "value": "@body('Create_Trackers_for_IP_address_HtmlTable')"
                              }
                            }
                          },
                          "runAfter": {
                            "For_each_2": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_variable_2": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "IPcomment",
                                  "value": "No results found"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(variables('result_output_ip'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "For_each_2": {
                          "foreach": "@body('Parse_results_from_Get_request_for_Trackers_for_IP_Address')?['value']",
                          "actions": {
                            "Append_to_array_variable_2": {
                              "type": "AppendToArrayVariable",
                              "inputs": {
                                "name": "result_output_ip",
                                "value": {
                                  "First Seen": "@{items('For_each_2')?['firstSeenDateTime']}",
                                  "IP Address": "@{items('For_each_2')?['host']?['id']}",
                                  "Type": "@{items('For_each_2')?['kind']}",
                                  "Value": "@{items('For_each_2')?['value']}",
                                  "last Seen": "@{items('For_each_2')?['lastSeenDateTime']}"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "Parse_results_from_Get_request_for_Trackers_for_IP_Address": [
                              "Succeeded"
                            ]
                          },
                          "type": "Foreach"
                        },
                        "Parse_results_from_Get_request_for_Trackers_for_IP_Address": {
                          "runAfter": {
                            "Trackers_for_IP_Address": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Trackers_for_IP_Address')",
                            "schema": {
                              "properties": {
                                "@@odata.context": {
                                  "type": "string"
                                },
                                "@@odata.count": {
                                  "type": "integer"
                                },
                                "value": {
                                  "items": {
                                    "properties": {
                                      "firstSeenDateTime": {
                                        "type": "string"
                                      },
                                      "host": {
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "type": "object"
                                      },
                                      "id": {
                                        "type": "string"
                                      },
                                      "kind": {
                                        "type": "string"
                                      },
                                      "lastSeenDateTime": {
                                        "type": "string"
                                      },
                                      "value": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "firstSeenDateTime",
                                      "lastSeenDateTime",
                                      "kind",
                                      "value",
                                      "host"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              },
                              "type": "object"
                            }
                          }
                        },
                        "Reset_IP_variable": {
                          "runAfter": {
                            "Add_comment_to_incident_(V3)": [
                              "Succeeded"
                            ]
                          },
                          "type": "SetVariable",
                          "inputs": {
                            "name": "result_output_ip",
                            "value": "[variables('TemplateEmptyArray')]"
                          }
                        },
                        "Trackers_for_IP_Address": {
                          "type": "Http",
                          "inputs": {
                            "uri": "@{parameters('MDTI-BaseUrl')}/@{parameters('Api-Version')}/security/threatIntelligence/hosts('@{items('For_each_IP_Address')?['Address']}')/trackers?$count=true",
                            "method": "GET",
                            "headers": {
                              "Content-Type": "application/json"
                            },
                            "authentication": {
                              "type": "ManagedServiceIdentity",
                              "audience": "https://graph.microsoft.com"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Initializa_IP_Comment": [
                          "Succeeded"
                        ]
                      },
                      "type": "Foreach",
                      "runtimeConfiguration": {
                        "concurrency": {
                          "repetitions": 1
                        }
                      }
                    },
                    "Init_Result_Host": {
                      "runAfter": {
                        "Entities_-_Get_Hosts": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_host",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Init_Result_IP": {
                      "runAfter": {
                        "Entities_-_Get_IPs": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "result_output_ip",
                            "type": "array"
                          }
                        ]
                      }
                    },
                    "Initializa_IP_Comment": {
                      "runAfter": {
                        "Init_Result_IP": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "IPcomment",
                            "type": "string"
                          }
                        ]
                      }
                    },
                    "intialize_domain_comment": {
                      "runAfter": {
                        "Init_Result_Host": [
                          "Succeeded"
                        ]
                      },
                      "type": "InitializeVariable",
                      "inputs": {
                        "variables": [
                          {
                            "name": "Domain_comment",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                },
                "parameters": {
                  "$connections": {
                    "value": {
                      "azuresentinel": {
                        "connectionId": "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                        "connectionName": "[[variables('MicrosoftSentinelConnectionName')]",
                        "id": "[[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', variables('workspace-location-inline'), '/managedApis/Azuresentinel')]",
                        "connectionProperties": {
                          "authentication": {
                            "type": "ManagedServiceIdentity"
                          }
                        }
                      }
                    }
                  }
                }
              },
              "name": "[[parameters('PlaybookName')]",
              "type": "Microsoft.Logic/workflows",
              "location": "[[variables('workspace-location-inline')]",
              "tags": {
                "LogicAppsCategory": "security",
                "Source": "MDTI",
                "hidden-SentinelWorkspaceId": "[[variables('workspaceResourceId')]",
                "hidden-SentinelTemplateName": "MDTI-Data-Trackers",
                "hidden-SentinelTemplateVersion": "1.0"
              },
              "identity": {
                "type": "SystemAssigned"
              },
              "apiVersion": "2017-07-01",
              "dependsOn": [
                "[[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/connections",
              "apiVersion": "2016-06-01",
              "name": "[[variables('MicrosoftSentinelConnectionName')]",
              "location": "[[variables('workspace-location-inline')]",
              "kind": "V1",
              "properties": {
                "displayName": "[[variables('MicrosoftSentinelConnectionName')]",
                "parameterValueType": "Alternative",
                "api": {
                  "id": "[[variables('_connection-2')]"
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Playbook-', last(split(variables('playbookId7'),'/'))))]",
              "properties": {
                "parentId": "[variables('playbookId7')]",
                "contentId": "[variables('_playbookContentId7')]",
                "kind": "Playbook",
                "version": "[variables('playbookVersion7')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ],
          "metadata": {
            "comments": "Get Trackers data the Microsoft Sentinels Incident based on MDTI Trackers data.",
            "title": "MDTI-Data-Trackers",
            "description": "This logic app automatically retrieves and enriches incident indicators generated by Microsoft Sentinel by leveraging data from the MDTI tracker endpoint.",
            "prerequisites": [
              "1. Microsoft Defender Threat Intelligence (MDTI) Premium license enabled on your tenant. If you have trouble accessing your account or your credentials contact your account representative (mdtidiscussion[@]microsoft.com)",
              "2. Security Administrator, Global Administrator, or Privileged Role Administrator role in Azure AD to assign the required API permissions to the playbook's Managed Identity."
            ],
            "lastUpdateTime": "2025-09-15T00:00:00Z",
            "entities": [
              "IP",
              "Host"
            ],
            "tags": [
              "Microsoft Sentinel",
              "Microsoft Defender Threat Intelligence",
              "MDTI",
              "Threat Intelligence",
              "SOAR",
              "Playbook"
            ],
            "postDeployment": [
              "1. Assign ThreatIntelligence.Read.All Permission to Playbook's Managed Identity.",
              "2. Authorize/Configure all the connections.",
              "3. Assign Microsoft Sentinel Responder Role to playbook.",
              "4. After deployment, attach this playbook to an **automation rule** and map IP and Host entities so it runs when the incident is created.",
              "<br/>[click here for detailed steps](https://github.com/Azure/Azure-Sentinel/blob/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/Playbooks/MDTI-Trackers/readme.md)"
            ],
            "releaseNotes": [
              {
                "version": "1.1.0",
                "title": "MDTI Data Trackers",
                "notes": [
                  "Add support for authentication using Managed Identity"
                ]
              }
            ]
          }
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_playbookContentId7')]",
        "contentKind": "Playbook",
        "displayName": "MDTI-Data-Trackers",
        "contentProductId": "[variables('_playbookcontentProductId7')]",
        "id": "[variables('_playbookcontentProductId7')]",
        "version": "[variables('playbookVersion7')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('workbookTemplateSpecName1')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "MicrosoftThreatIntelligence Workbook with template version 3.0.2",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('workbookVersion1')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Insights/workbooks",
              "name": "[variables('workbookContentId1')]",
              "location": "[parameters('workspace-location')]",
              "kind": "shared",
              "apiVersion": "2021-08-01",
              "metadata": {
                "description": "Gain insights into threat indicators ingestion and search for indicators at scale across Microsoft 1st Party, 3rd Party, On-Premises, Hybrid, and Multi-Cloud Workloads. Indicators Search facilitates a simple interface for finding IP, File, Hash, Sender and more across your data. Seamless pivots to correlate indicators with Microsoft Sentinel: Incidents to make your threat intelligence actionable."
              },
              "properties": {
                "displayName": "[parameters('workbook1-name')]",
                "serializedData": "{\"version\":\"Notebook/1.0\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"a4b4e975-fa7c-46a3-b669-850aacc88134\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Help\",\"label\":\"🔎 Guide\",\"type\":10,\"isRequired\":true,\"typeSettings\":{\"showDefault\":false},\"jsonData\":\"[\\r\\n    {\\\"value\\\": \\\"Yes\\\", \\\"label\\\": \\\"Yes\\\", \\\"selected\\\":true},\\r\\n    {\\\"value\\\": \\\"No\\\", \\\"label\\\": \\\"No\\\"}\\r\\n]\"},{\"version\":\"KqlParameterItem/1.0\",\"name\":\"DefaultSubscription_Internal\",\"type\":1,\"isRequired\":true,\"query\":\"where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| take 1\\r\\n| project subscriptionId\",\"crossComponentResources\":[\"value::selected\"],\"isHiddenWhenLocked\":true,\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"id\":\"314d02bf-4691-43fa-af59-d67073c8b8fa\"},{\"id\":\"e6ded9a1-a83c-4762-938d-5bf8ff3d3d38\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Subscription\",\"type\":6,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"summarize by subscriptionId\\r\\n| project value = strcat(\\\"/subscriptions/\\\", subscriptionId), label = subscriptionId, selected = iff(subscriptionId =~ '{DefaultSubscription_Internal}', true, false)\",\"crossComponentResources\":[\"value::all\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":[\"value::all\"]},{\"id\":\"e3225ed0-6210-40a1-b2d0-66e42ffa71d6\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Workspace\",\"type\":5,\"isRequired\":true,\"multiSelect\":true,\"quote\":\"'\",\"delimiter\":\",\",\"query\":\"resources\\r\\n| where type =~ 'microsoft.operationalinsights/workspaces'\\r\\n| order by name asc\\r\\n| summarize Selected = makelist(id, 10), All = makelist(id, 1000)\\r\\n| mvexpand All limit 100\\r\\n| project value = tostring(All), label = tostring(All), selected = iff(Selected contains All, true, false)\",\"crossComponentResources\":[\"{Subscription}\"],\"typeSettings\":{\"additionalResourceOptions\":[\"value::all\"],\"showDefault\":false},\"queryType\":1,\"resourceType\":\"microsoft.resourcegraph/resources\",\"value\":[\"value::all\"]},{\"id\":\"15b2c181-7397-43c1-900a-28e175ae8a6f\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"TimeRange\",\"type\":4,\"isRequired\":true,\"value\":{\"durationMs\":86400000},\"typeSettings\":{\"selectableValues\":[{\"durationMs\":86400000},{\"durationMs\":172800000},{\"durationMs\":604800000}],\"allowCustom\":true},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"name\":\"Parameter Selectors\"},{\"type\":1,\"content\":{\"json\":\"# [Threat Intelligence](https://docs.microsoft.com/azure/sentinel/understand-threat-intelligence)\\n---\\n\\nWithin a Security Information and Event Management (SIEM) solution like Microsoft Sentinel, the most commonly used form of CTI is threat indicators, also known as Indicators of Compromise or IoCs. Threat indicators are data that associate observed artifacts such as URLs, file hashes, or IP addresses with known threat activity such as phishing, botnets, or malware. This form of threat intelligence is often called tactical threat intelligence because it can be applied to security products and automation in large scale to detect potential threats to an organization and protect against them. In Microsoft Sentinel, you can use threat indicators to help detect malicious activity observed in your environment and provide context to security investigators to help inform response decisions. <br>\\n\"},\"conditionalVisibility\":{\"parameterName\":\"Help\",\"comparison\":\"isEqualTo\",\"value\":\"Yes\"},\"customWidth\":\"79\",\"name\":\"Workbook Overview\"},{\"type\":1,\"content\":{\"json\":\"![Image Name](https://azure.microsoft.com/svghandler/azure-sentinel?width=600&height=315) \"},\"conditionalVisibility\":{\"parameterName\":\"Help\",\"comparison\":\"isEqualTo\",\"value\":\"Yes\"},\"customWidth\":\"20\",\"name\":\"Microsoft Sentinel Logo\"},{\"type\":11,\"content\":{\"version\":\"LinkItem/1.0\",\"style\":\"tabs\",\"links\":[{\"id\":\"18c690d7-7cbd-46c1-b677-1f72692d40cd\",\"cellValue\":\"TAB\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Indicators Ingestion\",\"subTarget\":\"Indicators\",\"preText\":\"Alert rules\",\"style\":\"link\"},{\"id\":\"f88dcf47-af98-4684-9de3-1ee5f48f68fc\",\"cellValue\":\"TAB\",\"linkTarget\":\"parameter\",\"linkLabel\":\"Indicators Search\",\"subTarget\":\"Observed\",\"style\":\"link\"}]},\"name\":\"Tabs link\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Select all indicators from the table\\r\\n// Create a new column to identify the type of indicator, IP, Domain, URL, File, or Other\\r\\n| extend IndicatorType = iif(isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkIP) or isnotempty(NetworkSourceIP) or isnotempty(NetworkCidrBlock), \\\"IP\\\",\\r\\n                        iff(isnotempty(Url), \\\"URL\\\",\\r\\n                        iff(isnotempty(EmailRecipient) or isnotempty(EmailSenderAddress), \\\"Email\\\",\\r\\n                        iff(isnotempty(FileHashValue), \\\"File\\\",\\r\\n                         iff(isnotempty(DomainName) or isnotempty(EmailSourceDomain), \\\"Domain\\\",\\r\\n                        \\\"Other\\\")))))\\r\\n// Summarize and order the data, then render the chart\\r\\n| summarize CountOfIndicators = count() by IndicatorType, bin(TimeGenerated, 1h)\\r\\n| order by CountOfIndicators desc \\r\\n| render barchart kind=stacked \",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators Imported into Sentinel by Indicator Type and Date\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 1\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Select all indicators from the table\\r\\n// Summarize and order the data, then render the chart\\r\\n| summarize CountOfIndicators = count() by SourceSystem, bin(TimeGenerated, 1h)\\r\\n| render barchart kind=stacked\",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators Imported into Sentinel by Indicator Provider and Date\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 3\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Select all indicators from the table\\r\\n| where TimeGenerated < now()\\r\\n// Select only indicators that have not expired\\r\\n    and ExpirationDateTime > now()\\r\\n// Select only indicators that are marked active\\r\\n    and Active == true\\r\\n// Select only the most recently ingested copy of an indicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n// Create a new column to identify the type of indicator, IP, Domain, URL, File, or Other\\r\\n| extend IndicatorType = iif(isnotempty(EmailSourceIpAddress) or isnotempty(NetworkDestinationIP) or isnotempty(NetworkIP) or isnotempty(NetworkSourceIP) or isnotempty(NetworkCidrBlock), \\\"IP\\\",\\r\\n                        iff(isnotempty(Url), \\\"URL\\\",\\r\\n                        iff(isnotempty(EmailRecipient) or isnotempty(EmailSenderAddress), \\\"Email\\\",\\r\\n                        iff(isnotempty(FileHashValue), \\\"File\\\",\\r\\n                         iff(isnotempty(DomainName) or isnotempty(EmailSourceDomain), \\\"Domain\\\",\\r\\n                        \\\"Other\\\")))))\\r\\n// Summarize and order the data, then render the chart\\r\\n| summarize CountOfIndicators = count() by IndicatorType\\r\\n| order by CountOfIndicators desc \\r\\n| render barchart kind=unstacked\",\"size\":0,\"showAnalytics\":true,\"title\":\"Active Indicators by Indicator Type\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Select all indicators from the table\\r\\n| where TimeGenerated < now()\\r\\n// Select only indicators that have not expired\\r\\n    and ExpirationDateTime > now()\\r\\n// Select only indicators that are marked active\\r\\n    and Active == true\\r\\n// Select only the most recently ingested copy of an indicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n// Summarize and order the data, then render the chart\\r\\n| summarize CountOfIndicators = count() by SourceSystem\\r\\n| order by CountOfIndicators desc \\r\\n| render barchart kind=unstacked\",\"size\":0,\"showAnalytics\":true,\"title\":\"Active Indicators by Indicator Source\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 7\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"ThreatIntelligenceIndicator\\r\\n// Select all indicators from the table\\r\\n| where TimeGenerated < now()\\r\\n// Select only indicators that have not expired\\r\\n    and ExpirationDateTime > now()\\r\\n// Select only indicators that are marked active\\r\\n    and Active == true\\r\\n// Select only the most recently ingested copy of an indicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n// Summarize and order the data, then render the chart\\r\\n| summarize CountOfIndicators = count() by tostring(ConfidenceScore)\\r\\n| order by CountOfIndicators desc \\r\\n| render piechart\",\"size\":0,\"showAnalytics\":true,\"title\":\"Active Indicators by Confidence Score\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"]},\"customWidth\":\"50\",\"name\":\"query - 10\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let DomainQuery=view() { \\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(DomainName)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by DomainName\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"DomainEntry\\\"\\r\\n};\\r\\nlet UrlQuery=view(){\\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(Url)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by Url\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"UrlEntry\\\"\\r\\n};\\r\\nlet FileHashQuery=view(){\\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(FileHashValue)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by FileHashValue\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"FileHashEntry\\\"\\r\\n};\\r\\nlet IPQuery=view(){\\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(NetworkIP) or isnotempty(NetworkSourceIP)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by NetworkIP, NetworkSourceIP\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"IPEntry\\\"\\r\\n};\\r\\nlet EmailAddressQuery=view(){\\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(EmailSenderAddress)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by EmailSenderAddress\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"EmailAddressEntry\\\"\\r\\n};\\r\\nlet EmailMessageQuery=view(){\\r\\nThreatIntelligenceIndicator\\r\\n| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n| where isnotempty(EmailSubject)\\r\\n| summarize SourceSystemArray=make_set(SourceSystem) by EmailSubject\\r\\n| summarize count() by tostring(SourceSystemArray)\\r\\n| project SourceSystemArray, count_, EntryType=\\\"EmailMessageEntry\\\"\\r\\n};\\r\\nlet SingleSourceIndicators=view(){\\r\\n    DomainQuery\\r\\n    | union UrlQuery\\r\\n    | union FileHashQuery\\r\\n    | union IPQuery\\r\\n    | union EmailAddressQuery\\r\\n    | union EmailMessageQuery\\r\\n    | where array_length(todynamic(SourceSystemArray))==1\\r\\n    | summarize sum(count_) by SourceSystemArray\\r\\n    | extend counter=1 \\r\\n};\\r\\nlet MultipleSourceIndicators=view(){\\r\\n    DomainQuery\\r\\n    | union UrlQuery\\r\\n    | union FileHashQuery\\r\\n    | union IPQuery\\r\\n    | union EmailAddressQuery\\r\\n    | union EmailMessageQuery\\r\\n    | where array_length(todynamic(SourceSystemArray))!=1\\r\\n    | summarize sum(count_) by SourceSystemArray\\r\\n    | extend counter=1\\r\\n};\\r\\nlet CountOfActiveIndicatorsBySource=view(){\\r\\n    ThreatIntelligenceIndicator\\r\\n\\t| summarize arg_max(TimeGenerated, *) by IndicatorId\\r\\n    | where ExpirationDateTime > now() and Active == true\\r\\n    | summarize count() by SourceSystem\\r\\n    | project SourceSystem, count_\\r\\n};\\r\\nSingleSourceIndicators\\r\\n| join kind=fullouter MultipleSourceIndicators on counter \\r\\n| where SourceSystemArray contains todynamic(SourceSystemArray)[0] \\r\\n| order by SourceSystemArray\\r\\n| extend solitary_count=sum_count_\\r\\n| summarize shared_count = sum(sum_count_1) by SourceSystemArray, solitary_count\\r\\n| extend total_count = shared_count + solitary_count\\r\\n| extend unique_percentage = round(toreal(solitary_count)/toreal(total_count)*100, 1)\\r\\n| extend IndicatorSource = tostring(todynamic(SourceSystemArray)[0])\\r\\n| join kind=inner CountOfActiveIndicatorsBySource on $left.IndicatorSource == $right.SourceSystem\\r\\n| order by unique_percentage desc\\r\\n| project Source=IndicatorSource, UniquenessPercentage=unique_percentage, ActiveIndicators = count_\\r\\n\\r\\n\",\"size\":0,\"showAnalytics\":true,\"title\":\"Uniqueness of Threat Intelligence Sources\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Source\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"View\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"ActiveIndicators\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 12\"}]},\"conditionalVisibility\":{\"parameterName\":\"TAB\",\"comparison\":\"isEqualTo\",\"value\":\"Indicators\"},\"name\":\"Indicators Ingestion\"},{\"type\":12,\"content\":{\"version\":\"NotebookGroup/1.0\",\"groupType\":\"editable\",\"items\":[{\"type\":9,\"content\":{\"version\":\"KqlParameterItem/1.0\",\"parameters\":[{\"id\":\"9aec751b-07bd-43ba-80b9-f711887dce45\",\"version\":\"KqlParameterItem/1.0\",\"name\":\"Indicator\",\"label\":\"Search Indicator in Events\",\"type\":1,\"value\":\"\",\"timeContext\":{\"durationMs\":7776000000},\"timeContextFromParameter\":\"TimeRange\"}],\"style\":\"pills\",\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\"},\"customWidth\":\"50\",\"name\":\"Threat Research Parameters\"},{\"type\":1,\"content\":{\"json\":\"\"},\"customWidth\":\"50\",\"name\":\"text - 9\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Add additional lines for desired data columns\\r\\nunion withsource= Table_Name *\\r\\n| where column_ifexists('CallerIpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileOriginUrl', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FQDN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('InitiatingProcessSHA256', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IPAddresses', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IPAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Name', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RemoteIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RemoteUrl', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RecipientEmailAddress', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('SenderMailFromAddress', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('SourceIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Url', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SrcIpAddr', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DstIpAddr', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkSourceIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileHashValue', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkDestinationIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('EmailSourceIpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('EmailSenderAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DomainName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AADEmail', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Account', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountUpn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountUPN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Caller', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('CompromisedEntity', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationUserID', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DisplayName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Email_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FullyQualifiedSubjectUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('InitiatingProcessAccountUpn', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('MailboxOwnerUPN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Owner', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RequesterUpn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceIdentity', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceUserID', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SubjectUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('TargetUser', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('TargetUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Upn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('User_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserId', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('UserId_', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserId_s_s', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('userName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserName', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('UserName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('userPrincipalName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserPrincipalName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserPrincipalName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Computer', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileHash', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FilePath', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Process', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('CommandLine', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NewProcessName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('ParentProcessName', '') has \\\"{Indicator}\\\"\\r\\n| summarize count() by Table_Name \\r\\n| project-rename ['Data Table']=Table_Name, ['Logs Count']=count_\\r\\n| sort by ['Logs Count'] desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators Observed\",\"noDataMessage\":\"No indicators observed within these thresholds\",\"timeContextFromParameter\":\"TimeRange\",\"exportFieldName\":\"Type\",\"exportParameterName\":\"Type\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Data Table\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Log\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Logs Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"blue\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 4\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"//Add additional lines for desired data columns\\r\\nunion withsource= Table_Name *\\r\\n| where column_ifexists('CallerIpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileOriginUrl', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FQDN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('InitiatingProcessSHA256', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IPAddresses', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('IPAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Name', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RemoteIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RemoteUrl', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RecipientEmailAddress', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('SenderMailFromAddress', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('SourceIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Url', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SrcIpAddr', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DstIpAddr', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkSourceIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileHashValue', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NetworkDestinationIP', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('EmailSourceIpAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('EmailSenderAddress', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DomainName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AADEmail', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Account', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountUpn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('AccountUPN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Caller', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('CompromisedEntity', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationUserID', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DestinationUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('DisplayName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Email_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FullyQualifiedSubjectUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('InitiatingProcessAccountUpn', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('MailboxOwnerUPN', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Owner', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('RequesterUpn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceIdentity', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceUserID', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SourceUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('SubjectUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('TargetUser', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('TargetUserName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Upn', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('User_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserId', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('UserId_', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserId_s_s', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('userName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserName', '') has \\\"{Indicator}\\\" \\r\\nor column_ifexists('UserName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('userPrincipalName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserPrincipalName_s', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('UserPrincipalName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Computer', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FileHash', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('FilePath', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('Process', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('CommandLine', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('NewProcessName', '') has \\\"{Indicator}\\\"\\r\\nor column_ifexists('ParentProcessName', '') has \\\"{Indicator}\\\"\\r\\n| make-series count() default=0 on TimeGenerated from {TimeRange:start} to {TimeRange:end} step 1d by Type\\r\\n| render areachart\",\"size\":0,\"showAnalytics\":true,\"title\":\"Indicators Observed over Time\",\"noDataMessage\":\"No indicators observed within these thresholds\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Data Table\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Log\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Logs Count\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redBright\"}}],\"filter\":true}},\"customWidth\":\"50\",\"name\":\"query - 4 - Copy\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"let tiObservables = ThreatIntelligenceIndicator\\r\\n    | where TimeGenerated < now()\\r\\n    | project IndicatorId, ThreatType, Description, Active, IndicatorTime = TimeGenerated, Indicator = strcat(NetworkSourceIP, NetworkIP, NetworkDestinationIP, Url, FileHashValue, EmailSourceIpAddress, EmailSenderAddress, DomainName), SourceSystem;\\r\\nlet alertEntity = SecurityAlert \\r\\n    | project parse_json(Entities), SystemAlertId , AlertTime = TimeGenerated\\r\\n    | mvexpand(Entities)\\r\\n    | extend entity = iif(isnotempty(Entities.Address), Entities.Address,\\r\\n                      iif(isnotempty(Entities.HostName),strcat(Entities.HostName, \\\".\\\", Entities.DnsDomain),\\r\\n                      iif(isnotempty(Entities.Url), Entities.Url,\\r\\n                      iif(isnotempty(Entities.Value), Entities.Value,\\r\\n                      iif(Entities.Type == \\\"account\\\", strcat(Entities.Name,\\\"@\\\",Entities.UPNSuffix),\\\"\\\")))))\\r\\n    | where isnotempty(entity) \\r\\n    | project entity, SystemAlertId, AlertTime;\\r\\nlet IncidentAlerts = SecurityIncident\\r\\n    | project IncidentTime = TimeGenerated, IncidentNumber, Title, parse_json(AlertIds)\\r\\n    | mv-expand AlertIds\\r\\n    | project IncidentTime, IncidentNumber, Title, tostring(AlertIds);\\r\\nlet AlertsWithTiObservables = alertEntity\\r\\n    | join kind=inner tiObservables on $left.entity == $right.Indicator;\\r\\nlet IncidentsWithAlertsWithTiObservables = AlertsWithTiObservables\\r\\n    | join kind=inner IncidentAlerts on $left.SystemAlertId == $right.AlertIds;\\r\\nIncidentsWithAlertsWithTiObservables\\r\\n| where Indicator contains '{Indicator}' or Indicator == \\\"*\\\"\\r\\n| summarize Incidents=dcount(IncidentNumber), Alerts=dcount(SystemAlertId) by Indicator, ThreatType, Source = SourceSystem, Description\\r\\n| sort by Incidents, Alerts desc\",\"size\":0,\"showAnalytics\":true,\"title\":\"Threat Intelligence Alerts\",\"noDataMessage\":\"No indicators observed within these thresholds\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"ThreatType\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"Botnet\",\"representation\":\"Command and Control\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"MaliciousUrl\",\"representation\":\"Initial_Access\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Malware\",\"representation\":\"Execution\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Phishing\",\"representation\":\"Exfiltration\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Pre attack\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Source\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"success\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Incidents\",\"formatter\":4,\"formatOptions\":{\"palette\":\"redBright\"}},{\"columnMatch\":\"Alerts\",\"formatter\":4,\"formatOptions\":{\"palette\":\"orange\"}}],\"filter\":true}},\"name\":\"query - 5\"},{\"type\":3,\"content\":{\"version\":\"KqlItem/1.0\",\"query\":\"SecurityIncident\\r\\n| extend SystemAlertId = tostring(AlertIds[0])\\r\\n| join (SecurityAlert \\r\\n| where Entities <> \\\"\\\"\\r\\n| mv-expand parse_json(Entities)\\r\\n| where Entities contains '{Indicator}'\\r\\n| project SystemAlertId, Entities\\r\\n) on SystemAlertId\\r\\n| where Title <> \\\"\\\"\\r\\n| summarize arg_max(TimeGenerated, *) by IncidentNumber\\r\\n| parse IncidentUrl with * '/#asset/Microsoft_Azure_Security_Insights/Incident' IncidentBlade\\r\\n| extend SeverityRank=iff(Severity == \\\"High\\\", 3, iff(Severity == \\\"Medium\\\", 2, iff(Severity == \\\"Low\\\", 1, iff(Severity == \\\"Informational\\\", 0, 0))))\\r\\n| sort by SeverityRank, IncidentNumber desc\\r\\n| project ['Incident Name']=Title, IncidentNumber, Severity, IncidentUrl, FirstActivityTime, IncidentBlade, Entities\\r\\n| limit 2500\",\"size\":0,\"showAnalytics\":true,\"title\":\"Security Incidents\",\"noDataMessage\":\"No incidents observed within these thresholds\",\"timeContextFromParameter\":\"TimeRange\",\"showExportToExcel\":true,\"queryType\":0,\"resourceType\":\"microsoft.operationalinsights/workspaces\",\"crossComponentResources\":[\"{Workspace}\"],\"gridSettings\":{\"formatters\":[{\"columnMatch\":\"Incident Name\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"Default\",\"representation\":\"Alert\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"Severity\",\"formatter\":18,\"formatOptions\":{\"thresholdsOptions\":\"icons\",\"thresholdsGrid\":[{\"operator\":\"==\",\"thresholdValue\":\"High\",\"representation\":\"Sev0\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Medium\",\"representation\":\"Sev1\",\"text\":\"{0}{1}\"},{\"operator\":\"==\",\"thresholdValue\":\"Low\",\"representation\":\"Sev2\",\"text\":\"{0}{1}\"},{\"operator\":\"Default\",\"representation\":\"Sev3\",\"text\":\"{0}{1}\"}]}},{\"columnMatch\":\"IncidentUrl\",\"formatter\":7,\"formatOptions\":{\"linkTarget\":\"OpenBlade\",\"linkLabel\":\"Incident >>\",\"bladeOpenContext\":{\"bladeName\":\"CaseBlade\",\"extensionName\":\"Microsoft_Azure_Security_Insights\",\"bladeParameters\":[{\"name\":\"id\",\"source\":\"column\",\"value\":\"IncidentBlade\"}]}}},{\"columnMatch\":\"IncidentBlade\",\"formatter\":5}],\"rowLimit\":2500,\"filter\":true,\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}]},\"sortBy\":[{\"itemKey\":\"IncidentNumber\",\"sortOrder\":2}]},\"name\":\"query - 3\"}]},\"conditionalVisibility\":{\"parameterName\":\"TAB\",\"comparison\":\"isEqualTo\",\"value\":\"Observed\"},\"name\":\"Indicators Observed\"}],\"fromTemplateId\":\"sentinel-ThreatIntelligence\",\"$schema\":\"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"}\r\n",
                "version": "1.0",
                "sourceId": "[variables('workspaceResourceId')]",
                "category": "sentinel"
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Workbook-', last(split(variables('workbookId1'),'/'))))]",
              "properties": {
                "description": "@{workbookKey=MicrosoftThreatIntelligenceWorkbook; logoFileName=Azure_Sentinel.svg; description=Gain insights into threat indicators ingestion and search for indicators at scale across Microsoft 1st Party, 3rd Party, On-Premises, Hybrid, and Multi-Cloud Workloads. Indicators Search facilitates a simple interface for finding IP, File, Hash, Sender and more across your data. Seamless pivots to correlate indicators with Microsoft Sentinel: Incidents to make your threat intelligence actionable.; dataTypesDependencies=System.Object[]; dataConnectorsDependencies=System.Object[]; previewImagesFileNames=System.Object[]; version=1.0.0; title=Threat Intelligence; templateRelativePath=MicrosoftThreatIntelligence.json; subtitle=; provider=Microsoft}.description",
                "parentId": "[variables('workbookId1')]",
                "contentId": "[variables('_workbookContentId1')]",
                "kind": "Workbook",
                "version": "[variables('workbookVersion1')]",
                "source": {
                  "kind": "Solution",
                  "name": "Microsoft Defender Threat Intelligence",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "operator": "AND",
                  "criteria": [
                    {
                      "contentId": "ThreatIntelligenceIndicator",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "SecurityIncident",
                      "kind": "DataType"
                    },
                    {
                      "contentId": "ThreatIntelligence",
                      "kind": "DataConnector"
                    },
                    {
                      "contentId": "ThreatIntelligenceTaxii",
                      "kind": "DataConnector"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('_workbookContentId1')]",
        "contentKind": "Workbook",
        "displayName": "[parameters('workbook1-name')]",
        "contentProductId": "[variables('_workbookcontentProductId1')]",
        "id": "[variables('_workbookcontentProductId1')]",
        "version": "[variables('workbookVersion1')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.2",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Microsoft Defender Threat Intelligence",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Microsoft%20Defender%20Threat%20Intelligence/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>Microsoft centralizes numerous data sets into a single platform, Microsoft Defender Threat Intelligence <a href=\"https://learn.microsoft.com/defender/threat-intelligence/what-is-microsoft-defender-threat-intelligence-defender-ti\">(MDTI)</a>, making it easier for Microsoft’s community and customers to conduct infrastructure analysis. Microsoft’s primary focus is to provide as much data as possible about Internet infrastructure to support a variety of security use cases and enabling automation for Incident management in Microsoft Sentinel.</p>\n<p><strong>Workbooks:</strong> 1, <strong>Playbooks:</strong> 7</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Azure_Sentinel.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Microsoft Defender Threat Intelligence",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-Automated-Triage')]",
              "version": "[variables('playbookVersion1')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-Data-Cookies')]",
              "version": "[variables('playbookVersion2')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-Data-WebComponents')]",
              "version": "[variables('playbookVersion3')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-Intel-Reputation')]",
              "version": "[variables('playbookVersion4')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-PassiveDns')]",
              "version": "[variables('playbookVersion5')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-PassiveDnsReverse')]",
              "version": "[variables('playbookVersion6')]"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_MDTI-Trackers')]",
              "version": "[variables('playbookVersion7')]"
            },
            {
              "kind": "Workbook",
              "contentId": "[variables('_workbookContentId1')]",
              "version": "[variables('workbookVersion1')]"
            }
          ]
        },
        "firstPublishDate": "2023-03-23",
        "providers": [
          "Microsoft"
        ],
        "categories": {
          "domains": [
            "Security - Threat Intelligence",
            "Security - Automation (SOAR)"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}