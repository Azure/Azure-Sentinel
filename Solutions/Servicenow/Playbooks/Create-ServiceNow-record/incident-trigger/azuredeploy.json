{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "Create ServiceNow record - Incident trigger",
        "description": "This playbook will open a Service Now incident when a new incident is opened in Microsoft Sentinel.",
        "prerequisites": [ "1. Existing ServiceNow instance (ex. xyz.service-now.com)", "2. ServiceNow credentials: Username and Password" ],
        "lastUpdateTime": "2022-07-13T00:00:00.000Z",
        "tags": [ "Sync" ],
        "entities": [ ],
        "support": {
            "tier": "community"
        },
        "author": {
            "name": "Yaniv Shasha and Benjamin Kovacevic"
        },
        "releaseNotes": [
            {
                "version": "1.0.0",
                "title": "Create ServiceNow record",
                "notes": [ "Initial version" ]
            }
        ]
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "CreateServiceNowRecord",
            "type": "string",
            "metadata": {
                "description": "Incident trigger"
            }
        }
    },
    "variables": {
        "AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('PlaybookName'))]",
        "SNOWConnectionName": "[concat('snow-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureSentinelConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('AzureSentinelConnectionName')]",
                "customParameterValues": {},
                "parameterValueType": "Alternative",
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('SNOWConnectionName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[variables('SNOWConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/service-now')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('PlaybookName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "CreateSNOWRecord-Incident",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('SNOWConnectionName'))]"
            ],
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Create_Record": {
                            "runAfter": {
                                "Switch": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "comments": "@triggerBody()?['object']?['properties']?['incidentUrl']",
                                    "description": "Incident description: @{triggerBody()?['object']?['properties']?['description']};\nSeverity: @{triggerBody()?['object']?['properties']?['severity']}",
                                    "impact": "@variables('Severity')",
                                    "number": "@triggerBody()?['object']?['name']",
                                    "short_description": "@triggerBody()?['object']?['properties']?['title']",
                                    "urgency": "@variables('Severity')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['service-now']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/api/now/v2/table/@{encodeURIComponent('incident')}",
                                "queries": {
                                    "sysparm_display_value": false,
                                    "sysparm_exclude_reference_link": true
                                }
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Severity",
                                        "type": "string",
                                        "value": "3"
                                    }
                                ]
                            }
                        },
                        "Switch": {
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "cases": {
                                "Case_Severity_High": {
                                    "case": "High",
                                    "actions": {
                                        "Set_Severity_variable_to_High": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Severity",
                                                "value": "1"
                                            }
                                        }
                                    }
                                },
                                "Case_Severity_Medium": {
                                    "case": "Medium",
                                    "actions": {
                                        "Set_Severity_variable_to_Medium": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "Severity",
                                                "value": "2"
                                            }
                                        }
                                    }
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@triggerBody()?['object']?['properties']?['severity']",
                            "type": "Switch"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureSentinelConnectionName'))]",
                                "connectionName": "[variables('AzureSentinelConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]",
                                "connectionProperties": {
                                    "authentication": {
                                        "type": "ManagedServiceIdentity"
                                    }
                                }
                            },
                            "service-now": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('SNOWConnectionName'))]",
                                "connectionName": "[variables('SNOWConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/service-now')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}