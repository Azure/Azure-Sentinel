{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Google Kubernetes Engine"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Google Kubernetes Engine",
    "_solutionVersion": "3.0.0",
    "solutionId": "azuresentinel.azure-sentinel-solution-gkelogs-api",
    "_solutionId": "[variables('solutionId')]",
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "GKECCPDefinition",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "GKECCPDefinitionConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId1": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": "Google Kubernetes Engine (via Codeless Connector Framework) (Preview)",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "GKECCPDefinition",
                  "title": "Google Kubernetes Engine (via Codeless Connector Framework) (Preview)",
                  "publisher": "Microsoft",
                  "descriptionMarkdown": "The Google Kubernetes Engine (GKE) Logs enable you to capture cluster activity, workload behavior, and security events, allowing you to monitor Kubernetes workloads, analyze performance, and detect potential threats across GKE clusters.",
                  "graphQueriesTableName": "GKEAudit",
                  "graphQueries": [
                    {
                      "metricName": "Total events received",
                      "legend": "GKEAuditLogs",
                      "baseQuery": "GKEAudit"
                    },
                    {
                      "metricName": "Total API Server logs received",
                      "legend": "GKEAPIServerLogs",
                      "baseQuery": "GKEAPIServer"
                    },
                    {
                      "metricName": "Total Scheduler logs received",
                      "legend": "GKESchedulerLogs",
                      "baseQuery": "GKEScheduler"
                    },
                    {
                      "metricName": "Total Controller Manager logs received",
                      "legend": "GKEControllerManagerLogs",
                      "baseQuery": "GKEControllerManager"
                    },
                    {
                      "metricName": "Total HPA Decision logs received",
                      "legend": "GKEHPADecisionLogs",
                      "baseQuery": "GKEHPADecision"
                    },
                    {
                      "metricName": "Total Application logs received",
                      "legend": "GKEApplicationLogs",
                      "baseQuery": "GKEApplication"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "Get Sample of GKE Logs",
                      "query": "GKEAudit\n | take 10"
                    },
                    {
                      "description": "Get Sample of GKE API Server Logs",
                      "query": "GKEAPIServer\n | take 10"
                    },
                    {
                      "description": "Get Sample of GKE Scheduler Logs",
                      "query": "GKEScheduler\n | take 10"
                    },
                    {
                      "description": "Get Sample of GKE Controller Manager Logs",
                      "query": "GKEControllerManager\n | take 10"
                    },
                    {
                      "description": "Get Sample of GKE HPA Decision Logs",
                      "query": "GKEHPADecision\n | take 10"
                    },
                    {
                      "description": "Get Sample of GKE Application Logs",
                      "query": "GKEApplication\n | take 10"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "GKEAudit",
                      "lastDataReceivedQuery": "GKEAudit\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "GKEAPIServer",
                      "lastDataReceivedQuery": "GKEAPIServer\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "GKEScheduler",
                      "lastDataReceivedQuery": "GKEScheduler\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "GKEHPADecision",
                      "lastDataReceivedQuery": "GKEHPADecision\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "GKEApplication",
                      "lastDataReceivedQuery": "GKEApplication\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    },
                    {
                      "name": "GKEControllerManager",
                      "lastDataReceivedQuery": "GKEControllerManager\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
                    }
                  ],
                  "availability": {
                    "status": 1,
                    "isPreview": false
                  },
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "read": true,
                          "write": true,
                          "delete": true,
                          "action": false
                        }
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "instructions": [
                        {
                          "type": "MarkdownControlEnvBased",
                          "parameters": {
                            "prodScript": "#### 1. Set up your GCP environment \nYou must have the following GCP resources defined and configured: topic, subscription for the topic, workload identity pool, workload identity provider, and service account with permissions to get and consume from the subscription.\n\nTo configure this data connector, execute the following Terraform scripts:\n\n1. Setup Required Resources: [Configuration Guide](https://github.com/Alekhya0824/GithubValidationREPO/blob/main/gke/Readme.md)\n2. Setup Authentication: [Authentication tutorial](https://learn.microsoft.com/en-us/azure/sentinel/connect-google-cloud-platform?tabs=terraform%2Cauditlogs#gcp-authentication-setup). Note: If Authentication is already setup using another GCP data connector, kindly skip this step and use the existing service account and workload identity pool.",
                            "govScript": "#### 1. Set up your GCP environment \nYou must have the following GCP resources defined and configured: topic, subscription for the topic, workload identity pool, workload identity provider, and service account with permissions to get and consume from the subscription.\n\nTo configure this data connector, execute the following Terraform scripts:\n\n1. Setup Required Resources: [Configuration Guide](https://github.com/Alekhya0824/GithubValidationREPO/blob/main/gke/Readme.md)\n2. Setup Authentication: [Authentication tutorial](https://learn.microsoft.com/en-us/azure/sentinel/connect-google-cloud-platform?tabs=terraform%2Cauditlogs#gcp-authentication-setup). Note: If Authentication is already setup using another GCP data connector, kindly skip this step and use the existing service account and workload identity pool."
                          }
                        },
                        {
                          "type": "CopyableLabel",
                          "parameters": {
                            "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                            "fillWith": [
                              "TenantId"
                            ],
                            "name": "TenantId",
                            "disabled": true
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 2. Enable Kubernetes Engine Logging \nIn your GCP account, navigate to the Kubernetes Engine section. Enable Cloud Logging for your clusters. Within Cloud Logging, ensure that the specific logs you want to ingest—such as API server, scheduler, controller manager, HPA decision, and application logs—are enabled for effective monitoring and security analysis."
                          }
                        },
                        {
                          "type": "Markdown",
                          "parameters": {
                            "content": "#### 3. Connect new collectors \nTo enable GKE Logs for Microsoft Sentinel, click the **Add new collector** button, fill in the required information in the context pane, and click **Connect**."
                          }
                        },
                        {
                          "type": "GCPGrid",
                          "parameters": {
                            "collectors": [
                              {
                                "name": "Audit Collector",
                                "tableName": "GKEAudit"
                              },
                              {
                                "name": "API Server Collector",
                                "tableName": "GKEAPIServer"
                              },
                              {
                                "name": "Scheduler Collector",
                                "tableName": "GKEScheduler"
                              },
                              {
                                "name": "Controller Manager Collector",
                                "tableName": "GKEControllerManager"
                              },
                              {
                                "name": "HPA Decision Collector",
                                "tableName": "GKEHPADecision"
                              },
                              {
                                "name": "Application Collector",
                                "tableName": "GKEApplication"
                              }
                            ]
                          }
                        },
                        {
                          "type": "GCPContextPane",
                          "parameters": {}
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "GKE",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId1')]",
                "streamDeclarations": {
                  "Custom-GKEAuditLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "operation",
                        "type": "dynamic"
                      },
                      {
                        "name": "protoPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      }
                    ]
                  },
                  "Custom-GKEAPIServerLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "sourceLocation",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      }
                    ]
                  },
                  "Custom-GKESchedulerLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "sourceLocation",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      }
                    ]
                  },
                  "Custom-GKEControllerManagerLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "sourceLocation",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      }
                    ]
                  },
                  "Custom-GKEHPADecisionLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "sourceLocation",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      }
                    ]
                  },
                  "Custom-GKEApplicationLogs": {
                    "columns": [
                      {
                        "name": "insertId",
                        "type": "string"
                      },
                      {
                        "name": "logName",
                        "type": "string"
                      },
                      {
                        "name": "labels",
                        "type": "dynamic"
                      },
                      {
                        "name": "jsonPayload",
                        "type": "dynamic"
                      },
                      {
                        "name": "severity",
                        "type": "string"
                      },
                      {
                        "name": "sourceLocation",
                        "type": "dynamic"
                      },
                      {
                        "name": "resource",
                        "type": "dynamic"
                      },
                      {
                        "name": "receiveTimestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "timestamp",
                        "type": "datetime"
                      },
                      {
                        "name": "textPayload",
                        "type": "string"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws1"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-GKEAuditLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName has 'cloudaudit.googleapis.com%2Factivity' or logName has 'cloudaudit.googleapis.com%2Fdata_access' or logName has 'container.googleapis.com%2Fcluster-autoscaler-visibility' | extend LogType = case(logName contains 'data_access', 'Data Access Log', logName contains 'activity', 'Activity Log', logName contains 'cluster-autoscaler-visibility', 'Cluster Autoscaler Log', 'Unknown'), InsertId = insertId, TimeGenerated = timestamp, ReceiveTimestamp = receiveTimestamp, Resource = resource, Labels = labels,LogName =logName, ProtoPayload = iff(isnotempty(protoPayload), protoPayload, todynamic('')), JsonPayload = iff(isnotempty(jsonPayload), jsonPayload, todynamic('')), Operation = iff(isnotempty(operation), operation, todynamic('')), Severity = iff(isnotempty(severity), severity, '') | project LogType, InsertId, TimeGenerated, ReceiveTimestamp, Resource, Labels, ProtoPayload, JsonPayload, Operation, Severity,LogName",
                    "outputStream": "Microsoft-GKEAudit"
                  },
                  {
                    "streams": [
                      "Custom-GKEAPIServerLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName has 'container.googleapis.com%2Fapiserver' | extend TimeGenerated = timestamp, InsertId = tostring(insertId), LogName = tostring(logName), Labels = todynamic(labels), Message = tostring(jsonPayload.message), Pid = tostring(jsonPayload.pid), Severity = tostring(severity), SourceFile = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.file), ''), SourceLine = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.line), ''), ReceiveTimestamp = receiveTimestamp, ClusterName = tostring(resource.labels.cluster_name), ComponentLocation = tostring(resource.labels.component_location), ComponentName = tostring(resource.labels.component_name), Location = tostring(resource.labels.location), ProjectID = tostring(resource.labels.project_id), ComputeResourceName = tostring(labels['compute.googleapis.com/resource_name']) | extend Protocol = iff(Message startswith @'\"HTTP\"', 'HTTP', ''), HttpVerb = extract(@'verb=\\\"(\\w+)\\\"', 1, Message), URI = extract(@'URI=\\\"([^\\\"]+)\\\"', 1, Message), Latency = extract(@'latency=\\\"([^\\\"]+)\\\"', 1, Message), UserAgent = extract(@'userAgent=\\\"([^\\\"]+)\\\"', 1, Message), AuditID = extract(@'audit-ID=\\\"([^\\\"]*)\\\"', 1, Message), SrcIP = extract(@'srcIP=\\\"([^\\\"]+)\\\"', 1, Message), ResponseCode = toint(extract(@'resp=(\\d+)', 1, Message)), ApfPl = extract(@'apf_pl=\\\"([^\\\"]+)\\\"', 1, Message), ApfFs = extract(@'apf_fs=\\\"([^\\\"]+)\\\"', 1, Message), ApfISeats = toint(extract(@'apf_iseats=(\\d+)', 1, Message)), ApfFSeats = toint(extract(@'apf_fseats=(\\d+)', 1, Message)), ApfAdditionalLatency = extract(@'apf_additionalLatency=\\\"([^\\\"]+)\\\"', 1, Message), ApfExecutionTime = extract(@'apf_execution_time=\\\"([^\\\"]+)\\\"', 1, Message) | extend WatchEvent = iff(Message startswith @'\"Starting watch\"', 'Starting watch', ''), WatchPath = extract(@'path=\\\"([^\\\"]+)\\\"', 1, Message), ResourceVersion = extract(@'resourceVersion=\\\"([^\\\"]+)\\\"', 1, Message), WatchLabels = extract(@'labels=\\\"([^\\\"]*)\\\"', 1, Message), WatchFields = extract(@'fields=\\\"([^\\\"]*)\\\"', 1, Message), WatchTimeout = extract(@'timeout=\\\"([^\\\"]+)\\\"', 1, Message) | project-away jsonPayload, sourceLocation, resource, labels,Labels,Message",
                    "outputStream": "Microsoft-GKEAPIServer"
                  },
                  {
                    "streams": [
                      "Custom-GKESchedulerLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName has 'container.googleapis.com%2Fscheduler' | extend TimeGenerated = timestamp,InsertId = tostring(insertId), LogName = tostring(logName), Labels = todynamic(labels), Message = tostring(jsonPayload.message), Pid = tostring(jsonPayload.pid), Severity = tostring(severity), SourceFile = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.file), ''), SourceLine = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.line), ''), ReceiveTimestamp = receiveTimestamp, ClusterName = tostring(resource.labels.cluster_name), ComponentLocation = tostring(resource.labels.component_location), ComponentName = tostring(resource.labels.component_name), Location = tostring(resource.labels.location), ProjectID = tostring(resource.labels.project_id), ComputeResourceName = tostring(labels['compute.googleapis.com/resource_name']) | extend Protocol = extract(@'^(\\\"[^\\\"]+\\\")', 1, Message), HttpVerb = extract(@'verb=\\\"(\\w+)\\\"', 1, Message), URI = extract(@'URI=\\\"([^\\\"]+)\\\"', 1, Message), Latency = extract(@'latency=\\\"([^\\\"]+)\\\"', 1, Message), UserAgent = extract(@'userAgent=\\\"([^\\\"]+)\\\"', 1, Message), AuditID = extract(@'audit-ID=\\\"([^\\\"]*)\\\"', 1, Message), SrcIP = extract(@'srcIP=\\\"([^\\\"]+)\\\"', 1, Message), ResponseCode = toint(extract(@'resp=(\\d+)', 1, Message)) | project-away jsonPayload, sourceLocation, resource, labels,Labels,Message",
                    "outputStream": "Microsoft-GKEScheduler"
                  },
                  {
                    "streams": [
                      "Custom-GKEControllerManagerLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName contains 'container.googleapis.com%2Fcontroller-manager' | extend TimeGenerated = timestamp, InsertId = tostring(insertId), LogName = tostring(logName), Labels = todynamic(labels), Message = tostring(jsonPayload.message), Pid = tostring(jsonPayload.pid), Severity = tostring(severity), SourceFile = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.file), ''), SourceLine = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.line), ''), ReceiveTimestamp = receiveTimestamp, ClusterName = tostring(resource.labels.cluster_name), ComponentLocation = tostring(resource.labels.component_location), ComponentName = tostring(resource.labels.component_name), Location = tostring(resource.labels.location), ProjectID = tostring(resource.labels.project_id), ComputeResourceName = tostring(labels['compute.googleapis.com/resource_name']) | extend Logger = extract(@'logger=\\\"([^\\\"]+)\\\"', 1, Message), Kind = extract(@'kind=\\\"([^\\\"]+)\\\"', 1, Message), Key = extract(@'key=\\\"([^\\\"]+)\\\"', 1, Message), Duration = extract(@'duration=\\\"([^\\\"]+)\\\"', 1, Message), SyncStatus = iff(Message contains 'Finished syncing', 'Finished syncing', '') | project TimeGenerated, InsertId, LogName, Labels, Message, Pid, Severity, SourceFile, SourceLine, ReceiveTimestamp, ClusterName, ComponentLocation, ComponentName, Location, ProjectID, ComputeResourceName, Logger, Kind, Key, Duration, SyncStatus",
                    "outputStream": "Microsoft-GKEControllerManager"
                  },
                  {
                    "streams": [
                      "Custom-GKEHPADecisionLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName has 'container.googleapis.com%2Fhpa-controller'| extend TimeGenerated = timestamp, InsertId = tostring(insertId), LogName = tostring(logName), Labels = todynamic(labels), Message = tostring(jsonPayload.message), Severity = tostring(severity), SourceFile = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.file), ''), SourceLine = iff(isnotempty(todynamic(sourceLocation)), tostring(sourceLocation.line), ''), ReceiveTimestamp = receiveTimestamp, ClusterName = tostring(resource.labels.cluster_name), ComponentLocation = tostring(resource.labels.component_location), ComponentName = tostring(resource.labels.component_name), Location = tostring(resource.labels.location), ProjectID = tostring(resource.labels.project_id), ComputeResourceName = tostring(labels['compute.googleapis.com/resource_name']), VMName = tostring(jsonPayload.instance.vm_name), Zone = tostring(jsonPayload.instance.zone), ActuationLatencySeconds = todouble(jsonPayload.finalRecommendation.actuationLatencySeconds), ActuationTime = todatetime(jsonPayload.finalRecommendation.actuationTime), ConfiguredSize = toint(jsonPayload.finalRecommendation.configuredSize), HPA = tostring(jsonPayload.finalRecommendation.hpa), LeadingMetricIndex = toint(jsonPayload.finalRecommendation.leadingMetricIndex), Replicas = toint(jsonPayload.finalRecommendation.replicas), StartTime = todatetime(jsonPayload.finalRecommendation.startTime),TargetRefkind = jsonPayload['finalRecommendation']['targetRef']['kind'],TargetRefAPIVersion = tostring(jsonPayload.finalRecommendation.targetRef.apiVersion), TargetRefName = tostring(jsonPayload.finalRecommendation.targetRef.name), TopLevelLimit = tostring(jsonPayload.finalRecommendation.topLevelLimit), TopLevelOverride = tostring(jsonPayload.finalRecommendation.topLevelOverride), ResourceType = tostring(resource.type)| project-away jsonPayload, sourceLocation, resource, labels,Labels,Message",
                    "outputStream": "Microsoft-GKEHPADecision"
                  },
                  {
                    "streams": [
                      "Custom-GKEApplicationLogs"
                    ],
                    "destinations": [
                      "clv2ws1"
                    ],
                    "transformKql": "source | where logName has 'stderr' or logName has 'stdout' | extend TimeGenerated = timestamp, InsertId = tostring(insertId), LogName = tostring(logName), Labels = todynamic(labels), Severity = tostring(severity), ReceiveTimestamp = receiveTimestamp, ClusterName = tostring(resource.labels.cluster_name), NamespaceName = tostring(resource.labels.namespace_name), PodName = tostring(resource.labels.pod_name), Location = tostring(resource.labels.location), ContainerName = tostring(resource.labels.container_name), JsonPayload = todynamic(jsonPayload),TextPayload = tostring(textPayload), ProjectID = tostring(resource.labels.project_id), ComputeResourceName = tostring(labels['compute.googleapis.com/resource_name']) | project-away resource, labels,  insertId, logName, receiveTimestamp, severity, timestamp, Labels, jsonPayload,textPayload",
                    "outputStream": "Microsoft-GKEApplication"
                  }
                ]
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "GKECCPDefinition",
          "title": "Google Kubernetes Engine (via Codeless Connector Framework) (Preview)",
          "publisher": "Microsoft",
          "descriptionMarkdown": "The Google Kubernetes Engine (GKE) Logs enable you to capture cluster activity, workload behavior, and security events, allowing you to monitor Kubernetes workloads, analyze performance, and detect potential threats across GKE clusters.",
          "graphQueriesTableName": "GKEAudit",
          "graphQueries": [
            {
              "metricName": "Total events received",
              "legend": "GKEAuditLogs",
              "baseQuery": "GKEAudit"
            },
            {
              "metricName": "Total API Server logs received",
              "legend": "GKEAPIServerLogs",
              "baseQuery": "GKEAPIServer"
            },
            {
              "metricName": "Total Scheduler logs received",
              "legend": "GKESchedulerLogs",
              "baseQuery": "GKEScheduler"
            },
            {
              "metricName": "Total Controller Manager logs received",
              "legend": "GKEControllerManagerLogs",
              "baseQuery": "GKEControllerManager"
            },
            {
              "metricName": "Total HPA Decision logs received",
              "legend": "GKEHPADecisionLogs",
              "baseQuery": "GKEHPADecision"
            },
            {
              "metricName": "Total Application logs received",
              "legend": "GKEApplicationLogs",
              "baseQuery": "GKEApplication"
            }
          ],
          "sampleQueries": [
            {
              "description": "Get Sample of GKE Logs",
              "query": "GKEAudit\n | take 10"
            },
            {
              "description": "Get Sample of GKE API Server Logs",
              "query": "GKEAPIServer\n | take 10"
            },
            {
              "description": "Get Sample of GKE Scheduler Logs",
              "query": "GKEScheduler\n | take 10"
            },
            {
              "description": "Get Sample of GKE Controller Manager Logs",
              "query": "GKEControllerManager\n | take 10"
            },
            {
              "description": "Get Sample of GKE HPA Decision Logs",
              "query": "GKEHPADecision\n | take 10"
            },
            {
              "description": "Get Sample of GKE Application Logs",
              "query": "GKEApplication\n | take 10"
            }
          ],
          "dataTypes": [
            {
              "name": "GKEAudit",
              "lastDataReceivedQuery": "GKEAudit\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "GKEAPIServer",
              "lastDataReceivedQuery": "GKEAPIServer\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "GKEScheduler",
              "lastDataReceivedQuery": "GKEScheduler\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "GKEHPADecision",
              "lastDataReceivedQuery": "GKEHPADecision\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "GKEApplication",
              "lastDataReceivedQuery": "GKEApplication\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            },
            {
              "name": "GKEControllerManager",
              "lastDataReceivedQuery": "GKEControllerManager\n | where TimeGenerated > ago(12h) | summarize Time = max(TimeGenerated)\n | where isnotempty(Time)"
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": false
          },
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "read": true,
                  "write": true,
                  "delete": true,
                  "action": false
                }
              }
            ]
          },
          "instructionSteps": [
            {
              "instructions": [
                {
                  "type": "MarkdownControlEnvBased",
                  "parameters": {
                    "prodScript": "#### 1. Set up your GCP environment \nYou must have the following GCP resources defined and configured: topic, subscription for the topic, workload identity pool, workload identity provider, and service account with permissions to get and consume from the subscription.\n\nTo configure this data connector, execute the following Terraform scripts:\n\n1. Setup Required Resources: [Configuration Guide](https://github.com/Alekhya0824/GithubValidationREPO/blob/main/gke/Readme.md)\n2. Setup Authentication: [Authentication tutorial](https://learn.microsoft.com/en-us/azure/sentinel/connect-google-cloud-platform?tabs=terraform%2Cauditlogs#gcp-authentication-setup). Note: If Authentication is already setup using another GCP data connector, kindly skip this step and use the existing service account and workload identity pool.",
                    "govScript": "#### 1. Set up your GCP environment \nYou must have the following GCP resources defined and configured: topic, subscription for the topic, workload identity pool, workload identity provider, and service account with permissions to get and consume from the subscription.\n\nTo configure this data connector, execute the following Terraform scripts:\n\n1. Setup Required Resources: [Configuration Guide](https://github.com/Alekhya0824/GithubValidationREPO/blob/main/gke/Readme.md)\n2. Setup Authentication: [Authentication tutorial](https://learn.microsoft.com/en-us/azure/sentinel/connect-google-cloud-platform?tabs=terraform%2Cauditlogs#gcp-authentication-setup). Note: If Authentication is already setup using another GCP data connector, kindly skip this step and use the existing service account and workload identity pool."
                  }
                },
                {
                  "type": "CopyableLabel",
                  "parameters": {
                    "label": "Tenant ID: A unique identifier that is used as an input in the Terraform configuration within a GCP environment.",
                    "fillWith": [
                      "TenantId"
                    ],
                    "name": "TenantId",
                    "disabled": true
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 2. Enable Kubernetes Engine Logging \nIn your GCP account, navigate to the Kubernetes Engine section. Enable Cloud Logging for your clusters. Within Cloud Logging, ensure that the specific logs you want to ingest—such as API server, scheduler, controller manager, HPA decision, and application logs—are enabled for effective monitoring and security analysis."
                  }
                },
                {
                  "type": "Markdown",
                  "parameters": {
                    "content": "#### 3. Connect new collectors \nTo enable GKE Logs for Microsoft Sentinel, click the **Add new collector** button, fill in the required information in the context pane, and click **Connect**."
                  }
                },
                {
                  "type": "GCPGrid",
                  "parameters": {
                    "collectors": [
                      {
                        "name": "Audit Collector",
                        "tableName": "GKEAudit"
                      },
                      {
                        "name": "API Server Collector",
                        "tableName": "GKEAPIServer"
                      },
                      {
                        "name": "Scheduler Collector",
                        "tableName": "GKEScheduler"
                      },
                      {
                        "name": "Controller Manager Collector",
                        "tableName": "GKEControllerManager"
                      },
                      {
                        "name": "HPA Decision Collector",
                        "tableName": "GKEHPADecision"
                      },
                      {
                        "name": "Application Collector",
                        "tableName": "GKEApplication"
                      }
                    ]
                  }
                },
                {
                  "type": "GCPContextPane",
                  "parameters": {}
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": "Google Kubernetes Engine (via Codeless Connector Framework) (Preview)",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "guidValue": {
              "defaultValue": "[[newGuid()]",
              "type": "securestring"
            },
            "innerWorkspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "GCPServiceAccountEmail": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectNumber": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 1
            },
            "GCPWorkloadIdentityProviderId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPProjectId": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "GCPSubscriptionName": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 3
            },
            "connectorDefinitionName": {
              "defaultValue": "Google Kubernetes Engine (via Codeless Connector Framework) (Preview)",
              "type": "securestring",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "securestring"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKEAuditLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEAudit",
                "dcrConfig": {
                  "streamName": "Custom-GKEAuditLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKEAPIServerLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEAPIServer",
                "dcrConfig": {
                  "streamName": "Custom-GKEAPIServerLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKESchedulerLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEScheduler",
                "dcrConfig": {
                  "streamName": "Custom-GKESchedulerLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKEControllerManagerLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEControllerManager",
                "dcrConfig": {
                  "streamName": "Custom-GKEControllerManagerLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKEHPADecisionLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEHPADecision",
                "dcrConfig": {
                  "streamName": "Custom-GKEHPADecisionLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            },
            {
              "name": "[[concat(parameters('innerWorkspace'),'/Microsoft.SecurityInsights/', 'GKEApplicationLogs', parameters('guidValue'))]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "GCP",
              "properties": {
                "connectorDefinitionName": "GKECCPDefinition",
                "dataType": "GKEApplication",
                "dcrConfig": {
                  "streamName": "Custom-GKEApplicationLogs",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "serviceAccountEmail": "[[parameters('GCPServiceAccountEmail')]",
                  "projectNumber": "[[parameters('GCPProjectNumber')]",
                  "workloadIdentityProviderId": "[[parameters('GCPWorkloadIdentityProviderId')]"
                },
                "request": {
                  "projectId": "[[parameters('GCPProjectId')]",
                  "subscriptionNames": [
                    "[[parameters('GCPSubscriptionName')]"
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Google Kubernetes Engine",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Google%20Kubernetes%20Engine/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The Google Cloud Platform (GCP) Kubernetes Engine data connector allows you to monitor containerized applications, track performance metrics, and detect potential threats across your GKE environment.</p>\n<p><strong>Data Connectors:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src =\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/google_logo.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Google Kubernetes Engine",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            }
          ]
        },
        "firstPublishDate": "2025-04-04",
        "providers": [
          "Google"
        ],
        "categories": {
          "domains": [
            "DevOps",
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
