{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Dragos Inc. - support@dragos.com",
    "comments": "Solution template for Dragos"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "resource group name where Microsoft Sentinel is setup"
      }
    },
    "subscription": {
      "type": "string",
      "defaultValue": "[last(split(subscription().id, '/'))]",
      "metadata": {
        "description": "subscription id where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@dragos.com",
    "_email": "[variables('email')]",
    "_solutionName": "Dragos",
    "_solutionVersion": "3.0.0",
    "solutionId": "dragosinc1734451815609.microsoft-sentinel-solution-dragos",
    "_solutionId": "[variables('solutionId')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','DragosNotificationsToSentinel')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosNotificationsToSentinel')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DragosNotificationsToSentinel-Parser')))]",
      "parserVersion1": "1.0.0",
      "parserContentId1": "DragosNotificationsToSentinel-Parser"
    },
    "parserObject2": {
      "_parserName2": "[concat(parameters('workspace'),'/','DragosPullNotificationsToSentinel')]",
      "_parserId2": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPullNotificationsToSentinel')]",
      "parserTemplateSpecName2": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DragosPullNotificationsToSentinel-Parser')))]",
      "parserVersion2": "1.0.0",
      "parserContentId2": "DragosPullNotificationsToSentinel-Parser"
    },
    "parserObject3": {
      "_parserName3": "[concat(parameters('workspace'),'/','DragosPushNotificationsToSentinel')]",
      "_parserId3": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPushNotificationsToSentinel')]",
      "parserTemplateSpecName3": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DragosPushNotificationsToSentinel-Parser')))]",
      "parserVersion3": "1.0.0",
      "parserContentId3": "DragosPushNotificationsToSentinel-Parser"
    },
    "parserObject4": {
      "_parserName4": "[concat(parameters('workspace'),'/','DragosSeverityToSentinelSeverity')]",
      "_parserId4": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosSeverityToSentinelSeverity')]",
      "parserTemplateSpecName4": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('DragosSeverityToSentinelSeverity-Parser')))]",
      "parserVersion4": "1.0.0",
      "parserContentId4": "DragosSeverityToSentinelSeverity-Parser"
    },
    "workspaceResourceId": "[resourceId('microsoft.OperationalInsights/Workspaces', parameters('workspace'))]",
    "dataConnectorCCPVersion": "1.0.0",
    "_dataConnectorContentIdConnectorDefinition1": "DragosSitestoreCCP",
    "dataConnectorTemplateNameConnectorDefinition1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnectorDefinition1')))]",
    "_dataConnectorContentIdConnections1": "DragosSitestoreCCPConnections",
    "dataConnectorTemplateNameConnections1": "[concat(parameters('workspace'),'-dc-',uniquestring(variables('_dataConnectorContentIdConnections1')))]",
    "dataCollectionEndpointId": "[concat('/subscriptions/',parameters('subscription'),'/resourceGroups/',parameters('resourceGroupName'),'/providers/Microsoft.Insights/dataCollectionEndpoints/',parameters('workspace'))]",
    "blanks": "[replace('b', 'b', '')]",
    "analyticRuleObject1": {
      "analyticRuleVersion1": "1.0.1",
      "_analyticRulecontentId1": "9a74fe72-4c21-4ac5-80d9-37434e809721",
      "analyticRuleId1": "[resourceId('Microsoft.SecurityInsights/AlertRuleTemplates', '9a74fe72-4c21-4ac5-80d9-37434e809721')]",
      "analyticRuleTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-ar-',uniquestring('9a74fe72-4c21-4ac5-80d9-37434e809721')))]",
      "_analyticRulecontentProductId1": "[concat(take(variables('_solutionId'),50),'-','ar','-', uniqueString(concat(variables('_solutionId'),'-','AnalyticsRule','-','9a74fe72-4c21-4ac5-80d9-37434e809721','-', '1.0.1')))]"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DragosNotificationsToSentinel Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Dragos Notifications Sentinel Incidents",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DragosNotificationsToSentinel",
                "query": "let existingIncidents = SecurityAlert\n  | where ProductName == \"Dragos\"\n  | extend CustomDetails=tostring(parse_json(ExtendedProperties)[\"Custom Details\"])\n  | extend id = toint(extract_json(\"$.DragosIdentifier[0]\", CustomDetails))\n  | project-keep SystemAlertId, id;\nunion isfuzzy=true DragosPushNotificationsToSentinel, DragosPullNotificationsToSentinel\n  | join kind=leftouter (existingIncidents) on id\n  | where isempty(SystemAlertId)\n  | sort by severity desc\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosNotificationsToSentinel')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Dragos",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "Dragos Notifications Sentinel Incidents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.0.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Dragos Notifications Sentinel Incidents",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DragosNotificationsToSentinel",
        "query": "let existingIncidents = SecurityAlert\n  | where ProductName == \"Dragos\"\n  | extend CustomDetails=tostring(parse_json(ExtendedProperties)[\"Custom Details\"])\n  | extend id = toint(extract_json(\"$.DragosIdentifier[0]\", CustomDetails))\n  | project-keep SystemAlertId, id;\nunion isfuzzy=true DragosPushNotificationsToSentinel, DragosPullNotificationsToSentinel\n  | join kind=leftouter (existingIncidents) on id\n  | where isempty(SystemAlertId)\n  | sort by severity desc\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosNotificationsToSentinel')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Dragos",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject2').parserTemplateSpecName2]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DragosPullNotificationsToSentinel Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject2').parserVersion2]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject2')._parserName2]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Dragos Pull Notifications Sentinel Incidents",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DragosPullNotificationsToSentinel",
                "query": "let Addresses = DragosAlerts_CL\n| mv-expand asset=assets\n| mv-expand address=asset.addresses\n| extend SentinelEntities=case(address.type == \"IP\",\n                                bag_pack(\"Type\", \"IP\", \"Address\", address.value, \"AddressScope\", address.networkId),\n                                address.type == \"HOSTNAME\",\n                                bag_pack(\"Type\", \"Host\", \"HostName\", address.value),\n                                address.type == \"DOMAIN\",\n                                bag_pack(\"Type\", \"Host\", \"HostName\", split(address.value, '.')[0], \"DnsDomain\", strcat_array(array_slice(split(address.value, '.'), 1, -1), '.')),\n                                dynamic(null))\n| extend MacAddresses = case(address.type == 'MAC', address.value, '')\n| extend IpAddresses = case(address.type == \"IP\", address.value, '');\nlet MitreThreatInfo = DragosAlerts_CL\n| mv-expand threat=threatInfo\n| extend MitreTactics=case(threat.framework == \"MITRE ATT&CK FOR ICS\" and threat.tactic.name != \"N/A\", replace_string(tostring(threat.tactic.name), \" \", \"\"), '')\n| extend MitreTechniques=case(threat.framework == \"MITRE ATT&CK FOR ICS\", threat.technique.id, '');\nlet existingIncidents = SecurityAlert\n    | where ProductName == \"Dragos\"\n    | extend CustomDetails=tostring(parse_json(ExtendedProperties)[\"Custom Details\"])\n    | extend id = toint(extract_json(\"$.DragosIdentifier[0]\", CustomDetails))\n    | project-keep SystemAlertId, id;\nDragosAlerts_CL\n| extend detectionQuads=strcat_array(detectionQuads, \",\")\n| extend threatInfo=strcat_array(threatInfo, \",\")\n| join kind=leftouter Addresses on id\n| join kind=leftouter MitreThreatInfo on id\n| extend notification_id = id\n| summarize SentinelEntities=make_list(SentinelEntities, 250), MacAddresses=make_list(MacAddresses, 250), IpAddresses=make_list(IpAddresses, 250), MitreTactics=make_set_if(MitreTactics, strlen(MitreTactics) > 0), MitreTechniques=make_set_if(MitreTechniques, strlen(MitreTechniques) > 0)  by id=notification_id, source, summary, content, severity, detectionQuads, createdAt, firstSeenAt, lastSeenAt, occurredAt, state, threatInfo\n| extend MacAddresses = set_difference(MacAddresses,dynamic([\"\"]))\n| extend IpAddresses = set_difference(IpAddresses,dynamic([\"\"]))\n| extend MitreTactics=strcat_array(MitreTactics, \",\")\n| extend AlertProductName=\"Dragos\"\n| extend DragosConnectorSource=\"DragosCcp\"\n| extend MSSentinelSeverity = DragosSeverityToSentinelSeverity(severity)\n| join kind=leftouter (existingIncidents) on id\n| where isempty(SystemAlertId)\n| summarize arg_max(createdAt, *) by id\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
              "dependsOn": [
                "[variables('parserObject2')._parserId2]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPullNotificationsToSentinel')]",
                "contentId": "[variables('parserObject2').parserContentId2]",
                "kind": "Parser",
                "version": "[variables('parserObject2').parserVersion2]",
                "source": {
                  "name": "Dragos",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "contentKind": "Parser",
        "displayName": "Dragos Pull Notifications Sentinel Incidents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject2').parserContentId2,'-', '1.0.0')))]",
        "version": "[variables('parserObject2').parserVersion2]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject2')._parserName2]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Dragos Pull Notifications Sentinel Incidents",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DragosPullNotificationsToSentinel",
        "query": "let Addresses = DragosAlerts_CL\n| mv-expand asset=assets\n| mv-expand address=asset.addresses\n| extend SentinelEntities=case(address.type == \"IP\",\n                                bag_pack(\"Type\", \"IP\", \"Address\", address.value, \"AddressScope\", address.networkId),\n                                address.type == \"HOSTNAME\",\n                                bag_pack(\"Type\", \"Host\", \"HostName\", address.value),\n                                address.type == \"DOMAIN\",\n                                bag_pack(\"Type\", \"Host\", \"HostName\", split(address.value, '.')[0], \"DnsDomain\", strcat_array(array_slice(split(address.value, '.'), 1, -1), '.')),\n                                dynamic(null))\n| extend MacAddresses = case(address.type == 'MAC', address.value, '')\n| extend IpAddresses = case(address.type == \"IP\", address.value, '');\nlet MitreThreatInfo = DragosAlerts_CL\n| mv-expand threat=threatInfo\n| extend MitreTactics=case(threat.framework == \"MITRE ATT&CK FOR ICS\" and threat.tactic.name != \"N/A\", replace_string(tostring(threat.tactic.name), \" \", \"\"), '')\n| extend MitreTechniques=case(threat.framework == \"MITRE ATT&CK FOR ICS\", threat.technique.id, '');\nlet existingIncidents = SecurityAlert\n    | where ProductName == \"Dragos\"\n    | extend CustomDetails=tostring(parse_json(ExtendedProperties)[\"Custom Details\"])\n    | extend id = toint(extract_json(\"$.DragosIdentifier[0]\", CustomDetails))\n    | project-keep SystemAlertId, id;\nDragosAlerts_CL\n| extend detectionQuads=strcat_array(detectionQuads, \",\")\n| extend threatInfo=strcat_array(threatInfo, \",\")\n| join kind=leftouter Addresses on id\n| join kind=leftouter MitreThreatInfo on id\n| extend notification_id = id\n| summarize SentinelEntities=make_list(SentinelEntities, 250), MacAddresses=make_list(MacAddresses, 250), IpAddresses=make_list(IpAddresses, 250), MitreTactics=make_set_if(MitreTactics, strlen(MitreTactics) > 0), MitreTechniques=make_set_if(MitreTechniques, strlen(MitreTechniques) > 0)  by id=notification_id, source, summary, content, severity, detectionQuads, createdAt, firstSeenAt, lastSeenAt, occurredAt, state, threatInfo\n| extend MacAddresses = set_difference(MacAddresses,dynamic([\"\"]))\n| extend IpAddresses = set_difference(IpAddresses,dynamic([\"\"]))\n| extend MitreTactics=strcat_array(MitreTactics, \",\")\n| extend AlertProductName=\"Dragos\"\n| extend DragosConnectorSource=\"DragosCcp\"\n| extend MSSentinelSeverity = DragosSeverityToSentinelSeverity(severity)\n| join kind=leftouter (existingIncidents) on id\n| where isempty(SystemAlertId)\n| summarize arg_max(createdAt, *) by id\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject2')._parserId2,'/'))))]",
      "dependsOn": [
        "[variables('parserObject2')._parserId2]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPullNotificationsToSentinel')]",
        "contentId": "[variables('parserObject2').parserContentId2]",
        "kind": "Parser",
        "version": "[variables('parserObject2').parserVersion2]",
        "source": {
          "kind": "Solution",
          "name": "Dragos",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject3').parserTemplateSpecName3]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DragosPushNotificationsToSentinel Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject3').parserVersion3]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject3')._parserName3]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Dragos Push Notifications Sentinel Incidents",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DragosPushNotificationsToSentinel",
                "query": "// Format IP addresses into the proper Sentinel Entity format\nlet IpAddresses = CommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| extend IpAddresses = set_difference(array_concat(split(SourceIP, ','), split(DestinationIP, ',')), dynamic([\"\"]))\n| mv-apply IpAddress = IpAddresses on (\n    extend SentinelIpAddress = pack(\"Type\", \"IP\", \"Address\", IpAddress)\n)\n| summarize SentinelIpAddresses = make_list(SentinelIpAddress, 250), IpAddresses = make_list(IpAddress, 250) by ExtID;\n// Format Hosts into the proper Sentinel format\nlet Hosts = CommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| extend Hosts = set_difference(array_concat(split(SourceHostName, ','), split(DestinationHostName, ',')), dynamic([\"\"]))\n| mv-apply Host = Hosts on (\n    extend SentinelHost = pack(\"Type\", \"Host\", \"HostName\", Host)\n)\n| summarize SentinelHosts = make_list(SentinelHost, 250), Hosts = make_list(Host, 250) by ExtID;\nCommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| join kind=leftouter (IpAddresses) on ExtID\n| join kind=leftouter (Hosts) on ExtID\n| extend SentinelEntities=array_concat(SentinelIpAddresses, SentinelHosts)\n| extend MacAddresses = set_difference(array_concat(split(SourceMACAddress, ','), split(DestinationMACAddress, ',')), dynamic([\"\"]))\n| extend id=toint(ExtID), summary=Activity, content=Message, severity=toint(LogSeverity), detectionQuads=DeviceCustomString3, occurredAt=todatetime(DeviceCustomDate1), createdAt=todatetime(DeviceCustomDate2), AlertProductName=\"Dragos\"\n| extend MSSentinelSeverity = DragosSeverityToSentinelSeverity(severity)\n| extend DragosConnectorSource=\"DragosCefViaAma\"\n// Populate MitreInfo\n| extend MitreTactics = case(DeviceCustomString1 has \"N/A\", \"\",\n                             DeviceCustomString1 has \"None\", \"\", \n                             replace_string(DeviceCustomString1, \" \", \"\"))\n| extend MitreTechniques = dynamic([])\n// Default values that are not present in the data sent via syslog\n| extend state=\"\", threatInfo=strcat(''), firstSeenAt=datetime(null), lastSeenAt=datetime(null), source=\"\"\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
              "dependsOn": [
                "[variables('parserObject3')._parserId3]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPushNotificationsToSentinel')]",
                "contentId": "[variables('parserObject3').parserContentId3]",
                "kind": "Parser",
                "version": "[variables('parserObject3').parserVersion3]",
                "source": {
                  "name": "Dragos",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "contentKind": "Parser",
        "displayName": "Dragos Push Notifications Sentinel Incidents",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject3').parserContentId3,'-', '1.0.0')))]",
        "version": "[variables('parserObject3').parserVersion3]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject3')._parserName3]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Dragos Push Notifications Sentinel Incidents",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DragosPushNotificationsToSentinel",
        "query": "// Format IP addresses into the proper Sentinel Entity format\nlet IpAddresses = CommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| extend IpAddresses = set_difference(array_concat(split(SourceIP, ','), split(DestinationIP, ',')), dynamic([\"\"]))\n| mv-apply IpAddress = IpAddresses on (\n    extend SentinelIpAddress = pack(\"Type\", \"IP\", \"Address\", IpAddress)\n)\n| summarize SentinelIpAddresses = make_list(SentinelIpAddress, 250), IpAddresses = make_list(IpAddress, 250) by ExtID;\n// Format Hosts into the proper Sentinel format\nlet Hosts = CommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| extend Hosts = set_difference(array_concat(split(SourceHostName, ','), split(DestinationHostName, ',')), dynamic([\"\"]))\n| mv-apply Host = Hosts on (\n    extend SentinelHost = pack(\"Type\", \"Host\", \"HostName\", Host)\n)\n| summarize SentinelHosts = make_list(SentinelHost, 250), Hosts = make_list(Host, 250) by ExtID;\nCommonSecurityLog\n| where DeviceVendor == 'Dragos' and DeviceProduct == 'Platform' and DeviceVersion == '2'\n| join kind=leftouter (IpAddresses) on ExtID\n| join kind=leftouter (Hosts) on ExtID\n| extend SentinelEntities=array_concat(SentinelIpAddresses, SentinelHosts)\n| extend MacAddresses = set_difference(array_concat(split(SourceMACAddress, ','), split(DestinationMACAddress, ',')), dynamic([\"\"]))\n| extend id=toint(ExtID), summary=Activity, content=Message, severity=toint(LogSeverity), detectionQuads=DeviceCustomString3, occurredAt=todatetime(DeviceCustomDate1), createdAt=todatetime(DeviceCustomDate2), AlertProductName=\"Dragos\"\n| extend MSSentinelSeverity = DragosSeverityToSentinelSeverity(severity)\n| extend DragosConnectorSource=\"DragosCefViaAma\"\n// Populate MitreInfo\n| extend MitreTactics = case(DeviceCustomString1 has \"N/A\", \"\",\n                             DeviceCustomString1 has \"None\", \"\", \n                             replace_string(DeviceCustomString1, \" \", \"\"))\n| extend MitreTechniques = dynamic([])\n// Default values that are not present in the data sent via syslog\n| extend state=\"\", threatInfo=strcat(''), firstSeenAt=datetime(null), lastSeenAt=datetime(null), source=\"\"\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject3')._parserId3,'/'))))]",
      "dependsOn": [
        "[variables('parserObject3')._parserId3]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosPushNotificationsToSentinel')]",
        "contentId": "[variables('parserObject3').parserContentId3]",
        "kind": "Parser",
        "version": "[variables('parserObject3').parserVersion3]",
        "source": {
          "kind": "Solution",
          "name": "Dragos",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject4').parserTemplateSpecName4]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DragosSeverityToSentinelSeverity Data Parser with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject4').parserVersion4]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject4')._parserName4]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "Convert Dragos Notification Severity to Sentinel",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "DragosSeverityToSentinelSeverity",
                "query": "case(DragosSeverity == 0, \"Informational\",\n      DragosSeverity == 1, \"Informational\",\n      DragosSeverity == 2, \"Low\",\n      DragosSeverity == 3, \"Medium\",\n      DragosSeverity == 4, \"High\",\n      DragosSeverity == 5, \"High\",\n      \"Unknown\")\n",
                "functionParameters": "DragosSeverity:int",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
              "dependsOn": [
                "[variables('parserObject4')._parserId4]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosSeverityToSentinelSeverity')]",
                "contentId": "[variables('parserObject4').parserContentId4]",
                "kind": "Parser",
                "version": "[variables('parserObject4').parserVersion4]",
                "source": {
                  "name": "Dragos",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "contentKind": "Parser",
        "displayName": "Convert Dragos Notification Severity to Sentinel",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject4').parserContentId4,'-', '1.0.0')))]",
        "version": "[variables('parserObject4').parserVersion4]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject4')._parserName4]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "Convert Dragos Notification Severity to Sentinel",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "DragosSeverityToSentinelSeverity",
        "query": "case(DragosSeverity == 0, \"Informational\",\n      DragosSeverity == 1, \"Informational\",\n      DragosSeverity == 2, \"Low\",\n      DragosSeverity == 3, \"Medium\",\n      DragosSeverity == 4, \"High\",\n      DragosSeverity == 5, \"High\",\n      \"Unknown\")\n",
        "functionParameters": "DragosSeverity:int",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject4')._parserId4,'/'))))]",
      "dependsOn": [
        "[variables('parserObject4')._parserId4]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'DragosSeverityToSentinelSeverity')]",
        "contentId": "[variables('parserObject4').parserContentId4]",
        "kind": "Parser",
        "version": "[variables('parserObject4').parserVersion4]",
        "source": {
          "kind": "Solution",
          "name": "Dragos",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnectorDefinition1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "displayName": " Dragos Notifications via Cloud Sitestore",
        "contentKind": "DataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
              "apiVersion": "2022-09-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
              "location": "[parameters('workspace-location')]",
              "kind": "Customizable",
              "properties": {
                "connectorUiConfig": {
                  "id": "DragosSitestoreCCP",
                  "title": " Dragos Notifications via Cloud Sitestore",
                  "publisher": "Dragos",
                  "descriptionMarkdown": "The [Dragos Platform](https://www.dragos.com/) is the leading Industrial Cyber Security platform it offers a comprehensive Operational Technology (OT) cyber threat detection built by unrivaled industrial cybersecurity expertise. This solution enables Dragos Platform notification data to be viewed in Microsoft Sentinel so that security analysts are able to triage potential cyber security events occurring in their industrial environments.",
                  "graphQueriesTableName": "DragosAlerts_CL",
                  "graphQueries": [
                    {
                      "metricName": "Total data received",
                      "legend": "Dragos Sitestore Alerts",
                      "baseQuery": "{{graphQueriesTableName}}"
                    }
                  ],
                  "sampleQueries": [
                    {
                      "description": "All Dragos Sitestore alerts",
                      "query": "{{graphQueriesTableName}}\n| sort by TimeGenerated desc"
                    },
                    {
                      "description": "Total Alerts",
                      "query": "{{graphQueriesTableName}}\n | summarize count() by id"
                    }
                  ],
                  "dataTypes": [
                    {
                      "name": "{{graphQueriesTableName}}",
                      "lastDataReceivedQuery": "{{graphQueriesTableName}}|summarize Time = max  (TimeGenerated)\n|where isnotempty(Time)"
                    }
                  ],
                  "connectivityCriteria": [
                    {
                      "type": "HasDataConnectors"
                    }
                  ],
                  "availability": {
                    "isPreview": false
                  },
                  "permissions": {
                    "resourceProvider": [
                      {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "Read and Write permissions are required.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                          "write": true,
                          "read": true,
                          "delete": true
                        }
                      }
                    ],
                    "customs": [
                      {
                        "name": "Dragos Sitestore API access",
                        "description": "A Sitestore user account that has the `notification:read` permission. This account also needs to have an API key that can be provided to Sentinel."
                      }
                    ]
                  },
                  "instructionSteps": [
                    {
                      "description": "Please provide the following information to allow Microsoft Sentinel to connect to your Dragos Sitestore.",
                      "instructions": [
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Dragos Sitestore Hostname",
                            "placeholder": "dragossitestore.example.com",
                            "type": "text",
                            "name": "dragosSitestoreHostname"
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Dragos Sitestore API Key ID",
                            "placeholder": "Enter the API key ID.",
                            "type": "text",
                            "name": "username"
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Dragos Sitestore API Key Secret",
                            "placeholder": "Enter the API key secret",
                            "type": "password",
                            "name": "password"
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Minimum Notification Severity. Valid values are 0-5 inclusive. Ensure less than or equal to maximum severity.",
                            "placeholder": "Enter the min severity (recommend 0 for all notifications)",
                            "type": "number",
                            "name": "minSeverity"
                          }
                        },
                        {
                          "type": "Textbox",
                          "parameters": {
                            "label": "Maximum Notification Severity. Valid values are 0-5 inclusive. Ensure greater than or equal to minimum severity.",
                            "placeholder": "Enter the max severity (recommend 5 for all notifications)",
                            "type": "number",
                            "name": "maxSeverity"
                          }
                        },
                        {
                          "type": "ConnectionToggleButton",
                          "parameters": {
                            "connectLabel": "Connect to Sitestore",
                            "disconnectLabel": "Disconnect from Sitestore",
                            "name": "connectionToggle"
                          }
                        }
                      ]
                    }
                  ]
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
                "kind": "DataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                },
                "dependencies": {
                  "criteria": [
                    {
                      "version": "[variables('dataConnectorCCPVersion')]",
                      "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                      "kind": "ResourcesDataConnector"
                    }
                  ]
                }
              }
            },
            {
              "name": "DragosSitestoreDCR",
              "apiVersion": "2022-06-01",
              "type": "Microsoft.Insights/dataCollectionRules",
              "location": "[parameters('workspace-location')]",
              "kind": "[variables('blanks')]",
              "properties": {
                "streamDeclarations": {
                  "Custom-DragosAlerts_CL": {
                    "columns": [
                      {
                        "name": "TimeGenerated",
                        "type": "datetime"
                      },
                      {
                        "name": "notificationType",
                        "type": "string"
                      },
                      {
                        "name": "source",
                        "type": "string"
                      },
                      {
                        "name": "summary",
                        "type": "string"
                      },
                      {
                        "name": "content",
                        "type": "string"
                      },
                      {
                        "name": "severity",
                        "type": "int"
                      },
                      {
                        "name": "id",
                        "type": "int"
                      },
                      {
                        "name": "createdAt",
                        "type": "datetime"
                      },
                      {
                        "name": "reviewed",
                        "type": "boolean"
                      },
                      {
                        "name": "retained",
                        "type": "boolean"
                      },
                      {
                        "name": "state",
                        "type": "string"
                      },
                      {
                        "name": "detectorId",
                        "type": "string"
                      },
                      {
                        "name": "occurredAt",
                        "type": "datetime"
                      },
                      {
                        "name": "firstSeenAt",
                        "type": "datetime"
                      },
                      {
                        "name": "lastSeenAt",
                        "type": "datetime"
                      },
                      {
                        "name": "collectors",
                        "type": "dynamic"
                      },
                      {
                        "name": "analyticEventId",
                        "type": "string"
                      },
                      {
                        "name": "analyticEventIndex",
                        "type": "string"
                      },
                      {
                        "name": "sourceIndex",
                        "type": "string"
                      },
                      {
                        "name": "sourceIdField",
                        "type": "string"
                      },
                      {
                        "name": "sourceIds",
                        "type": "dynamic"
                      },
                      {
                        "name": "threatInfo",
                        "type": "dynamic"
                      },
                      {
                        "name": "assets",
                        "type": "dynamic"
                      },
                      {
                        "name": "count",
                        "type": "int"
                      },
                      {
                        "name": "matchedRuleIds",
                        "type": "dynamic"
                      },
                      {
                        "name": "detectionQuads",
                        "type": "dynamic"
                      }
                    ]
                  }
                },
                "destinations": {
                  "logAnalytics": [
                    {
                      "workspaceResourceId": "[variables('workspaceResourceId')]",
                      "name": "clv2ws2"
                    }
                  ]
                },
                "dataFlows": [
                  {
                    "streams": [
                      "Custom-DragosAlerts_CL"
                    ],
                    "destinations": [
                      "clv2ws2"
                    ],
                    "transformKql": "source\n| extend TimeGenerated = iff(isempty(createdAt), now(), createdAt)",
                    "outputStream": "Custom-DragosAlerts_CL"
                  }
                ],
                "dataCollectionEndpointId": "[variables('dataCollectionEndpointId')]"
              }
            },
            {
              "name": "DragosAlerts_CL",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/tables",
              "location": "[parameters('workspace-location')]",
              "kind": null,
              "properties": {
                "schema": {
                  "name": "DragosAlerts_CL",
                  "columns": [
                    {
                      "name": "TimeGenerated",
                      "type": "datetime"
                    },
                    {
                      "name": "notificationType",
                      "type": "string"
                    },
                    {
                      "name": "source",
                      "type": "string"
                    },
                    {
                      "name": "summary",
                      "type": "string"
                    },
                    {
                      "name": "content",
                      "type": "string"
                    },
                    {
                      "name": "severity",
                      "type": "int"
                    },
                    {
                      "name": "id",
                      "type": "int"
                    },
                    {
                      "name": "createdAt",
                      "type": "datetime"
                    },
                    {
                      "name": "reviewed",
                      "type": "boolean"
                    },
                    {
                      "name": "retained",
                      "type": "boolean"
                    },
                    {
                      "name": "state",
                      "type": "string"
                    },
                    {
                      "name": "detectorId",
                      "type": "string"
                    },
                    {
                      "name": "occurredAt",
                      "type": "datetime"
                    },
                    {
                      "name": "firstSeenAt",
                      "type": "datetime"
                    },
                    {
                      "name": "lastSeenAt",
                      "type": "datetime"
                    },
                    {
                      "name": "collectors",
                      "type": "dynamic"
                    },
                    {
                      "name": "analyticEventId",
                      "type": "string"
                    },
                    {
                      "name": "analyticEventIndex",
                      "type": "string"
                    },
                    {
                      "name": "sourceIndex",
                      "type": "string"
                    },
                    {
                      "name": "sourceIdField",
                      "type": "string"
                    },
                    {
                      "name": "sourceIds",
                      "type": "dynamic"
                    },
                    {
                      "name": "threatInfo",
                      "type": "dynamic"
                    },
                    {
                      "name": "assets",
                      "type": "dynamic"
                    },
                    {
                      "name": "count",
                      "type": "int"
                    },
                    {
                      "name": "matchedRuleIds",
                      "type": "dynamic"
                    },
                    {
                      "name": "detectionQuads",
                      "type": "dynamic"
                    }
                  ]
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','dc','-', uniqueString(concat(variables('_solutionId'),'-','DataConnector','-',variables('_dataConnectorContentIdConnectorDefinition1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',variables('_dataConnectorContentIdConnectorDefinition1'))]",
      "apiVersion": "2022-09-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectorDefinitions",
      "location": "[parameters('workspace-location')]",
      "kind": "Customizable",
      "properties": {
        "connectorUiConfig": {
          "id": "DragosSitestoreCCP",
          "title": " Dragos Notifications via Cloud Sitestore",
          "publisher": "Dragos",
          "descriptionMarkdown": "The [Dragos Platform](https://www.dragos.com/) is the leading Industrial Cyber Security platform it offers a comprehensive Operational Technology (OT) cyber threat detection built by unrivaled industrial cybersecurity expertise. This solution enables Dragos Platform notification data to be viewed in Microsoft Sentinel so that security analysts are able to triage potential cyber security events occurring in their industrial environments.",
          "graphQueriesTableName": "DragosAlerts_CL",
          "graphQueries": [
            {
              "metricName": "Total data received",
              "legend": "Dragos Sitestore Alerts",
              "baseQuery": "{{graphQueriesTableName}}"
            }
          ],
          "sampleQueries": [
            {
              "description": "All Dragos Sitestore alerts",
              "query": "{{graphQueriesTableName}}\n| sort by TimeGenerated desc"
            },
            {
              "description": "Total Alerts",
              "query": "{{graphQueriesTableName}}\n | summarize count() by id"
            }
          ],
          "dataTypes": [
            {
              "name": "{{graphQueriesTableName}}",
              "lastDataReceivedQuery": "{{graphQueriesTableName}}|summarize Time = max  (TimeGenerated)\n|where isnotempty(Time)"
            }
          ],
          "connectivityCriteria": [
            {
              "type": "HasDataConnectors"
            }
          ],
          "availability": {
            "isPreview": false
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "Read and Write permissions are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              }
            ],
            "customs": [
              {
                "name": "Dragos Sitestore API access",
                "description": "A Sitestore user account that has the `notification:read` permission. This account also needs to have an API key that can be provided to Sentinel."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": "Please provide the following information to allow Microsoft Sentinel to connect to your Dragos Sitestore.",
              "instructions": [
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Dragos Sitestore Hostname",
                    "placeholder": "dragossitestore.example.com",
                    "type": "text",
                    "name": "dragosSitestoreHostname"
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Dragos Sitestore API Key ID",
                    "placeholder": "Enter the API key ID.",
                    "type": "text",
                    "name": "username"
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Dragos Sitestore API Key Secret",
                    "placeholder": "Enter the API key secret",
                    "type": "password",
                    "name": "password"
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Minimum Notification Severity. Valid values are 0-5 inclusive. Ensure less than or equal to maximum severity.",
                    "placeholder": "Enter the min severity (recommend 0 for all notifications)",
                    "type": "number",
                    "name": "minSeverity"
                  }
                },
                {
                  "type": "Textbox",
                  "parameters": {
                    "label": "Maximum Notification Severity. Valid values are 0-5 inclusive. Ensure greater than or equal to minimum severity.",
                    "placeholder": "Enter the max severity (recommend 5 for all notifications)",
                    "type": "number",
                    "name": "maxSeverity"
                  }
                },
                {
                  "type": "ConnectionToggleButton",
                  "parameters": {
                    "connectLabel": "Connect to Sitestore",
                    "disconnectLabel": "Disconnect from Sitestore",
                    "name": "connectionToggle"
                  }
                }
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnectorDefinition1')))]",
      "apiVersion": "2022-01-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "properties": {
        "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectorDefinitions', variables('_dataConnectorContentIdConnectorDefinition1'))]",
        "contentId": "[variables('_dataConnectorContentIdConnectorDefinition1')]",
        "kind": "DataConnector",
        "version": "[variables('dataConnectorCCPVersion')]",
        "source": {
          "sourceId": "[variables('_solutionId')]",
          "name": "[variables('_solutionName')]",
          "kind": "Solution"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        },
        "dependencies": {
          "criteria": [
            {
              "version": "[variables('dataConnectorCCPVersion')]",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "kind": "ResourcesDataConnector"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('dataConnectorTemplateNameConnections1'), variables('dataConnectorCCPVersion'))]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "contentId": "[variables('_dataConnectorContentIdConnections1')]",
        "displayName": " Dragos Notifications via Cloud Sitestore",
        "contentKind": "ResourcesDataConnector",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('dataConnectorCCPVersion')]",
          "parameters": {
            "username": {
              "defaultValue": "Enter username value",
              "type": "string",
              "minLength": 4
            },
            "password": {
              "defaultValue": "-NA-",
              "type": "securestring",
              "minLength": 4
            },
            "dragosSitestoreHostname": {
              "defaultValue": "Enter dragosSitestoreHostname value",
              "type": "string",
              "minLength": 1
            },
            "connectorDefinitionName": {
              "defaultValue": " Dragos Notifications via Cloud Sitestore",
              "type": "string",
              "minLength": 1
            },
            "workspace": {
              "defaultValue": "[parameters('workspace')]",
              "type": "string"
            },
            "dcrConfig": {
              "defaultValue": {
                "dataCollectionEndpoint": "data collection Endpoint",
                "dataCollectionRuleImmutableId": "data collection rule immutableId"
              },
              "type": "object"
            },
            "minSeverity": {
              "defaultValue": "minSeverity",
              "type": "string",
              "minLength": 1
            },
            "maxSeverity": {
              "defaultValue": "maxSeverity",
              "type": "string",
              "minLength": 1
            }
          },
          "variables": {
            "_dataConnectorContentIdConnections1": "[variables('_dataConnectorContentIdConnections1')]"
          },
          "resources": [
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('DataConnector-', variables('_dataConnectorContentIdConnections1')))]",
              "apiVersion": "2022-01-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "properties": {
                "parentId": "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/dataConnectors', variables('_dataConnectorContentIdConnections1'))]",
                "contentId": "[variables('_dataConnectorContentIdConnections1')]",
                "kind": "ResourcesDataConnector",
                "version": "[variables('dataConnectorCCPVersion')]",
                "source": {
                  "sourceId": "[variables('_solutionId')]",
                  "name": "[variables('_solutionName')]",
                  "kind": "Solution"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            },
            {
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', 'dataPoller')]",
              "apiVersion": "2023-02-01-preview",
              "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
              "location": "[parameters('workspace-location')]",
              "kind": "RestApiPoller",
              "properties": {
                "connectorDefinitionName": "DragosSitestoreCCP",
                "dataType": "Dragos Sitestore Alerts",
                "dcrConfig": {
                  "streamName": "Custom-DragosAlerts_CL",
                  "dataCollectionEndpoint": "[[parameters('dcrConfig').dataCollectionEndpoint]",
                  "dataCollectionRuleImmutableId": "[[parameters('dcrConfig').dataCollectionRuleImmutableId]"
                },
                "auth": {
                  "type": "Basic",
                  "UserName": "[[parameters('username')]",
                  "Password": "[[parameters('password')]"
                },
                "request": {
                  "apiEndpoint": "[[concat('https://', parameters('dragosSitestoreHostname'), '/notifications/api/v2/notification')]",
                  "rateLimitQPS": 15,
                  "queryWindowInMin": 5,
                  "httpMethod": "GET",
                  "retryCount": 4,
                  "timeoutInSeconds": 45,
                  "headers": {
                    "Accept": "application/json",
                    "User-Agent": "MS-Sentinel-CCP-Dragos"
                  },
                  "queryParameters": {
                    "sorts": "id:a",
                    "filter": "[[concat('type!=''Baseline'';type!=''System'';createdAt=ge=''{_QueryWindowStartTime}'';createdAt=lt=''{_QueryWindowEndTime}'';severity>=', parameters('minSeverity'), ';severity<=', parameters('maxSeverity'))]"
                  }
                },
                "response": {
                  "eventsJsonPaths": [
                    "$.content"
                  ],
                  "format": "json"
                },
                "paging": {
                  "pagingType": "Offset",
                  "pageSizeParameterName": "pageSize",
                  "pageSize": 25,
                  "offsetParaName": "offset"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "contentProductId": "[concat(take(variables('_solutionId'), 50),'-','rdc','-', uniqueString(concat(variables('_solutionId'),'-','ResourcesDataConnector','-',variables('_dataConnectorContentIdConnections1'),'-', variables('dataConnectorCCPVersion'))))]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "version": "[variables('dataConnectorCCPVersion')]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('analyticRuleObject1').analyticRuleTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "DragosNotifiction_AnalyticalRules Analytics Rule with template version 3.0.0",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('analyticRuleObject1').analyticRuleVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.SecurityInsights/AlertRuleTemplates",
              "name": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "apiVersion": "2023-02-01-preview",
              "kind": "Scheduled",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "description": "Fires Microsoft Sentinel alerts for Dragos Notifcations.",
                "displayName": "Dragos Notifications",
                "enabled": false,
                "query": "DragosNotificationsToSentinel()\n",
                "queryFrequency": "PT10M",
                "queryPeriod": "PT1H",
                "severity": "Medium",
                "suppressionDuration": "PT1H",
                "suppressionEnabled": false,
                "triggerOperator": "GreaterThan",
                "triggerThreshold": 0,
                "status": "Available",
                "requiredDataConnectors": [
                  {
                    "connectorId": "DragosSitestoreCCP",
                    "dataTypes": [
                      "DragosAlerts_CL"
                    ]
                  },
                  {
                    "connectorId": "CefAma",
                    "dataTypes": [
                      "CommonSecurityLog"
                    ]
                  }
                ],
                "entityMappings": [
                  {
                    "fieldMappings": [
                      {
                        "columnName": "SentinelEntities",
                        "identifier": "Entities"
                      }
                    ],
                    "entityType": "SentinelEntities"
                  }
                ],
                "eventGroupingSettings": {
                  "aggregationKind": "AlertPerResult"
                },
                "customDetails": {
                  "DragosSource": "source",
                  "DragosIpAddresses": "IpAddresses",
                  "DragosCreatedAt": "createdAt",
                  "DragosFirstSeenAt": "firstSeenAt",
                  "DragosDetectionQuads": "detectionQuads",
                  "DragosMacAddresses": "MacAddresses",
                  "DragosConnectSrc": "DragosConnectorSource",
                  "DragosSeverity": "severity",
                  "DragosOccurredAt": "occurredAt",
                  "DragosThreatInfo": "threatInfo",
                  "DragosState": "state",
                  "DragosIdentifier": "id",
                  "DragosLastSeenAt": "lastSeenAt"
                },
                "alertDetailsOverride": {
                  "alertDisplayNameFormat": "Dragos: {{summary}}",
                  "alertSeverityColumnName": "MSSentinelSeverity",
                  "alertDescriptionFormat": "{{content}}",
                  "alertTacticsColumnName": "MitreTactics",
                  "alertDynamicProperties": [
                    {
                      "value": "MitreTechniques",
                      "alertProperty": "Techniques"
                    },
                    {
                      "value": "AlertProductName",
                      "alertProperty": "ProductName"
                    }
                  ]
                },
                "incidentConfiguration": {
                  "createIncident": true,
                  "groupingConfiguration": {
                    "matchingMethod": "Selected",
                    "enabled": true,
                    "lookbackDuration": "PT1H",
                    "reopenClosedIncident": false,
                    "groupByCustomDetails": [
                      "DragosIdentifier"
                    ]
                  }
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('AnalyticsRule-', last(split(variables('analyticRuleObject1').analyticRuleId1,'/'))))]",
              "properties": {
                "description": "Dragos Analytics Rule 1",
                "parentId": "[variables('analyticRuleObject1').analyticRuleId1]",
                "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
                "kind": "AnalyticsRule",
                "version": "[variables('analyticRuleObject1').analyticRuleVersion1]",
                "source": {
                  "kind": "Solution",
                  "name": "Dragos",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Dragos Inc.",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Dragos Inc",
                  "email": "support@dragos.com",
                  "tier": "Partner",
                  "link": "https://www.dragos.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
        "contentKind": "AnalyticsRule",
        "displayName": "Dragos Notifications",
        "contentProductId": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "id": "[variables('analyticRuleObject1')._analyticRulecontentProductId1]",
        "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Dragos",
        "publisherDisplayName": "Dragos Inc",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Dragos/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.dragos.com/\">Dragos Platform</a> is the leading Industrial Cyber Security platform it offers a comprehensive Operational Technology (OT) cyber threat detection built by unrivaled industrial cybersecurity expertise. This solution enables Dragos Platform notification data to be viewed in Microsoft Sentinel so that security analysts are able to triage potential cyber security events occurring in their industrial environments.</p>\n<p><strong>Data Connectors:</strong> 1, <strong>Parsers:</strong> 4, <strong>Analytic Rules:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/Dragos.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Dragos",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Dragos Inc.",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Dragos Inc",
          "email": "support@dragos.com",
          "tier": "Partner",
          "link": "https://www.dragos.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject2').parserContentId2]",
              "version": "[variables('parserObject2').parserVersion2]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject3').parserContentId3]",
              "version": "[variables('parserObject3').parserVersion3]"
            },
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject4').parserContentId4]",
              "version": "[variables('parserObject4').parserVersion4]"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_dataConnectorContentIdConnections1')]",
              "version": "[variables('dataConnectorCCPVersion')]"
            },
            {
              "kind": "AnalyticsRule",
              "contentId": "[variables('analyticRuleObject1')._analyticRulecontentId1]",
              "version": "[variables('analyticRuleObject1').analyticRuleVersion1]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-commoneventformat"
            }
          ]
        },
        "firstPublishDate": "2025-01-23",
        "lastPublishDate": "2025-01-23",
        "providers": [
          "Dragos"
        ],
        "categories": {
          "domains": [
            "Security - Network"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
