{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Stefan BÃ¼hlmann",
    "comments": "Solution template for JoeSandbox"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    },
    "playbook1-JoeSandboxBaseURL": {
      "defaultValue": "https://jbxcloud.joesecurity.org",
      "type": "string",
      "minLength": 1
    },
    "playbook1-JoeSandboxAPIKey": {
      "type": "securestring",
      "minLength": 1,
      "metadata": {
        "description": "ApiKey to connect to JoeSandbox API"
      }
    },
    "playbook1-Resubmit": {
      "defaultValue": true,
      "type": "string",
      "minLength": 1
    },
    "playbook1-FunctionAppName": {
      "defaultValue": "joesandboxenrich",
      "type": "string",
      "minLength": 1
    },
    "playbook1-AppInsightsWorkspaceResourceID": {
      "defaultValue": "",
      "type": "string",
      "minLength": 1
    },
    "playbook2-PlaybookName": {
      "defaultValue": "JoeSandbox-Submit-Url-Sentinel-Incident",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook2-WorkspaceID": {
      "defaultValue": "",
      "type": "string",
      "minLength": 1
    },
    "playbook2-FunctionAppName": {
      "defaultValue": "joesandboxenrich",
      "type": "string",
      "minLength": 1
    },
    "playbook3-PlaybookName": {
      "defaultValue": "JoeSandbox_Outlook_Attachment_Analysis",
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Resource name for the logic app playbook.  No spaces are allowed"
      }
    },
    "playbook3-WorkspaceName": {
      "defaultValue": "",
      "type": "string",
      "minLength": 1
    },
    "playbook3-WorkspaceID": {
      "defaultValue": "",
      "type": "string",
      "minLength": 1
    },
    "playbook3-FunctionAppName": {
      "defaultValue": "joesandboxenrich",
      "type": "string",
      "minLength": 1
    },
    "connector1-name": {
      "type": "string",
      "defaultValue": "32a80e8b-36c2-480e-854d-4c95944ac3d2"
    }
  },
  "variables": {
    "playbook1-JoeSandboxEnrichment_FunctionAppConnector": "playbook1-JoeSandboxEnrichment_FunctionAppConnector",
    "_playbook1-JoeSandboxEnrichment_FunctionAppConnector": "[variables('playbook1-JoeSandboxEnrichment_FunctionAppConnector')]",
    "playbook1-FunctionName": "[concat(toLower(parameters('playbook1-FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "playbook1-StorageSuffix": "[environment().suffixes.storage]",
    "playbook2-JoeSandbox-Submit-Url-Sentinel-Incident": "playbook2-JoeSandbox-Submit-Url-Sentinel-Incident",
    "_playbook2-JoeSandbox-Submit-Url-Sentinel-Incident": "[variables('playbook2-JoeSandbox-Submit-Url-Sentinel-Incident')]",
    "playbook2-functionappName": "[concat(toLower(parameters('playbook2-FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "playbook2-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook2-PlaybookName'))]",
    "playbook-2-connection-1": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]",
    "_playbook-2-connection-1": "[variables('playbook-2-connection-1')]",
    "playbook3-JoeSandbox_Outlook_Attachment_Analysis": "playbook3-JoeSandbox_Outlook_Attachment_Analysis",
    "_playbook3-JoeSandbox_Outlook_Attachment_Analysis": "[variables('playbook3-JoeSandbox_Outlook_Attachment_Analysis')]",
    "playbook3-functionappName": "[concat(toLower(parameters('playbook3-FunctionAppName')), take(uniqueString(resourceGroup().id), 3))]",
    "playbook3-AzureSentinelConnectionName": "[concat('azuresentinel-', parameters('playbook3-PlaybookName'))]",
    "playbook3-Office365V1": "[concat('office365-', parameters('playbook3-PlaybookName'))]",
    "playbook3-subscription": "[last(split(subscription().id, '/'))]",
    "playbook3-resourceGroupName": "[resourceGroup().name]",
    "playbook-3-connection-1": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/office365')]",
    "_playbook-3-connection-1": "[variables('playbook-3-connection-1')]",
    "connector1-source": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',resourceGroup().name,'/providers/Microsoft.OperationalInsights/workspaces/',parameters('workspace'),'/providers/Microsoft.SecurityInsights/dataConnectors/',parameters('connector1-name'))]",
    "_connector1-source": "[variables('connector1-source')]",
    "JoeSandboxConnector": "JoeSandboxConnector",
    "_JoeSandboxConnector": "[variables('JoeSandboxConnector')]",
    "sourceId": "joesandbox.microsoft-sentinel-solution-joesandbox",
    "_sourceId": "[variables('sourceId')]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('playbook1-FunctionName')]",
      "location": "[parameters('workspace-location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('playbook1-FunctionName')]",
        "WorkspaceResourceId": "[parameters('playbook1-AppInsightsWorkspaceResourceID')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[tolower(variables('playbook1-FunctionName'))]",
      "location": "[parameters('workspace-location')]",
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('playbook1-FunctionName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('playbook1-FunctionName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": false
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('playbook1-FunctionName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('playbook1-FunctionName')))]"
      ],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "name": "[variables('playbook1-FunctionName')]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', tolower(variables('playbook1-FunctionName')))]",
        "[resourceId('Microsoft.Insights/components', variables('playbook1-FunctionName'))]"
      ],
      "kind": "functionapp,linux",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "name": "[variables('playbook1-FunctionName')]",
        "httpsOnly": true,
        "clientAffinityEnabled": true,
        "alwaysOn": true,
        "reserved": true,
        "siteConfig": {
          "linuxFxVersion": "python|3.11"
        }
      },
      "resources": [
        {
          "apiVersion": "2018-11-01",
          "type": "config",
          "name": "appsettings",
          "dependsOn": [
            "[concat('Microsoft.Web/sites/', variables('playbook1-FunctionName'))]"
          ],
          "properties": {
            "FUNCTIONS_EXTENSION_VERSION": "~4",
            "FUNCTIONS_WORKER_RUNTIME": "python",
            "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('playbook1-FunctionName')), '2020-02-02').InstrumentationKey]",
            "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('playbook1-FunctionName')), '2020-02-02').ConnectionString]",
            "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('playbook1-FunctionName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(variables('playbook1-FunctionName'))), '2023-04-01').keys[0].value, ';EndpointSuffix=',toLower(variables('playbook1-StorageSuffix')))]",
            "JoeSandboxBaseURL": "[parameters('playbook1-JoeSandboxBaseURL')]",
            "JoeSandboxAPIKey": "[parameters('playbook1-JoeSandboxAPIKey')]",
            "Resubmit": "[parameters('playbook1-Resubmit')]",
            "WEBSITE_RUN_FROM_PACKAGE": "https://github.com/shubhamloginsoft/Joe/raw/refs/heads/main/JoeSandboxEnrichment.zip"
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('playbook1-FunctionName'), '/default/azure-webjobs-hosts')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('playbook1-FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('playbook1-FunctionName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('playbook1-FunctionName'), '/default/azure-webjobs-secrets')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('playbook1-FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('playbook1-FunctionName'))]"
      ],
      "properties": {
        "publicAccess": "None"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2019-06-01",
      "name": "[concat(variables('playbook1-FunctionName'), '/default/', tolower(variables('playbook1-FunctionName')))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('playbook1-FunctionName'), 'default')]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('playbook1-FunctionName'))]"
      ],
      "properties": {
        "shareQuota": 5120
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook2-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('playbook2-AzureSentinelConnectionName')]",
        "parameterValueType": "Alternative",
        "api": {
          "id": "[variables('_playbook-2-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('playbook2-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Indicator_Expiration_In_Days": {
              "defaultValue": "30",
              "type": "String"
            },
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "body": {
                  "callback_url": "@listCallbackUrl()"
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Entities_-_Get_URLs": {
              "runAfter": {
                "SubmissionReportforTable": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@triggerBody()?['object']?['properties']?['relatedEntities']",
                "path": "/entities/url"
              }
            },
            "For_each_URL": {
              "foreach": "@body('Entities_-_Get_URLs')?['URLs']",
              "actions": {
                "Check_if_the_status_is_200": {
                  "actions": {
                    "Set_Submission_Status": {
                      "type": "SetVariable",
                      "inputs": {
                        "name": "submission_status",
                        "value": false
                      }
                    },
                    "Wait_untill_submission_is_completed": {
                      "actions": {
                        "Delay_By_2_minutes": {
                          "type": "Wait",
                          "inputs": {
                            "interval": {
                              "count": 2,
                              "unit": "Minute"
                            }
                          }
                        },
                        "Check_if_submission_is_completed": {
                          "actions": {
                            "Set_Submission_Status_to_True": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "submission_status",
                                "value": true
                              }
                            },
                            "Check_If_Sample_Verdict_is_Suspicious_or_Malicious": {
                              "actions": {
                                "Set_Submission_Report_Variable": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "submission_report",
                                    "value": [
                                      {
                                        "Submission Status": "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')['status']",
                                        "Detection": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['detection']",
                                        "Score": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['score']",
                                        "Classification": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['classification']",
                                        "Threat Names": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['threatname']",
                                        "Link to the Full Report": "@concat('https://jbxcloud.joesecurity.org/analysis/', body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['webid'])",
                                        "Submission ID": "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')['submission_id']",
                                        "Web ID": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['webid']",
                                        "Notes": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['comments']"
                                      }
                                    ]
                                  }
                                },
                                "Create_HTML_table": {
                                  "runAfter": {
                                    "Set_Submission_Report_Variable": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Table",
                                  "inputs": {
                                    "from": "@variables('submission_report')",
                                    "format": "HTML"
                                  }
                                },
                                "Add_comment_to_incident_(V3)": {
                                  "runAfter": {
                                    "Create_HTML_table": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "incidentArmId": "@triggerBody()?['object']?['id']",
                                      "message": "<p class=\\\\\"editor-paragraph\\\\\">JoeSandbox Submission Details for URL: @{replace(replace(items('For_each_URL')?['url'],'https://',''),'http://','')}</p><p class=\\\\\"editor-paragraph\\\\\">@{body('Create_HTML_table')}</p>"
                                    },
                                    "path": "/Incidents/Comment"
                                  }
                                },
                                "Check_if_JoeSandbox_has_any_indicators_for_the_analysis": {
                                  "actions": {
                                    "Threat_Intelligence_-_Upload_Indicators_of_Compromise_(V2)_(Preview)": {
                                      "type": "ApiConnection",
                                      "inputs": {
                                        "host": {
                                          "connection": {
                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                          }
                                        },
                                        "method": "post",
                                        "body": {
                                          "sourcesystem": "JoeSandboxThreatIntelligence",
                                          "indicators": "@body('joesandboxenrichttb-JoeSandboxGetIOCs')['custom_response']"
                                        },
                                        "path": "/V2/ThreatIntelligence/@{encodeURIComponent(triggerBody()?['workspaceId'])}/UploadIndicators/"
                                      }
                                    }
                                  },
                                  "runAfter": {
                                    "joesandboxenrichttb-JoeSandboxGetIOCs": [
                                      "Succeeded"
                                    ]
                                  },
                                  "expression": {
                                    "and": [
                                      {
                                        "greater": [
                                          "@length(body('joesandboxenrichttb-JoeSandboxGetIOCs')['custom_response'])",
                                          0
                                        ]
                                      }
                                    ]
                                  },
                                  "type": "If"
                                },
                                "joesandboxenrichttb-JoeSandboxGetIOCs": {
                                  "runAfter": {
                                    "Add_comment_to_incident_(V3)": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "Function",
                                  "inputs": {
                                    "body": {
                                      "web_id": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['webid']"
                                    },
                                    "function": {
                                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook2-Functionappname'), '/functions/JoeSandboxGetIOCs')]"
                                    }
                                  }
                                }
                              },
                              "runAfter": {
                                "joesandboxenrichttb-JoeSandboxGetAnalysisInfo": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Create_HTML_table_1": {
                                    "runAfter": {
                                      "Set_Submission_Report_Variable_For_Clean_Detection": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "Table",
                                    "inputs": {
                                      "from": "@variables('submission_report')",
                                      "format": "HTML"
                                    }
                                  },
                                  "Add_comment_to_incident_(V3)_1": {
                                    "runAfter": {
                                      "Create_HTML_table_1": [
                                        "Succeeded"
                                      ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                      "host": {
                                        "connection": {
                                          "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                        }
                                      },
                                      "method": "post",
                                      "body": {
                                        "incidentArmId": "@triggerBody()?['object']?['id']",
                                        "message": "<p class=\\\\\"editor-paragraph\\\\\">JoeSandbox Submission Details for URL: @{replace(replace(items('For_each_URL')?['url'],'https://',''),'http://','')}<br>@{body('Create_HTML_table_1')}</p>"
                                      },
                                      "path": "/Incidents/Comment"
                                    }
                                  },
                                  "Set_Submission_Report_Variable_For_Clean_Detection": {
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "submission_report",
                                      "value": [
                                        {
                                          "Submission Status": "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')['status']",
                                          "Detection": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['detection']",
                                          "Classification": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['classification']",
                                          "Threat Names": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['threatname']",
                                          "Link to the Full Report": "@concat('https://jbxcloud.joesecurity.org/analysis/', body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['webid'])",
                                          "Submission ID": "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')['submission_id']",
                                          "Web ID": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['webid']",
                                          "Notes": "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['comments']"
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "not": {
                                      "equals": [
                                        "@body('joesandboxenrichttb-JoeSandboxGetAnalysisInfo')['detection']",
                                        "clean"
                                      ]
                                    }
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "joesandboxenrichttb-JoeSandboxGetAnalysisInfo": {
                              "runAfter": {
                                "Set_Submission_Status_to_True": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Function",
                              "inputs": {
                                "body": {
                                  "analysis_id": "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')['most_relevant_analysis']['webid']"
                                },
                                "function": {
                                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook2-Functionappname'), '/functions/JoeSandboxGetAnalysisInfo')]"
                                }
                              }
                            }
                          },
                          "runAfter": {
                            "joesandboxenrichttb-JoeSandboxGetSubmissionInfo": [
                              "Succeeded"
                            ]
                          },
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@body('joesandboxenrichttb-JoeSandboxGetSubmissionInfo')?['status']",
                                  "finished"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "joesandboxenrichttb-JoeSandboxGetSubmissionInfo": {
                          "runAfter": {
                            "Delay_By_2_minutes": [
                              "Succeeded"
                            ]
                          },
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "submission_id": "@body('joesandboxenrichttb-JoeSandboxSubmitUrl')['submission_id']"
                            },
                            "function": {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook2-Functionappname'), '/functions/JoeSandboxGetSubmissionInfo')]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "Set_Submission_Status": [
                          "Succeeded"
                        ]
                      },
                      "expression": "@equals(variables('submission_status'),true)",
                      "limit": {
                        "count": 60,
                        "timeout": "PT1H"
                      },
                      "type": "Until"
                    }
                  },
                  "runAfter": {
                    "joesandboxenrichttb-JoeSandboxSubmitUrl": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Add_Comment_to_incident": {
                        "type": "ApiConnection",
                        "inputs": {
                          "host": {
                            "connection": {
                              "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                            }
                          },
                          "method": "post",
                          "body": {
                            "incidentArmId": "@triggerBody()?['object']?['id']",
                            "message": "<p class=\\\\\"editor-paragraph\\\\\">Invalid API Response</p>"
                          },
                          "path": "/Incidents/Comment"
                        }
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@outputs('joesandboxenrichttb-JoeSandboxSubmitUrl')['statusCode']",
                          200
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "joesandboxenrichttb-JoeSandboxSubmitUrl": {
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "url": "@items('For_each_URL')['url']",
                      "tags": [
                        "url_submission_logic_app"
                      ]
                    },
                    "function": {
                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook2-Functionappname'), '/functions/JoeSandboxSubmitUrl')]"
                    }
                  }
                }
              },
              "runAfter": {
                "Entities_-_Get_URLs": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "SubmissionReportforTable": {
              "runAfter": {
                "check_submission_status": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_report",
                    "type": "array"
                  }
                ]
              }
            },
            "check_submission_status": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_status",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook2-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook2-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook3-Office365V1')]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "displayName": "[variables('playbook3-Office365V1')]",
        "api": {
          "id": "[variables('_playbook-3-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('playbook3-AzureSentinelConnectionName')]",
      "location": "[parameters('workspace-location')]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('playbook3-AzureSentinelConnectionName')]",
        "parameterValueType": "Alternative",
        "api": {
          "id": "[variables('_playbook-2-connection-1')]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('playbook3-PlaybookName')]",
      "location": "[parameters('workspace-location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('playbook3-Office365V1'))]",
        "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]"
      ],
      "properties": {
        "state": "Disabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "Indicator_Expiration_In_Days": {
              "defaultValue": "30",
              "type": "String"
            },
            "Notify_Via_Email": {
              "defaultValue": false,
              "type": "Bool"
            },
            "$connections": {
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_new_email_arrives_(V3)": {
              "splitOn": "@triggerBody()?['value']",
              "type": "ApiConnectionNotification",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['office365']['connectionId']"
                  }
                },
                "fetch": {
                  "pathTemplate": {
                    "template": "/v3/Mail/OnNewEmail"
                  },
                  "method": "get",
                  "queries": {
                    "importance": "Any",
                    "fetchOnlyWithAttachment": true,
                    "includeAttachments": true,
                    "folderPath": "Inbox"
                  }
                },
                "subscribe": {
                  "body": {
                    "NotificationUrl": "@listCallbackUrl()"
                  },
                  "pathTemplate": {
                    "template": "/GraphMailSubscriptionPoke/$subscriptions"
                  },
                  "method": "post",
                  "queries": {
                    "importance": "Any",
                    "fetchOnlyWithAttachment": true,
                    "folderPath": "Inbox"
                  }
                }
              }
            }
          },
          "actions": {
            "Submission_Status": {
              "runAfter": {
                "Submission_Object": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_status",
                    "type": "boolean",
                    "value": false
                  }
                ]
              }
            },
            "Submission_Report": {
              "runAfter": {
                "Submission_Status": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submission_report",
                    "type": "array"
                  }
                ]
              }
            },
            "Email_Body": {
              "runAfter": {
                "Submission_Report": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "email_body",
                    "type": "string"
                  }
                ]
              }
            },
            "File_Name": {
              "runAfter": {
                "Email_Body": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "file_name",
                    "type": "string"
                  }
                ]
              }
            },
            "Submission_Object": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "submissin_obj",
                    "type": "array"
                  }
                ]
              }
            },
            "For_Every_Attachment": {
              "foreach": "@triggerBody()?['attachments']",
              "actions": {
                "Append_to_Submission_Object_to_Variable": {
                  "runAfter": {
                    "GetJoeSanboxFiles": [
                      "Succeeded"
                    ]
                  },
                  "type": "AppendToArrayVariable",
                  "inputs": {
                    "name": "submissin_obj",
                    "value": {
                      "submission": "@body('GetJoeSanboxFiles')",
                      "filename": "@variables('file_name')"
                    }
                  }
                },
                "GetJoeSanboxFiles": {
                  "type": "Function",
                  "inputs": {
                    "body": {
                      "file": "@item()?['contentBytes']",
                      "name": "@item()?['name']",
                      "tags": [
                        "outlook_attachment_logic_app_submission"
                      ]
                    },
                    "function": {
                      "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook3-Functionappname'), '/functions/JoeSandboxSubmitFile')]"
                    }
                  }
                }
              },
              "runAfter": {
                "File_Name": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            },
            "For_Every_Submission_Object": {
              "foreach": "@variables('submissin_obj')",
              "actions": {
                "Set_Submission_Status_to_False": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "submission_status",
                    "value": false
                  }
                },
                "Wait_untill_submission_is_completed": {
                  "actions": {
                    "Check_If_Submission_is_finished": {
                      "actions": {
                        "Check_if_analysis_detection_is_malicious_or_suspicious": {
                          "actions": {
                            "Set_submission_report": {
                              "type": "SetVariable",
                              "inputs": {
                                "name": "submission_report",
                                "value": [
                                  {
                                    "Submission ID": "@body('GetJoeSanboxSubmissions')['submission_id']",
                                    "Submission Status": "@body('GetJoeSanboxSubmissions')['status']",
                                    "Web ID": "@body('GetJoeSanbdoxAnalysis')['webid']",
                                    "Classifications": "@body('GetJoeSanbdoxAnalysis')['classification']",
                                    "Threat Names": "@body('GetJoeSanbdoxAnalysis')['threatname']",
                                    "Analysis URL": "@concat('https://jbxcloud.joesecurity.org/analysis/', body('GetJoeSanbdoxAnalysis')['webid'])",
                                    "Detection": "@body('GetJoeSanbdoxAnalysis')['detection']",
                                    "Score": "@body('GetJoeSanbdoxAnalysis')['score']"
                                  }
                                ]
                              }
                            },
                            "Create_HTML_table": {
                              "runAfter": {
                                "Set_submission_report": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Table",
                              "inputs": {
                                "from": "@variables('submission_report')",
                                "format": "HTML"
                              }
                            },
                            "Create_incident": {
                              "runAfter": {
                                "Create_HTML_table": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "put",
                                "body": {
                                  "title": "JoeSandbox Email Attachment Scan Submission Details for file - @{body('GetJoeSanbdoxAnalysis')['filename']}",
                                  "severity": "Medium",
                                  "status": "New",
                                  "description": "JoeSandbox Email Attachment Scan . From:@{triggerBody()?['from']}. To: @{triggerBody()?['toRecipients']}"
                                },
                                "path": "/Incidents/subscriptions/@{encodeURIComponent('7356a8d4-94f5-4210-a777-f4d6329e1c71')}/resourceGroups/@{encodeURIComponent('Joe-Security')}/workspaces/@{encodeURIComponent('JoeSecurity')}"
                              }
                            },
                            "Add_comment_to_incident_(V3)": {
                              "runAfter": {
                                "Create_incident": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ApiConnection",
                              "inputs": {
                                "host": {
                                  "connection": {
                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                  }
                                },
                                "method": "post",
                                "body": {
                                  "incidentArmId": "@body('Create_incident')?['id']",
                                  "message": "<p class=\\\\\"editor-paragraph\\\\\">JoeSandbox Submission for File - @{items('For_Every_Submission_Object')['filename']}<br>@{body('Create_HTML_table')}</p>"
                                },
                                "path": "/Incidents/Comment"
                              }
                            },
                            "Check_if_JoeSandbox_has_any_indicators_for_the_analysis": {
                              "actions": {
                                "Threat_Intelligence_-_Upload_Indicators_of_Compromise_(V2)_(Preview)": {
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "sourcesystem": "JoeSandboxThreatIntelligence",
                                      "indicators": "@body('GetJoeSanboxIOCs')['custom_response']"
                                    },
                                    "path": "/V2/ThreatIntelligence/4f06a513-315c-41be-8dc2-3dd4da0ba830/UploadIndicators/"
                                  }
                                }
                              },
                              "runAfter": {
                                "GetJoeSanboxIOCs": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('GetJoeSanboxIOCs')['custom_response'])",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Set_Submission_Status_to_True": {
                              "runAfter": {
                                "Check_Notify_Via_Email": [
                                  "Succeeded"
                                ]
                              },
                              "type": "SetVariable",
                              "inputs": {
                                "name": "submission_status",
                                "value": true
                              }
                            },
                            "GetJoeSanboxIOCs": {
                              "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Function",
                              "inputs": {
                                "body": {
                                  "web_id": "@body('GetJoeSanbdoxAnalysis')['webid']"
                                },
                                "function": {
                                  "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook3-Functionappname'), '/functions/JoeSandboxGetIOCs')]"
                                }
                              }
                            },
                            "Check_Notify_Via_Email": {
                              "actions": {
                                "Set_email_body": {
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "email_body",
                                    "value": "<p class=\\\\\"editor-paragraph\\\\\"> <table style=\\\\\"width: 100%; border-collapse: collapse; background-color: #f0f0f0;\\\\\"> <thead> <tr> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Submission ID</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Submission Status</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Web ID</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Classifications</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Threat Names</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Analysis URL</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Detection</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Score</th> </tr> </thead> <tbody> <tr style=\\\\\"background-color: #ffffff; border-bottom: 1px solid #ddd;\\\\\"> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanboxSubmissions')['submission_id']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanboxSubmissions')['status']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['webid']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['classification']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['threatname']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{concat('https://jbxcloud.joesecurity.org/analysis/', body('GetJoeSanbdoxAnalysis')['webid'])}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['detection']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['score']}</td> </tr> </tbody> </table> </p> "
                                  }
                                },
                                "Send_an_email_(V2)": {
                                  "runAfter": {
                                    "Set_email_body": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ApiConnection",
                                  "inputs": {
                                    "host": {
                                      "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                      }
                                    },
                                    "method": "post",
                                    "body": {
                                      "To": "kmamidipalli@loginsoft.com",
                                      "Subject": "JoeSandbox Email Attachment Scan for file - @{body('GetJoeSanboxSubmissions')['name']}",
                                      "Body": "<p class=\\\\\"editor-paragraph\\\\\">@{variables('email_body')}</p>",
                                      "Importance": "Normal"
                                    },
                                    "path": "/v2/Mail"
                                  }
                                }
                              },
                              "runAfter": {
                                "Check_if_JoeSandbox_has_any_indicators_for_the_analysis": [
                                  "Succeeded"
                                ]
                              },
                              "expression": {
                                "and": [
                                  {
                                    "equals": [
                                      "@parameters('playbook3-Notify_Via_Email')",
                                      true
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            }
                          },
                          "runAfter": {
                            "GetJoeSanbdoxAnalysis": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_email_body_for_clean_analysis": {
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "email_body",
                                  "value": "<p class=\\\\\"editor-paragraph\\\\\"> <table style=\\\\\"width: 100%; border-collapse: collapse; background-color: #f0f0f0;\\\\\"> <thead> <tr> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Submission ID</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Submission Status</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Web ID</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Classifications</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Threat Names</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Analysis URL</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Detection</th> <th style=\\\\\"background-color: #002a46; color: white; padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">Score</th> </tr> </thead> <tbody> <tr style=\\\\\"background-color: #ffffff; border-bottom: 1px solid #ddd;\\\\\"> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanboxSubmissions')['submission_id']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanboxSubmissions')['status']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['webid']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['classification']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['threatname']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{concat('https://jbxcloud.joesecurity.org/analysis/', body('GetJoeSanbdoxAnalysis')['webid'])}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['detection']}</td> <td style=\\\\\"padding: 10px; text-align: left; border: 1px solid #ddd;\\\\\">@{body('GetJoeSanbdoxAnalysis')['score']}</td> </tr> </tbody> </table> </p> "
                                }
                              },
                              "Send_an_email_(V2)_for_clean_analysis": {
                                "runAfter": {
                                  "Set_email_body_for_clean_analysis": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "ApiConnection",
                                "inputs": {
                                  "host": {
                                    "connection": {
                                      "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                  },
                                  "method": "post",
                                  "body": {
                                    "To": "kmamidipalli@loginsoft.com",
                                    "Subject": "JoeSandbox Email Attachment Scan for file - @{body('GetJoeSanboxSubmissions')['name']}",
                                    "Body": "<p class=\\\\\"editor-paragraph\\\\\">@{variables('email_body')}</p>",
                                    "Importance": "Normal"
                                  },
                                  "path": "/v2/Mail"
                                }
                              },
                              "Set_Submission_Status_to_True_After_Clean_Analysis": {
                                "runAfter": {
                                  "Send_an_email_(V2)_for_clean_analysis": [
                                    "Succeeded"
                                  ]
                                },
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "submission_status",
                                  "value": true
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "not": {
                                  "equals": [
                                    "@body('GetJoeSanbdoxAnalysis')['detection']",
                                    "clean"
                                  ]
                                }
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "GetJoeSanbdoxAnalysis": {
                          "type": "Function",
                          "inputs": {
                            "body": {
                              "analysis_id": "@body('GetJoeSanboxSubmissions')['most_relevant_analysis']['webid']"
                            },
                            "function": {
                              "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook3-Functionappname'), '/functions/JoeSandboxGetAnalysisInfo')]"
                            }
                          }
                        }
                      },
                      "runAfter": {
                        "GetJoeSanboxSubmissions": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Delay_by_2_minutes": {
                            "type": "Wait",
                            "inputs": {
                              "interval": {
                                "count": 2,
                                "unit": "Minute"
                              }
                            }
                          },
                          "Set_submission_status_to_false_again": {
                            "runAfter": {
                              "Delay_by_2_minutes": [
                                "Succeeded"
                              ]
                            },
                            "type": "SetVariable",
                            "inputs": {
                              "name": "submission_status",
                              "value": false
                            }
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@body('GetJoeSanboxSubmissions')['status']",
                              "finished"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "GetJoeSanboxSubmissions": {
                      "type": "Function",
                      "inputs": {
                        "body": {
                          "submission_id": "@items('For_Every_Submission_Object')['submission']['submission_id']"
                        },
                        "function": {
                          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Web/sites/', variables('playbook3-Functionappname'), '/functions/JoeSandboxGetSubmissionInfo')]"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Set_Submission_Status_to_False": [
                      "Succeeded"
                    ]
                  },
                  "expression": "@equals(variables('submission_status'),true)",
                  "limit": {
                    "count": 60,
                    "timeout": "PT1H"
                  },
                  "type": "Until"
                }
              },
              "runAfter": {
                "For_Every_Attachment": [
                  "Succeeded"
                ]
              },
              "type": "Foreach",
              "runtimeConfiguration": {
                "concurrency": {
                  "repetitions": 1
                }
              }
            }
          }
        },
        "parameters": {
          "$connections": {
            "value": {
              "office365": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-Office365V1'))]",
                "connectionName": "[variables('playbook3-Office365V1')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/office365')]"
              },
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('playbook3-AzureSentinelConnectionName'))]",
                "connectionName": "[variables('playbook3-AzureSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace-location'), '/managedApis/azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              }
            }
          }
        }
      }
    },
    {
      "id": "[variables('_connector1-source')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',parameters('connector1-name'))]",
      "apiVersion": "2021-03-01-preview",
      "type": "Microsoft.OperationalInsights/workspaces/providers/dataConnectors",
      "location": "[parameters('workspace-location')]",
      "kind": "GenericUI",
      "properties": {
        "connectorUiConfig": {
          "title": "JoeSandboxThreatIntelligence",
          "publisher": "Joe Security LLC",
          "descriptionMarkdown": "JoeSandboxThreatIntelligence connector automatically generates and feeds threat intelligence for all submissions to JoeSandbox, improving threat detection and incident response in Sentinel. This seamless integration empowers teams to proactively address emerging threats.",
          "graphQueries": [
            {
              "metricName": "JoeSandbox Threat Indicators data received",
              "legend": "ThreatIntelligenceIndicator | where SourceSystem contains 'JoeSandbox'",
              "baseQuery": "ThreatIntelligenceIndicator | where SourceSystem contains 'JoeSandbox'"
            },
            {
              "metricName": "Non-JoeSandbox Threat Indicators data received",
              "legend": "ThreatIntelligenceIndicator | where SourceSystem !contains 'JoeSandbox'",
              "baseQuery": "ThreatIntelligenceIndicator | where SourceSystem !contains 'JoeSandbox'"
            }
          ],
          "sampleQueries": [
            {
              "description": "JoeSandbox Based Indicators Events - All JoeSandbox threat indicators in Microsoft Sentinel Threat Intelligence.",
              "query": "ThreatIntelligenceIndicator\n | where SourceSystem contains 'JoeSandbox'\n | sort by TimeGenerated desc"
            },
            {
              "description": "Non-JoeSandbox Based Indicators Events - All Non-JoeSandbox threat indicators in Microsoft Sentinel Threat Intelligence.",
              "query": "ThreatIntelligenceIndicator\n | where SourceSystem !contains 'JoeSandbox'\n | sort by TimeGenerated desc"
            }
          ],
          "dataTypes": [
            {
              "name": "ThreatIntelligenceIndicator",
              "lastDataReceivedQuery": "ThreatIntelligenceIndicator\n            | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
            }
          ],
          "connectivityCriterias": [
            {
              "type": "IsConnectedQuery",
              "value": [
                "ThreatIntelligenceIndicator\n            | where SourceSystem contains 'JoeSandbox'\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "Report_links_data_CL\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            },
            {
              "type": "IsConnectedQuery",
              "value": [
                "ThreatIntelligenceIndicator\n             | where SourceSystem !contains 'JoeSandbox'\n            | summarize LastLogReceived = max(TimeGenerated)\n            | project IsConnected = LastLogReceived > ago(30d)"
              ]
            }
          ],
          "availability": {
            "status": 1,
            "isPreview": true
          },
          "permissions": {
            "resourceProvider": [
              {
                "provider": "Microsoft.OperationalInsights/workspaces",
                "permissionsDisplayText": "read and write permissions on the workspace are required.",
                "providerDisplayName": "Workspace",
                "scope": "Workspace",
                "requiredPermissions": {
                  "write": true,
                  "read": true,
                  "delete": true
                }
              },
              {
                "provider": "Microsoft.OperationalInsights/workspaces/sharedKeys",
                "permissionsDisplayText": "read permissions to shared keys for the workspace are required. [See the documentation to learn more about workspace keys](https://docs.microsoft.com/azure/azure-monitor/platform/agent-windows#obtain-workspace-id-and-key).",
                "providerDisplayName": "Keys",
                "scope": "Workspace",
                "requiredPermissions": {
                  "action": true
                }
              }
            ],
            "customs": [
              {
                "name": "Azure Subscription",
                "description": "Azure Subscription with owner role is required to register an application in azure active directory() and assign role of contributor to app in resource group."
              },
              {
                "name": "Microsoft.Web/sites permissions",
                "description": "Read and write permissions to Azure Functions to create a Function App is required. [See the documentation to learn more about Azure Functions](https://docs.microsoft.com/azure/azure-functions/)."
              },
              {
                "name": "REST API Credentials/permissions",
                "description": "**JoeSandbox API Key** is required."
              }
            ]
          },
          "instructionSteps": [
            {
              "description": ">**NOTE:** This connector uses Azure Functions to connect to the JoeSandbox API to pull JoeSandbox Threat IOCs into Microsoft Sentinel. This might result in additional costs for data ingestion and for storing data in Azure Blob Storage costs. Check the [Azure Functions pricing page](https://azure.microsoft.com/pricing/details/functions/) and [Azure Blob Storage pricing page](https://azure.microsoft.com/pricing/details/storage/blobs/) for details."
            },
            {
              "description": ">**(Optional Step)** Securely store workspace and API authorization key(s) or token(s) in Azure Key Vault. Azure Key Vault provides a secure mechanism to store and retrieve key values. [Follow these instructions](https://docs.microsoft.com/azure/app-service/app-service-key-vault-references) to use Azure Key Vault with an Azure Function App."
            },
            {
              "instructions": [
                {
                  "parameters": {
                    "fillWith": [
                      "WorkspaceId"
                    ],
                    "label": "Workspace ID"
                  },
                  "type": "CopyableLabel"
                },
                {
                  "parameters": {
                    "fillWith": [
                      "PrimaryKey"
                    ],
                    "label": "Primary Key"
                  },
                  "type": "CopyableLabel"
                }
              ]
            },
            {
              "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-JoeSandbox-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Application ID**, **Tenant ID**,**Client Secret**, **JoeSandbox API Key**, **JoeSandbox Initial Fetch Date**, **TimeInterval** and deploy.\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template for Flex Consumption Plan"
            },
            {
              "description": "Use this method for automated deployment of the data connector using an ARM Template.\n\n1. Click the **Deploy to Azure** button below. \n\n\t[![Deploy To Azure](https://aka.ms/deploytoazurebutton)](https://aka.ms/sentinel-JoeSandbox-azuredeploy)\n2. Select the preferred **Subscription**, **Resource Group** and **Location**. \n3. Enter the **Application ID**, **Tenant ID**,**Client Secret**, **JoeSandbox API Key**, **JoeSandbox Initial Fetch Date**, **TimeInterval** and deploy.\n4. Mark the checkbox labeled **I agree to the terms and conditions stated above**.\n5. Click **Purchase** to deploy.",
              "title": "Option 1 - Azure Resource Manager (ARM) Template for Premium Plan"
            },
            {
              "description": "Use the following step-by-step instructions to deploy the JoeSandbox data connector manually with Azure Functions (Deployment via Visual Studio Code).",
              "title": "Option 2 - Manual Deployment of Azure Functions"
            },
            {
              "description": "**1. Deploy a Function App**\n\n> NOTE:You will need to [prepare VS code](https://docs.microsoft.com/azure/azure-functions/functions-create-first-function-python#prerequisites) for Azure function development.\n\n1. Download the [Azure Function App](https://aka.ms/sentinel-JoeSandbox-functionapp) file. Extract archive to your local development computer.\n2. Start VS Code. Choose File in the main menu and select Open Folder.\n3. Select the top level folder from extracted files.\n4. Choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose the **Deploy to function app** button.\nIf you aren't already signed in, choose the Azure icon in the Activity bar, then in the **Azure: Functions** area, choose **Sign in to Azure**\nIf you're already signed in, go to the next step.\n5. Provide the following information at the prompts:\n\n\ta. **Select folder:** Choose a folder from your workspace or browse to one that contains your function app.\n\n\tb. **Select Subscription:** Choose the subscription to use.\n\n\tc. Select **Create new Function App in Azure** (Don't choose the Advanced option)\n\n\td. **Enter a globally unique name for the function app:** Type a name that is valid in a URL path. The name you type is validated to make sure that it's unique in Azure Functions. (e.g. JoeSandboxXXX).\n\n\te. **Select a runtime:** Choose Python 3.11.\n\n\tf. Select a location for new resources. For better performance and lower costs choose the same [region](https://azure.microsoft.com/regions/) where Microsoft sentinel is located.\n\n6. Deployment will begin. A notification is displayed after your function app is created and the deployment package is applied.\n7. Go to Azure Portal for the Function App configuration."
            },
            {
              "description": "**2. Configure the Function App**\\n\\n1. In the Function App, select the Function App Name and select **Configuration**.\\n2. In the **Application settings** tab, select **+ New application setting**.\\n3. Add each of the following application settings individually, with their respective string values (case-sensitive): \\n\\tApplication ID\\n\\tTenant ID\\n\\tClient Secret\\n\\tJoeSandbox API Key\\n\\tJoeSandbox Initial Fetch Date\\n\\tTimeInterval - Use logAnalyticsUri to override the log analytics API endpoint for dedicated cloud. For example, for public cloud, leave the value empty; for Azure GovUS cloud environment, specify the value in the following format: `https://<CustomerId>.ods.opinsights.azure.us`\\n3. Once all application settings have been entered, click **Save**."
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2021-03-01-preview",
      "properties": {
        "version": "3.0.0",
        "kind": "Solution",
        "contentId": "[variables('_sourceId')]",
        "parentId": "[variables('_sourceId')]",
        "source": {
          "kind": "Solution",
          "name": "JoeSandbox",
          "sourceId": "[variables('_sourceId')]"
        },
        "author": {
          "name": "Stefan BÃ¼hlmann",
          "email": null
        },
        "support": {
          "name": "Stefan BÃ¼hlmann",
          "email": "info@joesecurity.org",
          "tier": "Partner",
          "link": "https://www.joesecurity.org/support"
        },
        "dependencies": {
          "operator": "AND",
          "criteria": [
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook1-JoeSandboxEnrichment_FunctionAppConnector')]",
              "version": "3.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook2-JoeSandbox-Submit-Url-Sentinel-Incident')]",
              "version": "3.0.0"
            },
            {
              "kind": "Playbook",
              "contentId": "[variables('_playbook3-JoeSandbox_Outlook_Attachment_Analysis')]",
              "version": "3.0.0"
            },
            {
              "kind": "DataConnector",
              "contentId": "[variables('_JoeSandboxConnector')]",
              "version": "3.0.0"
            }
          ]
        },
        "firstPublishDate": "2025-09-12",
        "providers": [
          "Joe Security LLC"
        ],
        "categories": {
          "domains": [
            "Security - Automation (SOAR)",
            "Security - Threat Intelligence"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_sourceId'))]"
    }
  ],
  "outputs": {}
}
