{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "author": "Microsoft - support@microsoft.com",
    "comments": "Solution template for Cisco UCS"
  },
  "parameters": {
    "location": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Not used, but needed to pass arm-ttk test `Location-Should-Not-Be-Hardcoded`.  We instead use the `workspace-location` which is derived from the LA workspace"
      }
    },
    "workspace-location": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "[concat('Region to deploy solution resources -- separate from location selection',parameters('location'))]"
      }
    },
    "workspace": {
      "defaultValue": "",
      "type": "string",
      "metadata": {
        "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
      }
    }
  },
  "variables": {
    "email": "support@microsoft.com",
    "_email": "[variables('email')]",
    "_solutionName": "Cisco UCS",
    "_solutionVersion": "3.0.1",
    "solutionId": "azuresentinel.azure-sentinel-solution-ciscoucs",
    "_solutionId": "[variables('solutionId')]",
    "parserObject1": {
      "_parserName1": "[concat(parameters('workspace'),'/','CiscoUCS')]",
      "_parserId1": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CiscoUCS')]",
      "parserTemplateSpecName1": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat(parameters('workspace'),'-pr-',uniquestring('CiscoUCS-Parser')))]",
      "parserVersion1": "1.1.0",
      "parserContentId1": "CiscoUCS-Parser"
    },
    "_solutioncontentProductId": "[concat(take(variables('_solutionId'),50),'-','sl','-', uniqueString(concat(variables('_solutionId'),'-','Solution','-',variables('_solutionId'),'-', variables('_solutionVersion'))))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentTemplates",
      "apiVersion": "2023-04-01-preview",
      "name": "[variables('parserObject1').parserTemplateSpecName1]",
      "location": "[parameters('workspace-location')]",
      "dependsOn": [
        "[extensionResourceId(resourceId('Microsoft.OperationalInsights/workspaces', parameters('workspace')), 'Microsoft.SecurityInsights/contentPackages', variables('_solutionId'))]"
      ],
      "properties": {
        "description": "CiscoUCS Data Parser with template version 3.0.1",
        "mainTemplate": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "[variables('parserObject1').parserVersion1]",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "name": "[variables('parserObject1')._parserName1]",
              "apiVersion": "2022-10-01",
              "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
              "location": "[parameters('workspace-location')]",
              "properties": {
                "eTag": "*",
                "displayName": "CiscoUCS",
                "category": "Microsoft Sentinel Parser",
                "functionAlias": "CiscoUCS",
                "query": "let datasource = union isfuzzy=true  (datatable(Source: string)[]), (_GetWatchlist('ASimSourceType') | where SearchKey == 'CiscoUCS' | project Source);\nlet forwarder_host_names = dynamic([\"UCSserver1\", \"UCSserver2\"]);  // UCSserver1 and UCSserver2 are examples, replace this list with your Cisco UCS devices\nlet LogHeader = Syslog\n| where CollectorHostName in (forwarder_host_names) or Computer in (forwarder_host_names) or CollectorHostName in (datasource) or Computer in (datasource) \n| extend Parser = extract_all(@\"^(\\d+\\s+[\\w]+\\s+\\d+\\s[0-9\\:]+)\\s\\w+\\:\\s([\\w%]+)\\-(\\d+)\\-([\\w\\_]+)\\:\\s([\\S\\s]+)?\", dynamic([1,2,3,4,5]), SyslogMessage)\n| mv-expand Parser\n| extend EventTime = tostring(Parser[0]),\n         Facility = tostring(Parser[1]),\n         SeverityNumber = tostring(Parser[2]),\n         Mneumonic = tostring(Parser[3]),\n         Substring = tostring(Parser[4])\n| project-away Parser;\n// Parse and normalize AUDIT logs\nlet AuditLog = LogHeader\n| where Mneumonic == \"AUDIT\"\n| extend Parser = extract_all(@\"^\\[([\\w\\d\\.\\_\\-]+)?\\]\\[([\\w\\d\\.\\_\\-\\\\]+)?\\]\\[(\\w+)?\\]\\[([\\w+\\_\\-\\.]+)?\\]\\[?(\\w+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7,8,9]), Substring)\n| mv-expand Parser \n| extend SrcUserName = tostring(Parser[0]),\n         DstUserName = tostring(Parser[1]),\n         Action = tostring(Parser[2]),\n         System = tostring(Parser[5]),\n         Description = tostring(Parser[8])\n| project-away Substring, Parser;\nlet EventLog = LogHeader\n// Parse and normalize EVENT logs\n| where Mneumonic == \"EVENT\"\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\\\\\_]+)?\\]\\[(\\w+)?\\]\\s+\\[([\\w\\:\\-\\_]+)\\]\\:\\s?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7]), Substring)\n| mv-expand Parser\n| extend EventId = tostring(Parser[0]),\n         Action = tostring(Parser[2]),\n         UserName = tostring(Parser[3]),\n         Status = tostring(Parser[5]),\n         Description = tostring(Parser[6])\n| project-away Substring, Parser;\n// Parse and normalize FAULT logs\nlet FaultLog = LogHeader\n| where Mneumonic !in (\"AUDIT\", \"EVENT\")\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\_]+)?\\]\\[([\\w\\-\\_\\/]+)?\\]\\s+([\\s\\S]+)?\", dynamic([1,2,3,4,5]), Substring)\n| mv-expand Parser \n| extend EventId = tostring(Parser[0]),\n         EventSeverity = tostring(Parser[1]),\n         FaultType = tostring(Parser[2]),\n         System = tostring(Parser[3]),\n         Description = tostring(Parser[4])\n| project-away Substring, Parser;\nunion AuditLog, EventLog, FaultLog\n",
                "functionParameters": "",
                "version": 2,
                "tags": [
                  {
                    "name": "description",
                    "value": ""
                  }
                ]
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
              "apiVersion": "2022-01-01-preview",
              "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
              "dependsOn": [
                "[variables('parserObject1')._parserId1]"
              ],
              "properties": {
                "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CiscoUCS')]",
                "contentId": "[variables('parserObject1').parserContentId1]",
                "kind": "Parser",
                "version": "[variables('parserObject1').parserVersion1]",
                "source": {
                  "name": "Cisco UCS",
                  "kind": "Solution",
                  "sourceId": "[variables('_solutionId')]"
                },
                "author": {
                  "name": "Microsoft",
                  "email": "[variables('_email')]"
                },
                "support": {
                  "name": "Microsoft Corporation",
                  "email": "support@microsoft.com",
                  "tier": "Microsoft",
                  "link": "https://support.microsoft.com"
                }
              }
            }
          ]
        },
        "packageKind": "Solution",
        "packageVersion": "[variables('_solutionVersion')]",
        "packageName": "[variables('_solutionName')]",
        "packageId": "[variables('_solutionId')]",
        "contentSchemaVersion": "3.0.0",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "contentKind": "Parser",
        "displayName": "CiscoUCS",
        "contentProductId": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.1.0')))]",
        "id": "[concat(take(variables('_solutionId'),50),'-','pr','-', uniqueString(concat(variables('_solutionId'),'-','Parser','-',variables('parserObject1').parserContentId1,'-', '1.1.0')))]",
        "version": "[variables('parserObject1').parserVersion1]"
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2022-10-01",
      "name": "[variables('parserObject1')._parserName1]",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "eTag": "*",
        "displayName": "CiscoUCS",
        "category": "Microsoft Sentinel Parser",
        "functionAlias": "CiscoUCS",
        "query": "let datasource = union isfuzzy=true  (datatable(Source: string)[]), (_GetWatchlist('ASimSourceType') | where SearchKey == 'CiscoUCS' | project Source);\nlet forwarder_host_names = dynamic([\"UCSserver1\", \"UCSserver2\"]);  // UCSserver1 and UCSserver2 are examples, replace this list with your Cisco UCS devices\nlet LogHeader = Syslog\n| where CollectorHostName in (forwarder_host_names) or Computer in (forwarder_host_names) or CollectorHostName in (datasource) or Computer in (datasource) \n| extend Parser = extract_all(@\"^(\\d+\\s+[\\w]+\\s+\\d+\\s[0-9\\:]+)\\s\\w+\\:\\s([\\w%]+)\\-(\\d+)\\-([\\w\\_]+)\\:\\s([\\S\\s]+)?\", dynamic([1,2,3,4,5]), SyslogMessage)\n| mv-expand Parser\n| extend EventTime = tostring(Parser[0]),\n         Facility = tostring(Parser[1]),\n         SeverityNumber = tostring(Parser[2]),\n         Mneumonic = tostring(Parser[3]),\n         Substring = tostring(Parser[4])\n| project-away Parser;\n// Parse and normalize AUDIT logs\nlet AuditLog = LogHeader\n| where Mneumonic == \"AUDIT\"\n| extend Parser = extract_all(@\"^\\[([\\w\\d\\.\\_\\-]+)?\\]\\[([\\w\\d\\.\\_\\-\\\\]+)?\\]\\[(\\w+)?\\]\\[([\\w+\\_\\-\\.]+)?\\]\\[?(\\w+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?\\[?([\\w\\d\\.\\_\\-\\\\\\/]+)?\\]?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7,8,9]), Substring)\n| mv-expand Parser \n| extend SrcUserName = tostring(Parser[0]),\n         DstUserName = tostring(Parser[1]),\n         Action = tostring(Parser[2]),\n         System = tostring(Parser[5]),\n         Description = tostring(Parser[8])\n| project-away Substring, Parser;\nlet EventLog = LogHeader\n// Parse and normalize EVENT logs\n| where Mneumonic == \"EVENT\"\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\\\\\_]+)?\\]\\[(\\w+)?\\]\\s+\\[([\\w\\:\\-\\_]+)\\]\\:\\s?([\\S\\s]+)?\", dynamic([1,2,3,4,5,6,7]), Substring)\n| mv-expand Parser\n| extend EventId = tostring(Parser[0]),\n         Action = tostring(Parser[2]),\n         UserName = tostring(Parser[3]),\n         Status = tostring(Parser[5]),\n         Description = tostring(Parser[6])\n| project-away Substring, Parser;\n// Parse and normalize FAULT logs\nlet FaultLog = LogHeader\n| where Mneumonic !in (\"AUDIT\", \"EVENT\")\n| extend Parser = extract_all(@\"^\\[(\\w+)?\\]\\[(\\w+)?\\]\\[([\\w\\-\\_]+)?\\]\\[([\\w\\-\\_\\/]+)?\\]\\s+([\\s\\S]+)?\", dynamic([1,2,3,4,5]), Substring)\n| mv-expand Parser \n| extend EventId = tostring(Parser[0]),\n         EventSeverity = tostring(Parser[1]),\n         FaultType = tostring(Parser[2]),\n         System = tostring(Parser[3]),\n         Description = tostring(Parser[4])\n| project-away Substring, Parser;\nunion AuditLog, EventLog, FaultLog\n",
        "functionParameters": "",
        "version": 2,
        "tags": [
          {
            "name": "description",
            "value": ""
          }
        ]
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/metadata",
      "apiVersion": "2022-01-01-preview",
      "location": "[parameters('workspace-location')]",
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/',concat('Parser-', last(split(variables('parserObject1')._parserId1,'/'))))]",
      "dependsOn": [
        "[variables('parserObject1')._parserId1]"
      ],
      "properties": {
        "parentId": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('workspace'), 'CiscoUCS')]",
        "contentId": "[variables('parserObject1').parserContentId1]",
        "kind": "Parser",
        "version": "[variables('parserObject1').parserVersion1]",
        "source": {
          "kind": "Solution",
          "name": "Cisco UCS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        }
      }
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces/providers/contentPackages",
      "apiVersion": "2023-04-01-preview",
      "location": "[parameters('workspace-location')]",
      "properties": {
        "version": "3.0.1",
        "kind": "Solution",
        "contentSchemaVersion": "3.0.0",
        "displayName": "Cisco UCS",
        "publisherDisplayName": "Microsoft Sentinel, Microsoft Corporation",
        "descriptionHtml": "<p><strong>Note:</strong> Please refer to the following before installing the solution:</p>\n<p>• Review the solution <a href=\"https://github.com/Azure/Azure-Sentinel/tree/master/Solutions/Cisco%20UCS/ReleaseNotes.md\">Release Notes</a></p>\n<p>• There may be <a href=\"https://aka.ms/sentinelsolutionsknownissues\">known issues</a> pertaining to this Solution, please refer to them before installing.</p>\n<p>The <a href=\"https://www.cisco.com/c/en/us/products/servers-unified-computing/index.html\">Cisco UCS</a> solution for Microsoft Sentinel enables you to ingest Cisco UCS faults, events, and audit logs into Microsoft Sentinel.</p>\n<p>This solution is dependent on the Syslog solution containing the Syslog via AMA connector to collect the logs. The Syslog  solution will be installed as part of this solution installation.</p>\n<p><strong>NOTE</strong>: Microsoft recommends installation of Syslog via AMA Connector. Legacy connector uses the Log Analytics agent which were deprecated on <strong>Aug 31, 2024.</strong> Using MMA and AMA on same machine can cause log duplication and extra ingestion cost <a href=\"https://learn.microsoft.com/en-us/azure/sentinel/ama-migrate\">more details</a>.</p>\n<p><strong>Parsers:</strong> 1</p>\n<p><a href=\"https://aka.ms/azuresentinel\">Learn more about Microsoft Sentinel</a> | <a href=\"https://aka.ms/azuresentinelsolutionsdoc\">Learn more about Solutions</a></p>\n",
        "contentKind": "Solution",
        "contentProductId": "[variables('_solutioncontentProductId')]",
        "id": "[variables('_solutioncontentProductId')]",
        "icon": "<img src=\"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Logos/cisco-logo-72px.svg\" width=\"75px\" height=\"75px\">",
        "contentId": "[variables('_solutionId')]",
        "parentId": "[variables('_solutionId')]",
        "source": {
          "kind": "Solution",
          "name": "Cisco UCS",
          "sourceId": "[variables('_solutionId')]"
        },
        "author": {
          "name": "Microsoft",
          "email": "[variables('_email')]"
        },
        "support": {
          "name": "Microsoft Corporation",
          "email": "support@microsoft.com",
          "tier": "Microsoft",
          "link": "https://support.microsoft.com"
        },
        "dependencies": {
          "criteria": [
            {
              "kind": "Parser",
              "contentId": "[variables('parserObject1').parserContentId1]",
              "version": "[variables('parserObject1').parserVersion1]"
            },
            {
              "kind": "Solution",
              "contentId": "azuresentinel.azure-sentinel-solution-syslog"
            }
          ]
        },
        "firstPublishDate": "2022-05-02",
        "providers": [
          "Cisco"
        ],
        "categories": {
          "domains": [
            "Platform"
          ]
        }
      },
      "name": "[concat(parameters('workspace'),'/Microsoft.SecurityInsights/', variables('_solutionId'))]"
    }
  ],
  "outputs": {}
}
