id: 363f8744-f75c-4500-be8d-92e4e5b0c1bf
Function:
  Title: Parser for CiscoUCS
  Version: '1.1.0'
  LastUpdated: '2024-07-30'
Category: Microsoft Sentinel Parser
FunctionName: CiscoUCS
FunctionAlias: CiscoUCS
FunctionQuery: |
    let datasource = union isfuzzy=true  (datatable(Source: string)[]), (_GetWatchlist('ASimSourceType') | where SearchKey == 'CiscoUCS' | project Source);
    let forwarder_host_names = dynamic(["UCSserver1", "UCSserver2"]);  // UCSserver1 and UCSserver2 are examples, replace this list with your Cisco UCS devices
    let LogHeader = Syslog
    | where CollectorHostName in (forwarder_host_names) or Computer in (forwarder_host_names) or CollectorHostName in (datasource) or Computer in (datasource) 
    | extend Parser = extract_all(@"^(\d+\s+[\w]+\s+\d+\s[0-9\:]+)\s\w+\:\s([\w%]+)\-(\d+)\-([\w\_]+)\:\s([\S\s]+)?", dynamic([1,2,3,4,5]), SyslogMessage)
    | mv-expand Parser
    | extend EventTime = tostring(Parser[0]),
             Facility = tostring(Parser[1]),
             SeverityNumber = tostring(Parser[2]),
             Mneumonic = tostring(Parser[3]),
             Substring = tostring(Parser[4])
    | project-away Parser;
    // Parse and normalize AUDIT logs
    let AuditLog = LogHeader
    | where Mneumonic == "AUDIT"
    | extend Parser = extract_all(@"^\[([\w\d\.\_\-]+)?\]\[([\w\d\.\_\-\\]+)?\]\[(\w+)?\]\[([\w+\_\-\.]+)?\]\[?(\w+)?\]?\[?([\w\d\.\_\-\\\/]+)?\]?\[?([\w\d\.\_\-\\\/]+)?\]?\[?([\w\d\.\_\-\\\/]+)?\]?([\S\s]+)?", dynamic([1,2,3,4,5,6,7,8,9]), Substring)
    | mv-expand Parser 
    | extend SrcUserName = tostring(Parser[0]),
             DstUserName = tostring(Parser[1]),
             Action = tostring(Parser[2]),
             System = tostring(Parser[5]),
             Description = tostring(Parser[8])
    | project-away Substring, Parser;
    let EventLog = LogHeader
    // Parse and normalize EVENT logs
    | where Mneumonic == "EVENT"
    | extend Parser = extract_all(@"^\[(\w+)?\]\[(\w+)?\]\[(\w+)?\]\[([\w\-\\\_]+)?\]\[(\w+)?\]\s+\[([\w\:\-\_]+)\]\:\s?([\S\s]+)?", dynamic([1,2,3,4,5,6,7]), Substring)
    | mv-expand Parser
    | extend EventId = tostring(Parser[0]),
             Action = tostring(Parser[2]),
             UserName = tostring(Parser[3]),
             Status = tostring(Parser[5]),
             Description = tostring(Parser[6])
    | project-away Substring, Parser;
    // Parse and normalize FAULT logs
    let FaultLog = LogHeader
    | where Mneumonic !in ("AUDIT", "EVENT")
    | extend Parser = extract_all(@"^\[(\w+)?\]\[(\w+)?\]\[([\w\-\_]+)?\]\[([\w\-\_\/]+)?\]\s+([\s\S]+)?", dynamic([1,2,3,4,5]), Substring)
    | mv-expand Parser 
    | extend EventId = tostring(Parser[0]),
             EventSeverity = tostring(Parser[1]),
             FaultType = tostring(Parser[2]),
             System = tostring(Parser[3]),
             Description = tostring(Parser[4])
    | project-away Substring, Parser;
    union AuditLog, EventLog, FaultLog