id: 9122a9cb-916b-4d98-a199-1b7b0af8d598
name: "[Deprecated] - Known Nylon Typhoon domains and hashes"
description: |
    'This query has been deprecated as the associated IoCs (Indicators of Compromise) are outdated and no longer relevant. To ensure effective threat detection, it is recommended to implement Microsoft's Threat Intelligence solution, which enables matching your log data with the most up-to-date IoCs generated by Microsoft. This solution can be installed from the Microsoft Sentinel Content Hub if not currently deployed. More details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy'
severity: High
status: Available
tags:
  - Schema: ASIMDns
    SchemaVersion: 0.1.1
requiredDataConnectors:
  - connectorId: SquidProxy
    dataTypes:
      - SquidProxy_CL
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AzureMonitor(VMInsights) 
    dataTypes:
      - VMConnection
  - connectorId: CiscoASA
    dataTypes:
      - CommonSecurityLog
  - connectorId: PaloAltoNetworks
    dataTypes:
      - CommonSecurityLog
  - connectorId: MicrosoftThreatProtection
    dataTypes:
      - DeviceFileEvents
  - connectorId: MicrosoftThreatProtection
    dataTypes:
      - DeviceNetworkEvents
  - connectorId: SecurityEvents
    dataTypes:
      - SecurityEvent
  - connectorId: AzureFirewall
    dataTypes: 
      - AzureDiagnostics
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: InfobloxNIOS
    dataTypes: 
      - Syslog
  - connectorId: GCPDNSDataConnector
    dataTypes: 
      - GCP_DNS_CL
  - connectorId: NXLogDnsLogs
    dataTypes: 
      - NXLog_DNS_Server_CL
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes: 
      - Cisco_Umbrella_dns_CL
  - connectorId: Corelight
    dataTypes: 
      - Corelight_CL

queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CommandAndControl
relevantTechniques:
  - T1071
query: |
  let DomainNames = dynamic(["beesweiserdog.com", 
                            "bluehostfit.com", 
                            "business-toys.com", 
                            "cleanskycloud.com", 
                            "cumberbat.com", 
                            "czreadsecurity.com", 
                            "dgtresorgouv.com", 
                            "dimediamikedask.com", 
                            "diresitioscon.com", 
                            "elcolectador.com", 
                            "elperuanos.org", 
                            "eprotectioneu.com", 
                            "fheacor.com", 
                            "followthewaterdata.com", 
                            "francevrteepress.com", 
                            "futtuhy.com", 
                            "gardienweb.com", 
                            "heimflugaustr.com", 
                            "ivpsers.com", 
                            "jkeducation.org", 
                            "micrlmb.com", 
                            "muthesck.com", 
                            "netscalertech.com", 
                            "newgoldbalmap.com", 
                            "news-laestrella.com", 
                            "noticialif.com", 
                            "opentanzanfoundation.com", 
                            "optonlinepress.com", 
                            "palazzochigi.com", 
                            "pandemicacre.com", 
                            "papa-ser.com", 
                            "pekematclouds.com", 
                            "pipcake.com", 
                            "popularservicenter.com", 
                            "projectsyndic.com", 
                            "qsadtv.com", 
                            "sankreal.com", 
                            "scielope.com", 
                            "seoamdcopywriting.com", 
                            "slidenshare.com", 
                            "somoswake.com", 
                            "squarespacenow.com", 
                            "subapostilla.com", 
                            "suzukicycles.net", 
                            "tatanotakeeps.com", 
                            "tijuanazxc.com", 
                            "transactioninfo.net", 
                            "eurolabspro.com", 
                            "adelluminate.com", 
                            "headhunterblue.com", 
                            "primenuesty.com" 
                            ]);
  let SHA256Hashes = dynamic (["02daf4544bcefb2de865d0b45fc406bee3630704be26a9d6da25c9abe906e7d2", 
                              "0a45ec3da31838aa7f56e4cbe70d5b3b3809029f9159ff0235837e5b7a4cb34c", 
                              "0d7965489810446ca7acc7a2160795b22e452a164261313c634a6529a0090a0c", 
                              "10bb4e056fd19f2debe61d8fc5665434f56064a93ca0ec0bef946a4c3e098b95", 
                              "12d914f24fe5501e09f5edf503820cc5fe8b763827a1c6d44cdb705e48651b21", 
                              "1899f761123fedfeba0fee6a11f830a29cd3653bcdcf70380b72a05b921b4b49", 
                              "22e68e366dd3323e5bb68161b0938da8e1331e4f1c1819c8e84a97e704d93844", 
                              "259783405ec2cb37fdd8fd16304328edbb6a0703bc3d551eba252d9b450554ef", 
                              "26debed09b1bbf24545e3b4501b799b66a0146d4020f882776465b5071e91822", 
                              "35c5f22bb11f7dd7a2bb03808e0337cb7f9c0d96047b94c8afdab63efc0b9bb2", 
                              "3ae2d9ffa4e53519e62cc0a75696f9023f9cce09b0a917f25699b48d0f7c4838", 
                              "3bac2e459c69fcef8c1c93c18e5f4f3e3102d8d0f54a63e0650072aeb2a5fa65", 
                              "3c0bf69f6faf85523d9e60d13218e77122b2adb0136ffebbad0f39f3e3eed4e6", 
                              "3dc0001a11d54925d2591aec4ea296e64f1d4fdf17ff3343ddeea82e9bd5e4f1", 
                              "3fd73af89e94af180b1fbf442bbfb7d7a6c4cf9043abd22ac0aa2f8149bafc90", 
                              "6854df6aa0af46f7c77667c450796d5658b3058219158456e869ebd39a47d54b", 
                              "6b79b807a66c786bd2e57d1c761fc7e69dd9f790ffab7ce74086c4115c9305ce", 
                              "7944a86fbef6238d2a55c14c660c3a3d361c172f6b8fa490686cc8889b7a51a0", 
                              "926904f7c0da13a6b8689c36dab9d20b3a2e6d32f212fca9e5f8cf2c6055333c", 
                              "95e98c811ea9d212673d0e84046d6da94cbd9134284275195800278593594b5a", 
                              "a142625512e5372a1728595be19dbee23eea50524b4827cb64ed5aaeaaa0270b", 
                              "afe5e9145882e0b98a795468a4c0352f5b1ddb7b4a534783c9e8fc366914cf6a", 
                              "b9027bad09a9f5c917cf0f811610438e46e42e5e984a8984b6d69206ceb74124", 
                              "c132d59a3bf0099e0f9f5667daf7b65dba66780f4addd88f04eecae47d5d99fa", 
                              "c9a5765561f52bbe34382ce06f4431f7ac65bafe786db5de89c29748cf371dda", 
                              "ce0408f92635e42aadc99da3cc1cbc0044e63441129c597e7aa1d76bf2700c94", 
                              "ce47bacc872516f91263f5e59441c54f14e9856cf213ca3128470217655fc5e6", 
                              "d0fe4562970676e30a4be8cb4923dc9bfd1fca8178e8e7fea0f3f02e0c7435ce", 
                              "d5b36648dc9828e69242b57aca91a0bb73296292bf987720c73fcd3d2becbae6", 
                              "e72d142a2bc49572e2d99ed15827fc27c67fc0999e90d4bf1352b075f86a83ba"
                              ]);
  let SigNames = dynamic(["Backdoor:Win32/Leeson", "Trojan:Win32/Kechang", "Backdoor:Win32/Nightimp!dha", "Trojan:Win32/QuarkBandit.A!dha", "TrojanSpy:Win32/KeyLogger"]);
  (union isfuzzy=true
  (CommonSecurityLog 
  | parse Message with * '(' DNSName ')' * 
  | where isnotempty(FileHash)
  | where FileHash in (SHA256Hashes) or DNSName in~ (DomainNames)
  | extend Account = SourceUserID, Computer = DeviceName, IPAddress = SourceIP
  ),
  (_Im_Dns(domain_has_any = DomainNames)
  | extend DNSName = DnsQuery
  | extend IPAddress = SrcIpAddr
  ),
  (_Im_WebSession(url_has_any = DomainNames)
  | extend DNSName = tostring(parse_url(Url)["Host"])
  | extend IPAddress = SrcIpAddr
  ),
  (Event
  //This query uses sysmon data depending on table name used this may need updataing
  | where Source == "Microsoft-Windows-Sysmon"
  | extend EvData = parse_xml(EventData)
  | extend EventDetail = EvData.DataItem.EventData.Data
  | extend Hashes = EventDetail.[16].["#text"]
  | parse Hashes with * 'SHA256=' SHA256 ',' * 
  | where isnotempty(Hashes)
  | where Hashes in (SHA256Hashes) 
  | extend Account = UserName
  ),
  (DeviceFileEvents
  | where SHA256 in~ (SHA256Hashes)
  | extend Account = RequestAccountName, Computer = DeviceName, IPAddress = RequestSourceIP, CommandLine = InitiatingProcessCommandLine, FileHash = SHA256
  | project Type, TimeGenerated, Computer, Account, IPAddress, CommandLine, FileHash
  ),
  (imFileEvent
  | where TargetFileSHA256 in~ (SHA256Hashes)
  | extend Account = ActorUsername, Computer = DvcHostname, IPAddress = SrcIpAddr, CommandLine = ActingProcessCommandLine, FileHash = TargetFileSHA256
  | project Type, TimeGenerated, Computer, Account, IPAddress, CommandLine, FileHash
  ),
  (DeviceNetworkEvents
  | where RemoteUrl in~ (DomainNames)
  | extend Computer = DeviceName, IPAddress = LocalIP, Account = InitiatingProcessAccountName
  | project Type, TimeGenerated, Computer, Account, IPAddress, RemoteUrl
  ),
  (SecurityAlert
  | where ProductName == "Microsoft Defender Advanced Threat Protection"
  | extend ThreatName = tostring(parse_json(ExtendedProperties).ThreatName)
  | where isnotempty(ThreatName)
  | where ThreatName has_any (SigNames)
  | extend Computer = tostring(parse_json(Entities)[0].HostName)
  ),
  (AzureDiagnostics 
  | where ResourceType == "AZUREFIREWALLS"
  | where Category == "AzureFirewallApplicationRule"
  | parse msg_s with Protocol 'request from ' SourceHost ':' SourcePort 'to ' DestinationHost ':' DestinationPort '. Action:' Action
  | where isnotempty(DestinationHost)
  | where DestinationHost has_any (DomainNames)  
  | extend DNSName = DestinationHost 
  | extend IPAddress = SourceHost
  )
  )
  | extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer, IPCustomEntity = IPAddress
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: Host
    fieldMappings:
      - identifier: FullName
        columnName: HostCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
version: 2.0.0
kind: Scheduled
