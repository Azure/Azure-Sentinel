id: ab4b6944-a20d-42ab-8b63-238426525801
name:  "[Deprecated] - Solorigate Domains Found in VM Insights"
description: | 
    'This query has been deprecated as the associated IoCs (Indicators of Compromise) are outdated and no longer relevant. To ensure effective threat detection, it is recommended to implement Microsoft's Threat Intelligence solution, which enables matching your log data with the most up-to-date IoCs generated by Microsoft. This solution can be installed from the Microsoft Sentinel Content Hub if not currently deployed. More details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy'
severity: High
status: Available
requiredDataConnectors: 
  - connectorId: AzureMonitor(VMInsights) 
    dataTypes: 
      - VMConnection 
  - connectorId: AzureMonitor(VMInsights) 
    dataTypes: 
      - VMProcess
  - connectorId: AzureMonitor(VMInsights) 
    dataTypes: 
      - VMComputer
queryFrequency: 1h 
queryPeriod: 1h
triggerOperator: gt 
triggerThreshold: 0 
tactics: 
  - CommandAndControl 
relevantTechniques:
  - T1102
tags:
  - Solorigate
  - NOBELIUM
query:  |  

  let domains = dynamic(["incomeupdate.com","zupertech.com","databasegalore.com","panhardware.com","avsvmcloud.com","digitalcollege.org","freescanonline.com","deftsecurity.com","thedoccloud.com","virtualdataserver.com","lcomputers.com","webcodez.com","globalnetworkissues.com","kubecloud.com","seobundlekit.com","solartrackingsystem.net","virtualwebdata.com"]);
  let timeframe = 1h;
  let connections = VMConnection 
      | where TimeGenerated >= ago(timeframe)
      | extend DNSName = set_union(todynamic(RemoteDnsCanonicalNames),todynamic(RemoteDnsQuestions))
      | mv-expand DNSName
      | where isnotempty(DNSName)
      | where DNSName has_any (domains)
      | extend IPCustomEntity = RemoteIp
      | summarize TimeGenerated = arg_min(TimeGenerated, *), requests = count() by IPCustomEntity, DNSName = tostring(DNSName), AgentId, Machine, Process;
  let processes = VMProcess
      | where TimeGenerated >= ago(timeframe)
      | project AgentId, Machine, Process, UserName, UserDomain, ExecutablePath, CommandLine, FirstPid
      | extend exePathArr = split(ExecutablePath, "\\")
      | extend DirectoryName = array_strcat(array_slice(exePathArr, 0, array_length(exePathArr) - 2), "\\")
      | extend Filename = array_strcat(array_slice(exePathArr, array_length(exePathArr) - 1, array_length(exePathArr)), "\\")
      | project-away exePathArr;
  let computers = VMComputer
      | where TimeGenerated >= ago(timeframe)
      | project HostCustomEntity = HostName, AzureResourceId = _ResourceId, AgentId, Machine;
  connections | join kind = inner (processes) on AgentId, Machine, Process
              | join kind = inner (computers) on AgentId, Machine
               

entityMappings:
  - entityType: Host
    fieldMappings:
      - identifier: HostName
        columnName: HostCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity 
  - entityType: DNS
    fieldMappings:
      - identifier: DomainName
        columnName: DNSName
  - entityType: Process
    fieldMappings:
      - identifier: ProcessId
        columnName: FirstPid
      - identifier: CommandLine
        columnName: CommandLine
  - entityType: File
    fieldMappings:
      - identifier: Directory
        columnName: DirectoryName
      - identifier: Name
        columnName: Filename       
version: 2.0.0
kind: Scheduled