id: d804b39c-03a4-417c-a949-bdbf21fa3305
name: "[Deprecated] - Exchange Server Vulnerabilities Disclosed March 2021 IoC Match"
description: |
    'This query has been deprecated as the associated IoCs (Indicators of Compromise) are outdated and no longer relevant. To ensure effective threat detection, it is recommended to implement Microsoft's Threat Intelligence solution, which enables matching your log data with the most up-to-date IoCs generated by Microsoft. This solution can be installed from the Microsoft Sentinel Content Hub if not currently deployed. More details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy'
severity: Medium
status: Available
tags:
  - Schema: ASIMDns
    SchemaVersion: 0.1.1
  - Schema: ASIMFileEvent
    SchemaVersion: 0.1.0
requiredDataConnectors:
  - connectorId: AWSS3
    datatypes:
      - AWSVPCFlow
  - connectorId: WindowsForwardedEvents
    dataTypes:
      - WindowsEvent
  - connectorId: AzureMonitor(IIS) 
    dataTypes:
      - W3CIISLog
  - connectorId: AzureMonitor(WireData)
    dataTypes:
      - WireData
  - connectorId: CheckPoint
    dataTypes:
      - CommonSecurityLog (CheckPoint)
  - connectorId: CiscoASA
    dataTypes:
      - CommonSecurityLog (Cisco)
  - connectorId: CEF
    dataTypes:
      - CommonSecurityLog
  - connectorId: F5
    dataTypes:
      - CommonSecurityLog (F5)
  - connectorId: Fortinet
    dataTypes:
      - CommonSecurityLog (Fortinet)
  - connectorId: PaloAltoNetworks
    dataTypes:
      - CommonSecurityLog (PaloAlto)
  - connectorId: SecurityEvents
    dataTypes:
      - SecurityEvents
  - connectorId: WindowsFirewall
    dataTypes:
      - WindowsFirewall
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog
  - connectorId: InfobloxNIOS
    dataTypes: 
      - Syslog
  - connectorId: MicrosoftSysmonForLinux
    dataTypes: 
      - Syslog
  - connectorId: GCPDNSDataConnector
    dataTypes: 
      - GCP_DNS_CL
  - connectorId: WindowsForwardedEvents
    dataTypes: 
      - WindowsEvent 
  - connectorId: NXLogDnsLogs
    dataTypes: 
      - NXLog_DNS_Server_CL
  - connectorId: CiscoUmbrellaDataConnector
    dataTypes: 
      - Cisco_Umbrella_dns_CL
  - connectorId: Corelight
    dataTypes: 
      - Corelight_CL
queryFrequency: 1h
queryPeriod: 1h
triggerOperator: gt
triggerThreshold: 0
tactics:
  - InitialAccess
relevantTechniques:
  - T1190
query: |
  let iocs = externaldata(DateAdded:string,FirstSeen:string,IoC:string,Type:string,TLP:string)
  [@"https://raw.githubusercontent.com/Azure/Azure-Sentinel/master/Sample%20Data/Feeds/MSTICIoCs-ExchangeServerVulnerabilitiesDisclosedMarch2021.csv"] with (format="csv", ignoreFirstRecord=True);
  let file_paths = (iocs | where Type =~ "filepath" | project IoC);
  let sha256s = (iocs | where Type =~ "sha256" | project IoC);
  let ips = (iocs | where Type =~ "ip" | project IoC);
  let domains = (iocs | where Type =~ "domainname" | project IoC);
  let dyndomains = todynamic(toscalar((domains | summarize make_set(IoC))));
  union isfuzzy=true
  (SecurityEvent
  | where EventID == 4663
  | where ObjectName in (file_paths)
  | extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer
  ),
  (WindowsEvent
  | where EventID == 4663 and EventData has_any (file_paths)
  | extend ObjectName = tostring(EventData.ObjectName) 
  | where ObjectName in (file_paths)
  | extend Account = strcat(tostring(EventData.SubjectDomainName), "\\", tostring(EventData.SubjectUserName))
  | extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer
  ),
  (imFileEvent
  | where TargetFileName in (file_paths)
    or
    TargetFileSHA256 in (sha256s)
  | extend timestamp = TimeGenerated, AccountCustomEntity = ActorUsername, HostCustomEntity = DvcHostname
  ),
  (DeviceFileEvents
  | where FolderPath in (file_paths)
  | extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingProcessAccountName, HostCustomEntity = DeviceName
  ),
  (DeviceEvents
  | where InitiatingProcessSHA256 in (sha256s)
  | extend timestamp = TimeGenerated, AccountCustomEntity = InitiatingProcessAccountName, HostCustomEntity = DeviceName
  ),
    (CommonSecurityLog
  | where FileHash in (sha256s)
  | extend timestamp = TimeGenerated
  ),
  (Event // File iocs
  //This query uses sysmon data depending on table name used this may need updating
  | where Source == "Microsoft-Windows-Sysmon"
  | extend EvData = parse_xml(EventData)
  | extend EventDetail = EvData.DataItem.EventData.Data
  | extend Hashes = EventDetail.[16].["#text"]
  | where isnotempty(Hashes)
  | parse Hashes with * 'SHA256=' SHA256 ',' *
  | where SHA256 in~ (sha256s)
  | extend Type = strcat(Type, ": ", Source), Account = UserName, FileHash = Hashes
  | extend timestamp = TimeGenerated, AccountCustomEntity = Account, HostCustomEntity = Computer
  ),
  (CommonSecurityLog
  | where isnotempty(SourceIP) or isnotempty(DestinationIP)
  | where (SourceIP in (ips) or DestinationIP in (ips) or Message has_any (ips)) or (RequestURL has_any (domains))
  | extend IPMatch = case(SourceIP in (ips), "SourceIP", DestinationIP in (ips), "DestinationIP", "Message")
  | summarize StartTimeUtc = min(TimeGenerated), EndTimeUtc = max(TimeGenerated) by SourceIP, DestinationIP, DeviceProduct, DeviceAction, Message, Protocol, SourcePort, DestinationPort, DeviceAddress, DeviceName, IPMatch
  | extend timestamp = StartTimeUtc, IPCustomEntity = case(IPMatch == "SourceIP", SourceIP, IPMatch == "DestinationIP", DestinationIP, "IP in Message Field")
  ),
  (Event
  | where Source == "Microsoft-Windows-Sysmon"
  | where EventID == 3
  | extend EvData = parse_xml(EventData)
  | extend EventDetail = EvData.DataItem.EventData.Data
  | extend SourceIP = EventDetail.[9].["#text"], DestinationIP = EventDetail.[14].["#text"]
  | where SourceIP in (ips) or DestinationIP in (ips)
  | extend IPMatch = case( SourceIP in (ips), "SourceIP", DestinationIP in (ips), "DestinationIP", "None")
  | extend timestamp = TimeGenerated, AccountCustomEntity = UserName, HostCustomEntity = Computer , IPCustomEntity = case(IPMatch == "SourceIP", SourceIP, IPMatch == "DestinationIP", DestinationIP, "None")
  ),
  (WireData
  | where isnotempty(RemoteIP)
  | where RemoteIP in (ips)
  | extend timestamp = TimeGenerated, IPCustomEntity = RemoteIP, HostCustomEntity = Computer
  ),
  (W3CIISLog
  | where isnotempty(cIP)
  | where cIP in (ips)
  | extend timestamp = TimeGenerated, IPCustomEntity = cIP, HostCustomEntity = Computer, AccountCustomEntity = csUserName
  ),
  (
  WindowsFirewall
  | where SourceIP in (ips) or DestinationIP in (ips)
  | extend IPMatch = case( SourceIP in (ips), "SourceIP", DestinationIP in (ips), "DestinationIP", "None")
  ),
  (
    _Im_NetworkSession(srcipaddr_has_any_prefix=ips) 
    | extend IPCustomEntity = SrcIpAddr, AccountCustomEntity= User, HostCustomEntity=Hostname
  ),
    (
    _Im_NetworkSession(dstipaddr_has_any_prefix=ips) 
    | extend IPCustomEntity = DstIpAddr, AccountCustomEntity= User, HostCustomEntity=Hostname
  ),
  (_Im_Dns(domain_has_any=dyndomains)
  | extend timestamp = TimeGenerated, IPCustomEntity = SrcIpAddr, HostCustomEntity = Dvc
  )
  
entityMappings:
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: Host
    fieldMappings:
      - identifier: FullName
        columnName: HostCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
version: 2.0.0
kind: Scheduled
