id: 7249500f-3038-4b83-8549-9cd8dfa2d498
name: "[Deprecated] - Known Mint Sandstorm group domains/IP - October 2020"
description: |
    'This query has been deprecated as the associated IoCs (Indicators of Compromise) are outdated and no longer relevant. To ensure effective threat detection, it is recommended to implement Microsoft's Threat Intelligence solution, which enables matching your log data with the most up-to-date IoCs generated by Microsoft. This solution can be installed from the Microsoft Sentinel Content Hub if not currently deployed. More details on the Content Hub can be found here: https://learn.microsoft.com/azure/sentinel/sentinel-solutions-deploy'
severity: High
status: Available
requiredDataConnectors:
  - connectorId: DNS
    dataTypes:
      - DnsEvents
  - connectorId: AzureMonitor(VMInsights)
    dataTypes:
      - VMConnection
  - connectorId: CiscoASA
    dataTypes:
      - CommonSecurityLog (Cisco)
  - connectorId: PaloAltoNetworks
    dataTypes:
      - CommonSecurityLog (PaloAlto)
  - connectorId: Zscaler
    dataTypes:
      - CommonSecurityLog (Zscaler)
  - connectorId: Fortinet
    dataTypes:
      - CommonSecurityLog (Fortinet)
  - connectorId: OfficeATP
    dataTypes:
      - SecurityAlert (OATP)
  - connectorId: AzureFirewall
    dataTypes:
      - AzureDiagnostics (Azure Firewall)
      - AZFWApplicationRule
      - AZFWDnsQuery
queryFrequency: 1d
queryPeriod: 1d
triggerOperator: gt
triggerThreshold: 0
tactics:
  - CommandAndControl
  - InitialAccess
relevantTechniques:
  - T1071
  - T1566
query: |
  let DomainNames = dynamic(["de-ma.online", "g20saudi.000webhostapp.com", "ksat20.000webhostapp.com"]);
  let EmailAddresses = dynamic(["munichconference1962@gmail.com","munichconference@outlook.de", "munichconference@outlook.com", "t20saudiarabia@gmail.com", "t20saudiarabia@hotmail.com", "t20saudiarabia@outlook.sa"]);
  let IPRegex = '[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}';
  (union isfuzzy=true
  (CommonSecurityLog
  | parse Message with * '(' DNSName ')' *
  | extend MessageIP = extract(IPRegex, 0, Message)
  | extend RequestURLIP = extract(IPRegex, 0, Message)
  | where (isnotempty(DNSName) and DNSName has_any (DomainNames))
    or (isnotempty(DestinationHostName) and DestinationHostName has_any (DomainNames))
    or (isnotempty(RequestURL) and (RequestURL has_any (DomainNames)))
  | extend timestamp = TimeGenerated , AccountCustomEntity = SourceUserID, HostCustomEntity = DeviceName, IPCustomEntity = DestinationIP
  ),
  (DnsEvents
  | extend DestinationIPAddress = IPAddresses, DNSName = Name, Host = Computer
  | where DNSName has_any (DomainNames)
  | extend timestamp = TimeGenerated, IPCustomEntity = DestinationIPAddress, HostCustomEntity = Host),
  (VMConnection
  | parse RemoteDnsCanonicalNames with * '["' DNSName '"]' *
  | where isnotempty(DNSName)
  | where DNSName has_any (DomainNames)
  | extend timestamp = TimeGenerated , HostCustomEntity = Computer),
  (SecurityAlert
  | where ProviderName =~ 'OATP'
  | extend UPN = case(isnotempty(parse_json(Entities)[0].Upn), parse_json(Entities)[0].Upn,
                      isnotempty(parse_json(Entities)[1].Upn), parse_json(Entities)[1].Upn,
                      isnotempty(parse_json(Entities)[2].Upn), parse_json(Entities)[2].Upn,
                      isnotempty(parse_json(Entities)[3].Upn), parse_json(Entities)[3].Upn,
                      isnotempty(parse_json(Entities)[4].Upn), parse_json(Entities)[4].Upn,
                      isnotempty(parse_json(Entities)[5].Upn), parse_json(Entities)[5].Upn,
                      isnotempty(parse_json(Entities)[6].Upn), parse_json(Entities)[6].Upn,
                      isnotempty(parse_json(Entities)[7].Upn), parse_json(Entities)[7].Upn,
                      isnotempty(parse_json(Entities)[8].Upn), parse_json(Entities)[8].Upn,
                      parse_json(Entities)[9].Upn)
  | where Entities has_any (EmailAddresses)
  | extend timestamp = TimeGenerated, AccountCustomEntity = tostring(UPN)),
  (AzureDiagnostics
  | where ResourceType =~ "AZUREFIREWALLS"
  | where msg_s has_any (DomainNames)
  | extend timestamp = TimeGenerated),
  (AzureDiagnostics
  | where ResourceType == "AZUREFIREWALLS"
  | where Category == "AzureFirewallDnsProxy"
  | where msg_s has_any (DomainNames)
  | extend timestamp = TimeGenerated),
  (AZFWApplicationRule
  | where isnotempty(Fqdn)
  | where Fqdn has_any (DomainNames)  
  | extend timestamp = TimeGenerated),
  (AZFWDnsQuery
  | where isnotempty(QueryName)
  | where QueryName has_any (DomainNames)
  | extend timestamp = TimeGenerated))
entityMappings:
  - entityType: Account
    fieldMappings:
      - identifier: FullName
        columnName: AccountCustomEntity
  - entityType: Host
    fieldMappings:
      - identifier: FullName
        columnName: HostCustomEntity
  - entityType: IP
    fieldMappings:
      - identifier: Address
        columnName: IPCustomEntity
version: 2.0.0
kind: Scheduled
