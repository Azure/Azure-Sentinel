{
    "name": "CarbonBlackTemplateConnectorDefinition",
    "apiVersion": "2022-09-01-preview",
    "type": "Microsoft.SecurityInsights/dataConnectorDefinitions",
    "kind": "Customizable",
    "properties": {
        "connectorUiConfig": {
            "id": "carbonBlackAWSS3",
            "title": "VMware Carbon Black Cloud via AWS S3",
            "publisher": "Microsoft",
            "descriptionMarkdown": "The [VMware Carbon Black Cloud](https://www.vmware.com/products/carbon-black-cloud.html) via AWS S3 data connector provides the capability to ingest watchlist, alerts, auth and endpoints events via AWS S3 and stream them to ASIM normalized tables. The connector provides ability to get events which helps to examine potential security risks, analyze your team's use of collaboration, diagnose configuration problems and more.",
            "graphQueriesTableName": "CarbonBlack_Alerts_CL",
            "graphQueries": [
                {
                    "metricName": "CarbonBlack_Alerts_CL",
                    "legend": "Alerts",
                    "baseQuery": "CarbonBlack_Alerts_CL"
                },
                {
                    "metricName": "CarbonBlack_Watchlist_CL",
                    "legend": "Watchlist",
                    "baseQuery": "CarbonBlack_Watchlist_CL"
                },
                {
                    "metricName": "ASimNetworkSessionLogs",
                    "legend": "ASimNetworkSessionLogs",
                    "baseQuery": "ASimNetworkSessionLogs | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' "
                },
                {
                    "metricName": "ASimProcessEventLogs",
                    "legend": "ASimProcessEventLogs",
                    "baseQuery": "ASimProcessEventLogs | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' "
                },
                {
                    "metricName": "ASimFileEventLogs",
                    "legend": "ASimFileEventLogs",
                    "baseQuery": "ASimFileEventLogs | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' "
                },
                {
                    "metricName": "ASimRegistryEventLogs",
                    "legend": "ASimRegistryEventLogs",
                    "baseQuery": "ASimRegistryEventLogs | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' "
                },
                {
                    "metricName": "ASimAuthenticationEventLogs",
                    "legend": "Auth",
                    "baseQuery": "ASimAuthenticationEventLogs | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'"
                }
            ],
            "sampleQueries": [
                {
                    "description": "Get a sample of CarbonBlack Alert logs",
                    "query": "CarbonBlack_Alerts_CL\n | take 10"
                },
                {
                    "description": "Get a sample of CarbonBlack Watchlist logs",
                    "query": "CarbonBlack_Watchlist_CL\n| take 10"
                },
                {
                    "description": "Get a sample of Carbonblack ASimNetwork Session logs",
                    "query": "ASimNetworkSessionLogs\n | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'\n| take 10"
                },
                {
                    "description": "Get a sample of CarbonBlack ASimProcess Event logs",
                    "query": "ASimProcessEventLogs\n | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'\n| take 10"
                },
                {
                    "description": "Get a sample of CarbonBlack ASimFile Event logs",
                    "query": "ASimFileEventLogs\n | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'\n| take 10"
                },
                {
                    "description": "Get a sample of CarbonBlack ASimRegistry Event logs",
                    "query": "ASimRegistryEventLogs\n | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'\n| take 10"
                },
                {
                    "description": "Get a sample of CarbonBlack ASimAuthentication Event logs",
                    "query": "ASimAuthenticationEventLogs\n | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare'\n| take 10"
                }
            ],
            "dataTypes": [
                {
                    "name": "CarbonBlack_Alerts_CL",
                    "lastDataReceivedQuery": "CarbonBlack_Alerts_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "CarbonBlack_Watchlist_CL",
                    "lastDataReceivedQuery": "CarbonBlack_Watchlist_CL\n       | where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "ASimNetworkSessionLogs",
                    "lastDataReceivedQuery": "union ASimNetworkSessionLogs | where TimeGenerated > ago(12h) | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' | summarize Time = max(TimeGenerated)| where isnotempty(Time)"
                },
                {
                    "name": "ASimProcessEventLogs",
                    "lastDataReceivedQuery": "union ASimProcessEventLogs | where TimeGenerated > ago(12h) | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' | summarize Time = max(TimeGenerated)| where isnotempty(Time)"
                },
                {
                    "name": "ASimFileEventLogs",
                    "lastDataReceivedQuery": "union ASimFileEventLogs | where TimeGenerated > ago(12h) | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' | summarize Time = max(TimeGenerated)| where isnotempty(Time)"
                },
                {
                    "name": "ASimAuthenticationEventLogs",
                    "lastDataReceivedQuery": "ASimAuthenticationEventLogs\n  | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' |  where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                },
                {
                    "name": "ASimRegistryEventLogs",
                    "lastDataReceivedQuery": "ASimRegistryEventLogs\n  | where EventProduct == 'Carbon Black Cloud' and EventVendor == 'VMWare' |  where TimeGenerated > ago(12h)                | summarize Time = max(TimeGenerated)\n            | where isnotempty(Time)"
                }
            ],
            "connectivityCriteria": [
                {
                    "type": "HasDataConnectors"
                }
            ],
            "availability": {
                "isPreview": false
            },
            "permissions": {
                "resourceProvider": [
                    {
                        "provider": "Microsoft.OperationalInsights/workspaces",
                        "permissionsDisplayText": "write permission.",
                        "providerDisplayName": "Workspace",
                        "scope": "Workspace",
                        "requiredPermissions": {
                            "write": true,
                            "delete": true
                        }
                    }
                ],
                "customs": [
                    {
                        "name": "Environment",
                        "description": "You must have the following AWS resources defined and configured: S3, Simple Queue Service (SQS), IAM roles and permissions policies"
                    },
                    {
                        "name": "Environment",
                        "description": "You must have the a Carbon black account and required permissions to create a Data Forwarded to AWS S3 buckets. \nFor more details visit [Carbon Black Data Forwarder Docs](https://docs.vmware.com/en/VMware-Carbon-Black-Cloud/services/carbon-black-cloud-user-guide/GUID-E8D33F72-BABB-4157-A908-D8BBDB5AF349.html)"
                    }
                ]
            },
            "instructionSteps": [
                {
                    "instructions": [
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "#### 1. AWS CloudFormation Deployment \n To configure access on AWS, two templates has been generated to set up the AWS environment to send logs from S3 bucket to your Log Analytics Workspace.\n #### For each template, create Stack in AWS: \n 1. Go to [AWS CloudFormation Stacks](https://aka.ms/awsCloudFormationLink#/stacks/create) \n 2. In AWS, choose the 'Upload a template file' option and click on 'Choose file'. Select the downloaded template \n 3. Click 'Next' and 'Create stack'"
                            }
                        },
                        {
                            "type": "CopyableLabel",
                            "parameters": {
                                "label": "Template 1: OpenID connect authentication deployment",
                                "isMultiLine": true,
                                "fillWith": [
                                    "Oidc"
                                ]
                            }
                        },
                        {
                            "type": "CopyableLabel",
                            "parameters": {
                                "label": "Template 2: AWS Carbon Black resources deployment",
                                "isMultiLine": true,
                                "fillWith": [
                                    "CarbonBlack"
                                ]
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "When deploying 'Template 2: AWS Carbon Black resources deployment' template you'll need supply a few parameters \n * **Stack Name**: A stack name of your choosing (will appear in the list of stacks in AWS)\n * **Role Name**: Must begin with 'OIDC_' prefix, has a default value. \n * **Bucket Name**: Bucket name of your choosing, if you already have an existing bucket paste the name here \n * **CreateNewBucket**: If you already have an existing bucket that you would like to use for this connector select 'false' for this option, otherwise a bucket with the name you entered in 'Bucket Name' will be created from this stack. \n * **Region**: This is the region of the AWS resources based on Carbon Black's mapping - for more information please see [Carbon Black documentation](https://developer.carbonblack.com/reference/carbon-black-cloud/integrations/data-forwarder/quick-setup/#create-a-bucket).\n * **SQSQueuePrefix**: The stack create multiple queues, this prefix will be added to each one of them. \n * **WorkspaceID**: Use the Workspace ID provided below."
                            }
                        },
                        {
                            "type": "CopyableLabel",
                            "parameters": {
                                "fillWith": [
                                    "WorkspaceId"
                                ],
                                "label": "Workspace ID"
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "Once the deployment is complete - head to the 'Outputs' tab, you will see: Role ARN, S3 bucket and 4 SQS resources created. You will need those resources in the next step when configuring Carbon Black's data forwarders and the data connector."
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "#### 2. Carbon Black data forwarder configuration \n After all AWS resources has been created you'll need to configure Carbon Black to forward the events to the AWS buckets for Microsoft Sentinel to ingest them. Follow [Carbon Black's documentation on how to create a 'Data Forwarders'](https://developer.carbonblack.com/reference/carbon-black-cloud/integrations/data-forwarder/quick-setup/#2-create-a-forwarder) Use the first recommended option. When asked to input a bucket name use the bucket created in the previous step. \n You will be required to add 'S3 prefix' for each forwarder, please use this mapping:"
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": " | Event type      | S3 prefix | \n |-----------------|-----------|\n | Alert           | carbon-black-cloud-forwarder/Alerts    |\n | Auth Events     | carbon-black-cloud-forwarder/Auth      |\n | Endpoint Events | carbon-black-cloud-forwarder/Endpoint  |\n | Watchlist Hit   | carbon-black-cloud-forwarder/Watchlist |"
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "#### 2.1. Test your data forwarder (Optional) \n To validate the data forwarder is configured as expected, in Carbon Black's portal search for the data forwarder that you just created and click on 'Test Forwarder' button under the 'Actions' column, this will generate a 'HealthCheck' file in the S3 Bucket, you should see it appear immediately."
                            }
                        },
                        {
                            "type": "Markdown",
                            "parameters": {
                                "content": "#### 3. Connect new collectors \n To enable AWS S3 for Microsoft Sentinel, click the 'Add new collector' button, fill the required information, the ARN role and the SQS URL are created in step 1, note that you will need to enter the correct SQS URL and select the appropriate event type from the dropdown, for example if you want to ingest Alert events you will need to copy the Alerts SQS URL and select the 'Alerts' event type in the dropdown"
                            }
                        }
                    ]
                },
                {
                    "instructions": [
                        {
                            "type": "DataConnectorsGrid",
                            "parameters": {
                                "mapping": [
                                    {
                                        "columnValue": "properties.roleArn",
                                        "columnName": "Role ARN"
                                    },
                                    {
                                        "columnValue": "properties.sqsUrls[0]",
                                        "columnName": "Queue URL"
                                    },
                                    {
                                        "columnValue": "properties.dcrConfig.streamName",
                                        "columnName": "Stream name"
                                    }
                                ],
                                "menuItems": [
                                    "DeleteConnector"
                                ]
                            }
                        },
                        {
                            "type": "ContextPane",
                            "parameters": {
                                "contextPaneType": "DataConnectorsContextPane",
                                "title": "Add new controller",
                                "subtitle": "AWS S3 connector",
                                "label": "Add new collector",
                                "instructionSteps": [
                                    {
                                        "title": "Account details",
                                        "instructions": [
                                            {
                                                "type": "Textbox",
                                                "parameters": {
                                                    "label": "Role ARN",
                                                    "type": "text",
                                                    "name": "roleArn",
                                                    "validations": {
                                                        "required": true
                                                    }
                                                }
                                            },
                                            {
                                                "type": "Textbox",
                                                "parameters": {
                                                    "label": "Queue URL",
                                                    "type": "text",
                                                    "name": "queueUrl",
                                                    "validations": {
                                                        "required": true
                                                    }
                                                }
                                            },
                                            {
                                                "type": "Dropdown",
                                                "parameters": {
                                                    "label": "Data type",
                                                    "type": "text",
                                                    "name": "streamName",
                                                    "required": true,
                                                    "placeholder": "Select a data type",
                                                    "options": [
                                                        {
                                                            "key": "Custom-CarbonBlackAlertsStream",
                                                            "text": "Alerts"
                                                        },
                                                        {
                                                            "key": "Custom-CarbonBlackAuthStream",
                                                            "text": "Auth Events"
                                                        },
                                                        {
                                                            "key": "Custom-CarbonBlackEndpointStream",
                                                            "text": "Endpoint Events"
                                                        },
                                                        {
                                                            "key": "Custom-CarbonBlackWatchlistStream",
                                                            "text": "Watchlist"
                                                        }
                                                    ]
                                                }
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    ]
                }
            ]
        }
    }
}