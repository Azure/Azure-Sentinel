{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionAppName": {
            "defaultValue": "[format('func-{0}', uniqueString(resourceGroup().id))]",
            "type": "String",
            "metadata": {
                "description": "The name of the Azure Function app."
            }
        },
        "storageAccountType": {
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "type": "String",
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "appInsightsLocation": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String",
            "metadata": {
                "description": "Location for Application Insights"
            }
        },
        "functionAppRuntime": {
            "defaultValue": "python",
            "allowedValues": [
                "dotnet-isolated",
                "python",
                "java",
                "node",
                "powerShell"
            ],
            "type": "String",
            "metadata": {
                "description": "The language worker runtime to load in the function app."
            }
        },
        "functionAppRuntimeVersion": {
            "defaultValue": "3.11",
            "allowedValues": [
                "3.10",
                "3.11",
                "7.4",
                "8.0",
                "10",
                "11",
                "17",
                "20"
            ],
            "type": "String",
            "metadata": {
                "description": "The language worker runtime version to load in the function app."
            }
        },
        "maximumInstanceCount": {
            "defaultValue": 100,
            "type": "Int"
        },
        "instanceMemoryMB": {
            "defaultValue": 2048,
            "allowedValues": [
                512,
                2048,
                4096
            ],
            "type": "Int"
        },
        "packageUri": {
            "type": "String",
            "metadata": {
                "description": "The zip content url."
            }
        },
        "roleNameGuid": {
            "defaultValue": "[newGuid()]",
            "type": "String",
            "metadata": {
                "description": "A new GUID used to identify the role assignment"
            }
        }
    },
    "variables": {
        "hostingPlanName": "[parameters('functionAppName')]",
        "applicationInsightsName": "[parameters('functionAppName')]",
        "storageAccountName": "[format('{0}azfunctions', uniqueString(resourceGroup().id))]",
        "resourceToken": "[toLower(uniqueString(subscription().id, resourceGroup().name, parameters('location')))]",
        "deploymentStorageContainerName": "[concat('app-package-', take(parameters('functionAppName'), 32),'-', take(variables('resourceToken'), 7))]",
        "storageBlobContributorRoleId": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe')]" //Storage Blob Data Contributor role
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-01-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {
                "accessTier": "Hot",
                "allowSharedKeyAccess": false
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}', variables('storageAccountName'), 'default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
            "apiVersion": "2023-01-01",
            "name": "[format('{0}/{1}/{2}', variables('storageAccountName'), 'default', variables('deploymentStorageContainerName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('storageAccountName'), 'default')]"
            ],
            "properties": {
                "publicAccess": "None"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2023-12-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[parameters('location')]",
            "sku": {
                "tier": "FlexConsumption",
                "name": "FC1"
            },
            "kind": "functionapp",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Insights/components",
            "apiVersion": "2020-02-02",
            "name": "[variables('applicationInsightsName')]",
            "location": "[parameters('appInsightsLocation')]",
            "tags": {
                "[format('hidden-link:{0}', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
            },
            "kind": "web",
            "properties": {
                "Application_Type": "web"
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2023-12-01",
            "name": "[parameters('functionAppName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "kind": "functionapp,linux",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "functionAppConfig": {
                    "deployment": {
                        "storage": {
                            "type": "blobContainer",
                            "value": "[concat(reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob, variables('deploymentStorageContainerName'))]",
                            "authentication": {
                                "type": "SystemAssignedIdentity"
                            }
                        }
                    },
                    "scaleAndConcurrency": {
                        "maximumInstanceCount": "[parameters('maximumInstanceCount')]",
                        "instanceMemoryMB": "[parameters('instanceMemoryMB')]"
                    },
                    "runtime": {
                        "name": "[parameters('functionAppRuntime')]",
                        "version": "[parameters('functionAppRuntimeVersion')]"
                    }
                },
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsStorage__accountName",
                            "value": "[variables('storageAccountName')]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('Microsoft.Insights/components', parameters('functionAppName')), '2020-02-02').InstrumentationKey]"
                        }
                    ]
                }
            }
        },
        { //Gives the function app access to the storage account using system assigned managed identity
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2022-04-01",
            "name": "[parameters('roleNameGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ],
            "properties": {
                "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2016-08-01', 'Full').identity.principalId]",
                "roleDefinitionId": "[variables('storageBlobContributorRoleId')]"
            },
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', variables('storageAccountName'))]"
        },
        { //Wait for 30 seconds before starting OneDeploy to complete role assignment before deployment
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "WaitSection",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
            ],
            "kind": "AzurePowerShell",
            "properties": {
                "azPowerShellVersion": "7.0",
                "scriptContent": "start-sleep -Seconds 30",
                "cleanupPreference": "Always",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.Web/sites/extensions",
            "apiVersion": "2022-09-01",
            "name": "[format('{0}/{1}', parameters('functionAppName'), 'onedeploy')]",
            "dependsOn": [
                "WaitSection"
            ],
            "properties": {
                "packageUri": "[parameters('packageUri')]",
                "remoteBuild": true
            }
        }
    ]
}
