{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "title": "Armis Update Alert Status",
    "description": "Armis Update Alert Status playbook would be responsible to update the Alert status from the sentinel to the Armis Portal",
    "prerequisites": [
      "1. The Armis Alerts data connector should be configured to send appropriate armis alerts events to Microsoft Sentinel.",
      "2. Store Armis API secret key in Key Vault and obtain keyvault name and tenantId.",
      "a. Create a Key Vault with unique name",
      "b. Go to KeyVault -> secrets -> Generate/import and create 'ArmisAPISecretKey' for storing Armis API Secret Key"
    ],
    "postDeployment": [
      "**a. Authorize connections**",
      "Once deployment is complete, authorize each connection.",
      "1. Click the Microsoft Sentinel connection resource",
      "2. Click edit API connection",
      "3. Click Authorize",
      "4. Sign in",
      "5. Click Save",
      "6. Repeat steps for other connections",
      "**b. Configurations in Sentinel**",
      "1. In Microsoft Sentinel, analytical rules should be configured to trigger an incident. An incident should have the *alertID* - custom entity that contains alertId of each generated Armis alert and *alertStatus* - custom entity that contains alertStatus of each generated Armis alerts. It can be obtained from the corresponding field in Armis Alerts custom logs. Check the [documentation](https://docs.microsoft.com/azure/sentinel/surface-custom-details-in-alerts) to learn more about adding custom entities to incidents.",
      "2. Configure the automation rules to trigger the playbook."
    ],
    "lastUpdateTime": "2022-10-06T00:00:00.000Z",
    "entities": [],
    "tags": [],
    "support": {
      "tier": "community",
      "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
    },
    "author": {
      "name": "Armis"
    }
  },
  "parameters": {
    "PlaybookName": {
      "defaultValue": "ArmisUpdateAlertStatus",
      "type": "string"
    },
    "ArmisInstanceBaseURL": {
      "defaultValue": "https://integration-crestdata.armis.com",
      "type": "string",
      "metadata": {
        "description": "Armis instance base URL."
      }
    },
    "keyvaultName": {
      "defaultValue": "ArmisSentinelKeyVault",
      "type": "string"
    },
    "tenantId": {
      "type": "string"
    }
  },
  "variables": {
    "MicrosoftSentinelConnectionName": "[concat('MicrosoftSentinel-', parameters('PlaybookName'))]",
    "KeyvaultConnectionName": "[concat('Keyvault-', parameters('PlaybookName'))]"
  },
  "resources": [
    {
      "properties": {
        "provisioningState": "Succeeded",
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Microsoft_Sentinel_incident": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/incident-creation"
              }
            }
          },
          "actions": {
            "Armis_Alert_Status_Update_to_Portal": {
              "runAfter": {
                "Condition_to_check_Authentication_is_success_or_not": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": {
                  "status": "@variables('ArmisAlertStatus')"
                },
                "headers": {
                  "Authorization": "@variables('ArmisAccessToken')",
                  "Content-Type": "application/json"
                },
                "method": "PATCH",
                "uri": "@{variables('ArmisAPIBaseURL')}/api/v1/alerts/@{variables('ArmisAlertID')}/"
              }
            },
            "Armis_Authentication": {
              "runAfter": {
                "Condition_to_check_incident_status_is_equals_to_New_or_not": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "body": {
                  "secret_key": "@body('Get_secret')?['value']"
                },
                "method": "POST",
                "uri": "@{variables('ArmisAPIBaseURL')}/api/v1/access_token/"
              }
            },
            "Condition_to_check_Armis_Alert_status_update_success_or_not": {
              "actions": {
                "Terminate_on_success_of_Armis_Alert_status_update": {
                  "runAfter": {},
                  "type": "Terminate",
                  "inputs": {
                    "runStatus": "Succeeded"
                  }
                }
              },
              "runAfter": {
                "Armis_Alert_Status_Update_to_Portal": [
                  "Succeeded",
                  "Failed"
                ]
              },
              "else": {
                "actions": {
                  "Terminate_on_failed_of_Armis_Alert_status_update": {
                    "runAfter": {},
                    "type": "Terminate",
                    "inputs": {
                      "runError": {
                        "code": "@{outputs('Armis_Alert_Status_Update_to_Portal')?['Statuscode']}",
                        "message": "@{body('Armis_Alert_Status_Update_to_Portal')?['message']}"
                      },
                      "runStatus": "Failed"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@outputs('Armis_Alert_Status_Update_to_Portal')?['Statuscode']",
                      200
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Condition_to_check_Authentication_is_success_or_not": {
              "actions": {
                "Set_Armis_Access_Token_variable": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ArmisAccessToken",
                    "value": "@{body('Armis_Authentication')?['data']?['access_token']}"
                  }
                }
              },
              "runAfter": {
                "Armis_Authentication": [
                  "Succeeded",
                  "Failed"
                ]
              },
              "else": {
                "actions": {
                  "Terminate_on_Armis_Authentication_failed": {
                    "runAfter": {},
                    "type": "Terminate",
                    "inputs": {
                      "runError": {
                        "code": "@{outputs('Armis_Authentication')?['Statuscode']}",
                        "message": "@{body('Armis_Authentication')?['message']}"
                      },
                      "runStatus": "Failed"
                    }
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@outputs('Armis_Authentication')?['Statuscode']",
                      200
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "Condition_to_check_incident_status_is_equals_to_New_or_not": {
              "actions": {
                "Initialize_Armis_Alert_Status_to_Unhandled_as_Incident_status_is_set_to_New": {
                  "runAfter": {},
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ArmisAlertStatus",
                    "value": "UNHANDLED"
                  }
                }
              },
              "runAfter": {
                "For_each": [
                  "Succeeded"
                ]
              },
              "else": {
                "actions": {
                  "Condition_to_check_incident_status_is_equals_to_Active_or_not": {
                    "actions": {
                      "Initialize_Armis_Alert_Status_to_Unhandled": {
                        "runAfter": {},
                        "type": "SetVariable",
                        "inputs": {
                          "name": "ArmisAlertStatus",
                          "value": "UNHANDLED"
                        }
                      }
                    },
                    "runAfter": {},
                    "else": {
                      "actions": {
                        "Condition_to_check_incident_status_is_equals_to_Closed_or_not": {
                          "actions": {
                            "Set_Armis_Alert_Status_to_Resolved": {
                              "runAfter": {},
                              "type": "SetVariable",
                              "inputs": {
                                "name": "ArmisAlertStatus",
                                "value": "RESOLVED"
                              }
                            }
                          },
                          "runAfter": {},
                          "expression": {
                            "and": [
                              {
                                "equals": [
                                  "@variables('IncidentStatus')",
                                  "Closed"
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        }
                      }
                    },
                    "expression": {
                      "and": [
                        {
                          "equals": [
                            "@variables('IncidentStatus')",
                            "Active"
                          ]
                        }
                      ]
                    },
                    "type": "If"
                  }
                }
              },
              "expression": {
                "and": [
                  {
                    "equals": [
                      "@variables('IncidentStatus')",
                      "New"
                    ]
                  }
                ]
              },
              "type": "If"
            },
            "For_each": {
              "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
              "actions": {
                "Parse_Alert_JSON": {
                  "runAfter": {},
                  "type": "ParseJson",
                  "inputs": {
                    "content": "@items('For_each')?['properties']?['additionalData']?['Custom Details']",
                    "schema": {
                      "properties": {
                        "alertID": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "alertStatus": {
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  }
                },
                "Set_Armis_Alert_ID": {
                  "runAfter": {
                    "Parse_Alert_JSON": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ArmisAlertID",
                    "value": "@{int(body('Parse_Alert_JSON')?['alertId'][0])}"
                  }
                },
                "Set_Armis_Alert_Status": {
                  "runAfter": {
                    "Set_Armis_Alert_ID": [
                      "Succeeded"
                    ]
                  },
                  "type": "SetVariable",
                  "inputs": {
                    "name": "ArmisAlertStatus",
                    "value": "@{body('Parse_Alert_JSON')?['alertStatus'][0]}"
                  }
                }
              },
              "runAfter": {
                "Get_secret": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            },
            "Get_secret": {
              "runAfter": {
                "Initialize_Armis_Access_Token_variable": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['keyvault']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/secrets/@{encodeURIComponent('ArmisAPISecretKey')}/value"
              }
            },
            "Initialize_Armis_API's_base_URL_variable": {
              "runAfter": {},
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ArmisAPIBaseURL",
                    "type": "string",
                    "value": "[parameters('ArmisInstanceBaseURL')]"
                  }
                ]
              },
              "description": "Provide base url like [https://integration-example.armis.com]"
            },
            "Initialize_Armis_Access_Token_variable": {
              "runAfter": {
                "Initialize_Armis_Alert_Status_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ArmisAccessToken",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Armis_Alert_ID_variable": {
              "runAfter": {
                "Initialize_Incident_Status_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ArmisAlertID",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Armis_Alert_Status_variable": {
              "runAfter": {
                "Initialize_Armis_Alert_ID_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ArmisAlertStatus",
                    "type": "string"
                  }
                ]
              }
            },
            "Initialize_Incident_Status_variable": {
              "runAfter": {
                "Initialize_Armis_API's_base_URL_variable": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "IncidentStatus",
                    "type": "string",
                    "value": "@triggerBody()?['object']?['properties']?['status']"
                  }
                ]
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuresentinel": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
                "connectionName": "[variables('MicrosoftSentinelConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]",
                "connectionProperties": {
                  "authentication": {
                    "type": "ManagedServiceIdentity"
                  }
                }
              },
              "keyvault": {
                "connectionId": "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]",
                "connectionName": "[variables('KeyvaultConnectionName')]",
                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
              }
            }
          }
        }
      },
      "name": "[parameters('PlaybookName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[resourceGroup().location]",
      "tags": {
        "hidden-SentinelTemplateName": "ArmisUpdateAlertStatus",
        "hidden-SentinelTemplateVersion": "1.0"
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "apiVersion": "2017-07-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', variables('MicrosoftSentinelConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', variables('KeyvaultConnectionName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('MicrosoftSentinelConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('MicrosoftSentinelConnectionName')]",
        "customParameterValues": {},
        "parameterValueType": "Alternative",
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuresentinel')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[variables('KeyvaultConnectionName')]",
      "location": "[resourceGroup().location]",
      "kind": "V1",
      "properties": {
        "displayName": "[variables('KeyvaultConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Keyvault')]"
        },
        "parameterValues": {
          "token:TenantId": "[parameters('tenantId')]",
          "token:grantType": "code",
          "vaultName": "[parameters('keyvaultName')]"
        }
      }
    }
  ]
}