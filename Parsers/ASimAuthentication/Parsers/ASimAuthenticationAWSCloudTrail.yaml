Parser:
  Title: Authentication ASIM parser for AWS sign-in logs
  Version: '0.2.1'
  LastUpdated: 21 Jul 2023
Product:
  Name: AWS
Normalization:
  Schema: Authentication
  Version: '0.1.1'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
- Title: User identity in CloudTrail events
  Link:  https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html#cloudtrail-event-reference-user-identity-fields
Description: |
  This ASIM parser supports normalizing Amazon Web Service sign in logs, stored in the  AWSCloudTrail table, to the ASIM Authentication schema.
ParserName: ASimAuthenticationAWSCloudTrail
EquivalentBuiltInParser: _ASim_Authentication_AWSCloudTrail
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  // -- Refer to https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-user-identity.html for details
  let usertype_lookup = datatable (TargetOriginalUserType:string, TargetUserType:string) [
      // -- For console login, only IAMUser, Root and AssumedRole are relevant
      'Root', 'Admin', 
      'IAMUser', 'Regular', 
      'AssumedRole', 'Service', 
      'Role' ,'Service', 
      'FederatedUser', 'Regular',
      'Directory','Other',
      'AWSAccount','Guest',
      'AWSService',  'Application',
      'Unknown', 'Other',
  ];
  let eventresultdetails_lookup = datatable (EventOriginalResultDetails:string, EventOriginalDetails:string) [
    'No username found in supplied account', 'No such user',
    'Failed authentication', ''
  ];
  let ASIM_GetUsernameType = (username:string) { 
      case ( 
          username contains "@" , "UPN",
          username contains "\\", "Windows",
          (username has "CN=" or username has "OU=" or username has "DC="), "DN",
          isempty(username), "",
          "Simple"
      )
  };
  let parser=(disabled:bool=false){
    AWSCloudTrail 
    | where not(disabled)
    | where EventName == 'ConsoleLogin'
    | project-rename
        EventOriginalResultDetails  = ErrorMessage,
        EventOriginalUid            = AwsEventId,
        EventProductVersion         = EventVersion,
        EventUid                    = _ItemId,
        HttpUserAgent               = UserAgent,
        SrcIpAddr                   = SourceIpAddress,
        TargeCloudRegion            = AWSRegion,
        TargetOriginalUserType      = UserIdentityType,
        TargetUserScopeId           = UserIdentityAccountId
    | extend
        Dvc                         = 'AWS',
        EventCount                  = int(1),
        EventEndTime                = TimeGenerated,
        EventProduct                = 'CloudTrail',
        EventResult                 = iff (ResponseElements has 'Success', 'Success', 'Failure'),
        EventSchema                 = 'Authentication',
        EventSchemaVersion          = '0.1.3',
        EventStartTime              = TimeGenerated,
        EventSubType                = 'Interactive',
        EventType                   = 'Logon',
        EventVendor                 = 'AWS',
        LogonMethod                 = iff (AdditionalEventData has '"MFAUsed": "Yes"', 'MFA',''),
        LogonProtocol               = 'HTTPS',
        SrcDeviceType               = iff (AdditionalEventData has '"MobileVersion":"Yes"', 'Mobile Device', 'Computer'),
        TargetUserId                = tostring(split(UserIdentityPrincipalid, ':')[0]),
        TargetUserIdType            = 'AWSId',
        TargetUsername              = case (
              UserIdentityUserName   == "HIDDEN_DUE_TO_SECURITY_REASONS", "",
              TargetOriginalUserType == 'IAMUser'                       , UserIdentityUserName,
              TargetOriginalUserType == 'Root'                          , 'root',
              TargetOriginalUserType == 'AssumedRole'                   , tostring(split(UserIdentityArn, '/')[-1]), // -- This is the AssuderRole session name, which typically represents a user.           
              UserIdentityUserName
          )
    | extend
        TargetUsernameType          = ASIM_GetUsernameType (TargetUsername)
    | parse AdditionalEventData with * '"LoginTo":"' TargetUrl:string '"' *
    | lookup eventresultdetails_lookup on EventOriginalResultDetails
    | lookup usertype_lookup on TargetOriginalUserType 
    | extend 
        EventSeverity = iff(EventResult == 'Failure', 'Low','Informational'),
        LogonTarget=tostring(split(TargetUrl,'?')[0]),
      // -- Specific identifier aliases
        TargetUserAWSId = TargetUserId
      // -- Aliases
      | extend
          Dst    = LogonTarget,
          Dvc    = EventVendor,
          IpAddr = SrcIpAddr,
          Src    = SrcIpAddr,
          User   = TargetUsername
      | project-away EventSource, EventTypeName, EventName, ResponseElements, AdditionalEventData, Session*, Category, ErrorCode, Aws*, ManagementEvent, OperationName, ReadOnly, RequestParameters, Resources, ServiceEventDetails, SharedEventId, SourceSystem, UserIdentity*, VpcEndpointId, APIVersion, RecipientAccountId, TenantId, EC2RoleDelivery
      };
      parser  
      (
          disabled = disabled
      )