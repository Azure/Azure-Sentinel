Parser:
  Title: Authentication ASIM parser for Microsoft Defender for IoT endpoint logs 
  Version: '0.1.2'
  LastUpdated: 21 Jul 2023
Product:
  Name: Microsoft Defender for IoT
Normalization:
  Schema: Authentication
  Version: '0.1.0'
References:
- Title: ASIM Authentication Schema
  Link: https://aka.ms/ASimAuthenticationDoc
- Title: ASIM
  Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Microsoft Defender for IoT endpoint logs to the ASIM Authentication schema.
ParserName: ASimAuthenticationMD4IoT
EquivalentBuiltInParser: _ASim_Authentication_MD4IoT
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let parser=(disabled:bool=false)
  {
    SecurityIoTRawEvent | where not(disabled)
    | where RawEventName == "Login" 
    | project-rename EventUid = _ItemId
    | extend
        EventDetails = todynamic(EventDetails)
    | extend
        EventCount         = int(1),
        EventEndTime       = todatetime(TimeGenerated), 
        EventOriginalUid   = tostring(EventDetails.OriginalEventId), 
        EventProduct       = 'Microsoft Defender for IoT',
        EventResult        = iff (EventDetails.Operation == 'LoginFailed', 'Failure', 'Success'),  
        EventSchemaVersion = '0.1.0', 
        EventStartTime     = todatetime(EventDetails.TimestampUTC), 
        EventType          = iff (EventDetails.Operation == 'Logout', 'Logoff', 'Logon'),  
        EventVendor        = 'Microsoft'
    | extend
        ActingProcessId    = tostring(EventDetails.ProcessId),  
        ActingProcessName  = tostring(EventDetails.Executable),  // -- Linux input device or service used to authenticate, for example pts/1, tty1, pts/0, ssh:notty 
        DvcOs              = iif (EventDetails.MessageSource == "Linux", "Linux", "Windows"),  // -- Intermediate fix
        SrcIpAddr          = tostring(EventDetails.RemoteAddress), 
        TargetUsername     = tostring(EventDetails.UserName),
        TargetUsernameType = "Simple"
    | project-rename
        _ResourceId         = AssociatedResourceId, 
        _SubscriptionId     = AzureSubscriptionId, 
        DvcHostname         = DeviceId, 
        EventProductVersion = AgentVersion  // -- Not available in Windows
      // -- aliases
    | extend 
        Dvc          = DvcHostname,
        IpAddr       = SrcIpAddr,
        Process      = ActingProcessName, 
        SrcDvcIpAddr = SrcIpAddr,
        User         = TargetUsername
    };
    parser (
        disabled = disabled
    )