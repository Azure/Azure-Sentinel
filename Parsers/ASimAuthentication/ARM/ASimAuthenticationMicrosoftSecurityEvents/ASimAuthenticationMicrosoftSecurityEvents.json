{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimAuthenticationMicrosoftSecurityEvents')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Authentication ASIM parser for Windows Security Events",
        "category": "ASIM",
        "FunctionAlias": "ASimAuthenticationMicrosoftSecurityEvents",
        "query": "let LogonEvents=dynamic([4624,4625]);\nlet LogoffEvents=dynamic([4634,4647]);\nlet LogonTypes=datatable(LogonType:int, EventSubType:string)[\n      2, 'Interactive',\n      3, 'Network',\n      4, 'Batch',\n      5, 'Service',\n      7, 'Unlock',\n      8, 'NetworkCleartext',\n      9, 'NewCredentials',\n      10, 'RemoteInteractive',\n      11, 'CachedInteractive'];\nlet LogonStatus=datatable \n      (EventStatus:string,EventOriginalResultDetails:string, EventResultDetails:string)[\n      '0x80090325', 'SEC_E_UNTRUSTED_ROOT','Other',\n      '0xc0000064', 'STATUS_NO_SUCH_USER','No such user or password',\n      '0xc000006f', 'STATUS_INVALID_LOGON_HOURS','Logon violates policy',\n      '0xc0000070', 'STATUS_INVALID_WORKSTATION','Logon violates policy',\n      '0xc0000071', 'STATUS_PASSWORD_EXPIRED','Password expired',\n      '0xc0000072', 'STATUS_ACCOUNT_DISABLED','User disabled',\n      '0xc0000133', 'STATUS_TIME_DIFFERENCE_AT_DC','Other',\n      '0xc000018d', 'STATUS_TRUSTED_RELATIONSHIP_FAILURE','Other',\n      '0xc0000193', 'STATUS_ACCOUNT_EXPIRED','Account expired',\n      '0xc0000380', 'STATUS_SMARTCARD_WRONG_PIN','Other',\n      '0xc0000381', 'STATUS_SMARTCARD_CARD_BLOCKED','Other',\n      '0xc0000382', 'STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED','Other',\n      '0xc0000383', 'STATUS_SMARTCARD_NO_CARD','Other',\n      '0xc0000384', 'STATUS_SMARTCARD_NO_KEY_CONTAINER','Other',\n      '0xc0000385', 'STATUS_SMARTCARD_NO_CERTIFICATE','Other',\n      '0xc0000386', 'STATUS_SMARTCARD_NO_KEYSET','Other',\n      '0xc0000387', 'STATUS_SMARTCARD_IO_ERROR','Other',\n      '0xc0000388', 'STATUS_DOWNGRADE_DETECTED','Other',\n      '0xc0000389', 'STATUS_SMARTCARD_CERT_REVOKED','Other',\n      '0x80090302', 'SEC_E_UNSUPPORTED_FUNCTION','Other',\n      '0x80090308', 'SEC_E_INVALID_TOKEN','Other',\n      '0x8009030e', 'SEC_E_NO_CREDENTIALS','Other',\n      '0xc0000008', 'STATUS_INVALID_HANDLE','Other',\n      '0xc0000017', 'STATUS_NO_MEMORY','Other',\n      '0xc0000022', 'STATUS_ACCESS_DENIED','Other',\n      '0xc0000034', 'STATUS_OBJECT_NAME_NOT_FOUND','Other',\n      '0xc000005e', 'STATUS_NO_LOGON_SERVERS','Other',\n      '0xc000006a', 'STATUS_WRONG_PASSWORD','Incorrect password',\n      '0xc000006d', 'STATUS_LOGON_FAILURE','Other',\n      '0xc000006e', 'STATUS_ACCOUNT_RESTRICTION','Logon violates policy',\n      '0xc0000073', 'STATUS_NONE_MAPPED','Other',\n      '0xc00000fe', 'STATUS_NO_SUCH_PACKAGE','Other',\n      '0xc000009a', 'STATUS_INSUFFICIENT_RESOURCES','Other',\n      '0xc00000dc', 'STATUS_INVALID_SERVER_STATE','Other',\n      '0xc0000106', 'STATUS_NAME_TOO_LONG','Other',\n      '0xc000010b', 'STATUS_INVALID_LOGON_TYPE','Logon violates policy',\n      '0xc000015b', 'STATUS_LOGON_TYPE_NOT_GRANTED','Logon violates policy',\n      '0xc000018b', 'STATUS_NO_TRUST_SAM_ACCOUNT','Logon violates policy',\n      '0xc0000224', 'STATUS_PASSWORD_MUST_CHANGE','Other',\n      '0xc0000234', 'STATUS_ACCOUNT_LOCKED_OUT','User locked',\n      '0xc00002ee', 'STATUS_UNFINISHED_CONTEXT_DELETED','Other'];\nlet SecEventLogon=(disabled:bool=false){\n    SecurityEvent \n    | where not(disabled)\n    | where EventID in (LogonEvents) or \n            EventID in (LogoffEvents)\n    | project-rename \n        ActorSessionId    = SubjectLogonId,\n        ActorUserId       = SubjectUserSid,\n        EventMessage      = Activity,\n        EventOriginalType = EventID,\n        EventOriginalUid  = EventOriginId,\n        LogonProtocol     = AuthenticationPackageName,\n        SrcDvcHostname    = WorkstationName,\n        SrcDvcIpAddr      = IpAddress,\n        TargetDvcHostname = Computer,\n        TargetSessionId   = TargetLogonId,\n        TargetUserId      = TargetUserSid\n    | extend \n        ActorUserIdType    = 'SID',\n        EventSchema = 'Authentication',\n        ActorUsername      = iff (SubjectDomainName in ('-',''), SubjectUserName, SubjectAccount),\n        ActorUsernameType  = iff(SubjectDomainName in ('-',''), 'Simple', 'Windows' ),\n        EventCount         = int(1),\n        EventEndTime       = TimeGenerated,\n        EventProduct       = \"Security Events\",\n        EventResult        = iff(EventOriginalType == 4625, 'Failure', 'Success'),\n        EventSchemaVersion = '0.1.0',\n        EventStartTime     = TimeGenerated,\n        EventStatus        = iff(SubStatus=='0x0',Status,SubStatus),\n        EventType          = iff(EventOriginalType in (LogoffEvents), 'Logoff', 'Logon'),\n        EventVendor        = 'Microsoft',\n        EventUid          = _ItemId,\n        SrcDvcOs           = 'Windows',\n        TargetUserIdType   = 'SID',\n        TargetUsername     = iff (TargetDomainName in ('-',''), trim(@'\\\\',TargetUserName), trim(@'\\\\',TargetAccount)),\n        TargetUsernameType = iff (TargetDomainName in ('-',''), 'Simple', 'Windows'),\n        EventOriginalType = tostring(EventOriginalType)\n    | project-away TargetUserName, AccountType\n    | extend\n        ActorUserType      = _ASIM_GetWindowsUserType (ActorUsername, ActorUserId),\n        TargetUserType     = _ASIM_GetWindowsUserType (TargetUsername, TargetUserId)\n    | lookup LogonStatus on EventStatus\n    | lookup LogonTypes  on LogonType\n    /// ** Aliases \n    | extend\n        Dvc         = SrcDvcHostname,\n        LogonTarget = TargetDvcHostname,\n        User        = TargetUsername\n    | project-away TemplateDSObjectFQDN,TemplateInternalName,TemplateOID,TemplateSchemaVersion,TemplateVersion,TenantId,TimeCollected,TokenElevationType,TransmittedServices,UserAccountControl,UserParameters,UserPrincipalName,UserWorkstations,VendorIds,VirtualAccount,Workstation,_ResourceId,AccessList,AccessMask,AccessReason,AccountDomain,TemplateContent,AccountExpires,AccountName,AccountSessionIdentifier,Account,AdditionalInfo2,AdditionalInfo,AllowedToDelegateTo,Attributes,AuditPolicyChanges,AuditsDiscarded,AuthenticationLevel,AuthenticationProvider,AuthenticationServer,AuthenticationService,AuthenticationType,AzureDeploymentID,AzureTableName,CACertificateHash,CAPublicKeyHash,CalledStationID,CallerProcessId,CallerProcessName,CallingStationID,CategoryId,CertificateDatabaseHash,Channel,ClassId,ClassName,ClientAddress,ClientIPAddress,ClientName,CommandLine,CompatibleIds,DCDNSName,DeviceDescription,DeviceId,DisplayName,Disposition,DomainBehaviorVersion,DomainName,DomainPolicyChanged,DomainSid,EAPType,ElevatedToken,ErrorCode,EventData,EventSourceName,EventStatus,ExtendedQuarantineState,FailureReason,FileHash,FilePathNoUser,FilePath,Filter,ForceLogoff,Fqbn,FullyQualifiedSubjectMachineName,FullyQualifiedSubjectUserName,GroupMembership,HandleId,HardwareIds,HomeDirectory,HomePath,ImpersonationLevel,InterfaceUuid,IpPort,KeyLength,Level,LmPackageName,LocationInformation,LockoutDuration,LockoutObservationWindow,LockoutThreshold,LoggingResult,LogonGuid,LogonHours,LogonID,LogonProcessName,LogonTypeName,LogonType,MG,MachineAccountQuota,MachineInventory,MachineLogon,ManagementGroupName,MandatoryLabel,MaxPasswordAge,MemberName,MemberSid,MinPasswordAge,MinPasswordLength,MixedDomainMode,NASIPv4Address,NASIPv6Address,NASIdentifier,NASPortType,NASPort,NetworkPolicyName,NewDate,NewMaxUsers,NewProcessId,NewProcessName,NewRemark,NewShareFlags,NewTime,NewUacValue,NewValueType,NewValue,ObjectName,ObjectServer,ObjectType,ObjectValueName,OemInformation,OldMaxUsers,OldRemark,OldShareFlags,OldUacValue,OldValueType,OldValue,OperationType,PackageName,ParentProcessName,PartitionKey,PasswordHistoryLength,PasswordLastSet,PasswordProperties,PreviousDate,PreviousTime,PrimaryGroupId,PrivateKeyUsageCount,PrivilegeList,ProcessId,ProcessName,Process,ProfilePath,Properties,ProtocolSequence,ProxyPolicyName,QuarantineHelpURL,QuarantineSessionID,QuarantineSessionIdentifier,QuarantineState,QuarantineSystemHealthResult,RelativeTargetName,RemoteIpAddress,RemotePort,RequestId,Requester,RestrictedAdminMode,RowKey,RowsDeleted,SamAccountName,ScriptPath,SecurityDescriptor,ServiceAccount,ServiceFileName,ServiceName,ServiceStartType,ServiceType,SessionName,ShareLocalPath,ShareName,SidHistory,SourceComputerId,SourceSystem,SrcDvcHostname,SrcDvcIpAddr,Status,StorageAccount,SubStatus,SubcategoryGuid,SubcategoryId,SubjectAccount,SubjectDomainName,SubjectKeyIdentifier,SubjectMachineName,SubjectMachineSID,SubjectUserName,Subject,TableId,TargetAccount,TargetDomainName,TargetDvcHostname,TargetInfo,TargetLinkedLogonId,TargetLogonGuid,TargetOutboundDomainName,TargetOutboundUserName,TargetServerName,TargetSid,TargetUser,Task,_ItemId\n    };\n  SecEventLogon(disabled=disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}