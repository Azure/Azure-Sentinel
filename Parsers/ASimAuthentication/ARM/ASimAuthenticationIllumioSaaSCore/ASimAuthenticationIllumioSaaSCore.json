{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2017-03-15-preview",
      "name": "[parameters('Workspace')]",
      "location": "[parameters('WorkspaceRegion')]",
      "resources": [
        {
          "type": "savedSearches",
          "apiVersion": "2020-08-01",
          "name": "ASimAuthenticationIllumioSaaSCore",
          "dependsOn": [
            "[concat('Microsoft.OperationalInsights/workspaces/', parameters('Workspace'))]"
          ],
          "properties": {
            "etag": "*",
            "displayName": "Authentication ASIM parser for Illumio SaaS Core",
            "category": "ASIM",
            "FunctionAlias": "ASimAuthenticationIllumioSaaSCore",
            "query": "let EventTypeLookup = datatable(\n    event_type: string, // what Illumio sends\n    EventType: string, // an enumerated list [ Logon, Logoff, Elevate ] event type\n    EventResultDetails: string,\n    EventResult: string\n)\n[\n    'user.authenticate', 'Logon', 'Other', 'Success',\n    'user.login', 'Logon', 'Other', 'Success',\n    'user.logout', 'Logoff', 'Other', 'Success',\n    'user.sign_in', 'Logon', 'Other', 'Success',\n    'user.sign_out', 'Logoff', 'Other', 'Success',\n    'user.use_expired_password', 'Logon', 'Password expired', 'Success'\n];\nlet user_events = dynamic(['user.sigin', 'user.login', 'user.sign_out', 'user.logout', 'user.authenticate', 'user.use_expired_password']);\nlet parser=(disabled: bool=false) {\n  Illumio_Auditable_Events_CL\n  | where not(disabled) and event_type in (user_events) // limited to user signin, login, logoff, signoff events only\n  | extend \n        EventProduct='Core'\n        ,\n        EventVendor='Illumio'\n        ,\n        EventSchema = 'Authentication'\n        ,\n        EventCount=int(1)\n        ,\n        EventSchemaVersion='0.1.3'\n        ,    \n        EventOriginalUid = href\n  | lookup EventTypeLookup on event_type //fetch EventType, EventResultDetails, EventResult\n  | extend              \n          EventStartTime=TimeGenerated\n          ,\n          EventEndTime=TimeGenerated\n          ,                            \n          TargetUsername = case(                  \n              isnotnull(created_by.user), created_by.user.username,                  \n              \"Unknown\"\n          ),\n          TargetUsernameType = \"Simple\",\n          EventUid = _ItemId,\n          SrcIpAddr = iff(action.src_ip == 'FILTERED', \"\", action.src_ip)\n      // ** Aliases\n      | extend \n          Dvc=EventVendor\n          ,\n          IpAddr=SrcIpAddr\n          ,\n          User = TargetUsername\n      | project-away               \n          TenantId,\n          href,\n          pce_fqdn,\n          created_by,\n          event_type,\n          status,\n          severity,\n          action,\n          resource_changes,\n          notifications,\n          version              \n  };\n  parser(disabled = disabled)",
            "version": 1,
            "functionParameters": "disabled:bool=False"
          }
        }
      ]
    }
  ]
}