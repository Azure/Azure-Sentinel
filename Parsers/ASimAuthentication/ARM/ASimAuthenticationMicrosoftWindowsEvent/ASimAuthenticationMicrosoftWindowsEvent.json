{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimAuthenticationMicrosoftWindowsEvent')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Authentication ASIM parser for Windows Events",
        "category": "ASIM",
        "FunctionAlias": "ASimAuthenticationMicrosoftWindowsEvent",
        "query": "let LogonEvents=dynamic([4624,4625]);\nlet LogoffEvents=dynamic([4634,4647]);\nlet LogonTypes=datatable(LogonType:int, EventSubType:string)[\n      2, 'Interactive',\n      3, 'Network',\n      4, 'Batch',\n      5, 'Service',\n      7, 'Unlock',\n      8, 'NetworkCleartext',\n      9, 'NewCredentials',\n      10, 'RemoteInteractive',\n      11, 'CachedInteractive'];\n  // https://techcommunity.microsoft.com/t5/core-infrastructure-and-security/quick-reference-troubleshooting-netlogon-error-codes/ba-p/256000\nlet LogonStatus=datatable \n      (EventStatus:string,EventOriginalResultDetails:string, EventResultDetails:string)[\n      '0x80090325', 'SEC_E_UNTRUSTED_ROOT','Other',\n      '0xc0000064', 'STATUS_NO_SUCH_USER','No such user or password',\n      '0xc000006f', 'STATUS_INVALID_LOGON_HOURS','Logon violates policy',\n      '0xc0000070', 'STATUS_INVALID_WORKSTATION','Logon violates policy',\n      '0xc0000071', 'STATUS_PASSWORD_EXPIRED','Password expired',\n      '0xc0000072', 'STATUS_ACCOUNT_DISABLED','User disabled',\n      '0xc0000133', 'STATUS_TIME_DIFFERENCE_AT_DC','Other',\n      '0xc000018d', 'STATUS_TRUSTED_RELATIONSHIP_FAILURE','Other',\n      '0xc0000193', 'STATUS_ACCOUNT_EXPIRED','Account expired',\n      '0xc0000380', 'STATUS_SMARTCARD_WRONG_PIN','Other',\n      '0xc0000381', 'STATUS_SMARTCARD_CARD_BLOCKED','Other',\n      '0xc0000382', 'STATUS_SMARTCARD_CARD_NOT_AUTHENTICATED','Other',\n      '0xc0000383', 'STATUS_SMARTCARD_NO_CARD','Other',\n      '0xc0000384', 'STATUS_SMARTCARD_NO_KEY_CONTAINER','Other',\n      '0xc0000385', 'STATUS_SMARTCARD_NO_CERTIFICATE','Other',\n      '0xc0000386', 'STATUS_SMARTCARD_NO_KEYSET','Other',\n      '0xc0000387', 'STATUS_SMARTCARD_IO_ERROR','Other',\n      '0xc0000388', 'STATUS_DOWNGRADE_DETECTED','Other',\n      '0xc0000389', 'STATUS_SMARTCARD_CERT_REVOKED','Other',\n      '0x80090302', 'SEC_E_UNSUPPORTED_FUNCTION','Other',\n      '0x80090308', 'SEC_E_INVALID_TOKEN','Other',\n      '0x8009030e', 'SEC_E_NO_CREDENTIALS','Other',\n      '0xc0000008', 'STATUS_INVALID_HANDLE','Other',\n      '0xc0000017', 'STATUS_NO_MEMORY','Other',\n      '0xc0000022', 'STATUS_ACCESS_DENIED','Other',\n      '0xc0000034', 'STATUS_OBJECT_NAME_NOT_FOUND','Other',\n      '0xc000005e', 'STATUS_NO_LOGON_SERVERS','Other',\n      '0xc000006a', 'STATUS_WRONG_PASSWORD','Incorrect password',\n      '0xc000006d', 'STATUS_LOGON_FAILURE','Other',\n      '0xc000006e', 'STATUS_ACCOUNT_RESTRICTION','Logon violates policy',\n      '0xc0000073', 'STATUS_NONE_MAPPED','Other',\n      '0xc00000fe', 'STATUS_NO_SUCH_PACKAGE','Other',\n      '0xc000009a', 'STATUS_INSUFFICIENT_RESOURCES','Other',\n      '0xc00000dc', 'STATUS_INVALID_SERVER_STATE','Other',\n      '0xc0000106', 'STATUS_NAME_TOO_LONG','Other',\n      '0xc000010b', 'STATUS_INVALID_LOGON_TYPE','Logon violates policy',\n      '0xc000015b', 'STATUS_LOGON_TYPE_NOT_GRANTED','Logon violates policy',\n      '0xc000018b', 'STATUS_NO_TRUST_SAM_ACCOUNT','Logon violates policy',\n      '0xc0000224', 'STATUS_PASSWORD_MUST_CHANGE','Other',\n      '0xc0000234', 'STATUS_ACCOUNT_LOCKED_OUT','User locked',\n      '0xc00002ee', 'STATUS_UNFINISHED_CONTEXT_DELETED','Other'];\nlet WinLogon=(disabled:bool=false){ \n      WindowsEvent \n      | where not(disabled)\n      | where Provider == 'Microsoft-Windows-Security-Auditing'\n      | where EventID in (LogonEvents) or EventID in (LogoffEvents)\n      | extend    \n          ActingProcessCreationTime = EventData.ProcessCreationTime,\n          ActingProcessId           = tostring(toint(EventData.ProcessId)),\n          ActingProcessName         = tostring(EventData.ProcessName),\n          ActorSessionId            = tostring(EventData.SubjectLogonId),\n          ActorUserId               = tostring(EventData.SubjectUserSid),\n          ActorUsername             = tostring(iff (EventData.SubjectDomainName in ('-',''), EventData.SubjectUserName, strcat(EventData.SubjectDomainName, @\"\\\" , EventData.SubjectUserName))),\n          EventProduct              = \"Security Events\",\n          LogonGuid                 = tostring(EventData.LogonGuid),\n          LogonProtocol             = tostring(EventData.AuthenticationPackageName),\n          LogonType                 = toint(EventData.LogonType),\n          SrcDvcHostname            = tostring(EventData.WorkstationName),\n          SrcDvcIpAddr              = tostring(EventData.IpAddress),\n          Status                    = tostring(EventData.Status),\n          SubStatus                 = tostring(EventData.SubStatus),\n          TargetDomainName          = tostring(EventData.TargetDomainName),\n          TargetPortNumber          = toint(EventData.IpPort),\n          TargetSessionId           = tostring(EventData.TargetLogonId),\n          TargetUserId              = tostring(EventData.TargetUserSid),\n          TargetUsername            = tostring(iff (EventData.TargetDomainName in ('-',''), EventData.TargetUserName, strcat(EventData.TargetDomainName, @\"\\\" , EventData.TargetUserName)))\n      | extend \n          EventStatus = iff(SubStatus=='0x0',Status,SubStatus)\n      // -- creating EventMessage matching EventMessage in SecurityEvent table\n      | extend \n          EventMessage = case(\n                              EventID == 4624 ,\"4624 - An account was successfully logged on.\",\n                              EventID == 4625, \"4625 - An account failed to log on.\",\n                              EventID == 4634, \"4634 - An account was logged off.\", \n                              \"4647 - User initiated logoff.\"),\n          EventResult = iff(EventID == 4625, 'Failure', 'Success')\n      | project-rename \n          EventOriginalType = EventID,\n          EventOriginalUid  = EventOriginId,   \n          EventUid          = _ItemId,       \n          TargetDvcHostname = Computer\n      | extend \n          ActorUserIdType    = 'SID',\n          //EventOriginalType=event_type_s,\n          EventSchema = 'Authentication',\n          ActorUsernameType  = iff(EventData.SubjectDomainName in ('-',''),'Simple', 'Windows' ),\n          EventCount         = int(1),\n          EventEndTime       = TimeGenerated,\n          EventSchemaVersion = '0.1.0',\n          EventStartTime     = TimeGenerated,\n          EventStatus        = iff(SubStatus=='0x0',Status,SubStatus),\n          EventType          = iff(EventOriginalType in (LogoffEvents), 'Logoff', 'Logon'),\n          EventVendor        = 'Microsoft',\n          SrcDvcOs           = 'Windows',\n          TargetUserIdType   = 'SID',\n          TargetUsernameType = iff(TargetDomainName in ('-',''), 'Simple', 'Windows')\n      | extend\n          ActorUserType  = _ASIM_GetWindowsUserType (ActorUsername, ActorUserId),\n          TargetUserType = _ASIM_GetWindowsUserType (TargetUsername, TargetUserId)\n      | lookup LogonStatus on EventStatus\n      | lookup LogonTypes on LogonType\n      /// ** Aliases \n      | extend\n          Dvc         = SrcDvcHostname,\n          LogonTarget = TargetDvcHostname,\n          User        = TargetUsername,\n          EventOriginalType=tostring(EventOriginalType)\n      | project-away ActingProcessCreationTime,ActingProcessId,ActingProcessName,Channel,Correlation,Data,EventData,EventLevelName,EventLevel,EventRecordId,Provider,RawEventData,SourceSystem,SrcDvcHostname,SrcDvcIpAddr,Status,SubStatus,SystemProcessId,SystemThreadId,SystemUserId,TargetDomainName,TargetDvcHostname,Task,TenantId,TimeCreated,Version,_ResourceId,EventStatus,Keywords,LogonGuid,LogonType,ManagementGroupName,Opcode\n};\nWinLogon(disabled=disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}