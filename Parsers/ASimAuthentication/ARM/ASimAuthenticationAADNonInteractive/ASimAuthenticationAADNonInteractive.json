{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimAuthenticationAADNonInteractiveUserSignInLogs')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Authentication ASIM parser for Microsoft Entra ID non-interactive sign-in logs",
        "category": "ASIM",
        "FunctionAlias": "ASimAuthenticationAADNonInteractiveUserSignInLogs",
        "query": "let FailedReason=datatable(ResultType:string, EventResultDetails:string)[\n  '0', 'Success',\n  '50005', 'Logon violates policy',\n  '50011', 'Logon violates policy', \n  '50020', 'Logon violates policy',\n  '50034', 'No such user or password',\n  '50053', 'User locked',\n  '50055', 'Password expired',\n  '50056', 'Incorrect password',\n  '50057', 'User disabled',\n  '50058', 'Logon violates policy',\n  '50059', 'No such user or password',\n  '50064', 'No such user or password',\n  '50072', 'Logon violates policy',\n  '50074', 'Logon violates policy', \n  '50076', 'Logon violates policy',\n  '50079', 'Logon violates policy',\n  '50105', 'Logon violates policy',\n  '50126', 'No such user or password',\n  '50132', 'Password expired',\n  '50133', 'Password expired',\n  '50144', 'Password expired',\n  '50173', 'Password expired',\n  '51004', 'No such user or password',\n  '53003', 'Logon violates policy',\n  '70008', 'Password expired',\n  '80012', 'Logon violates policy',\n  '500011', 'No such user or password' ,\n  '700016',  'No such user or password'\n  ];\nlet parser=(disabled:bool=false){\n  AADNonInteractiveUserSignInLogs \n  | where not(disabled)\n  | extend\n      EventCount                  = int(1),\n      EventEndTime                = TimeGenerated,\n      EventOriginalResultDetails  = coalesce(ResultDescription, ResultType),\n      EventProduct                = 'Entra ID',\n      EventResult                 = iff (ResultType ==0, 'Success', 'Failure'),\n      EventSchemaVersion          = '0.1.0',\n      EventStartTime              = TimeGenerated,\n      EventSubType                = 'NonInteractive',\n      EventType                   = 'Logon',\n      EventVendor                 = 'Microsoft',\n      Location                    = todynamic(LocationDetails),\n      SrcDvcHostname              = tostring(todynamic(DeviceDetail).displayName),\n      SrcDvcId                    = tostring(todynamic(DeviceDetail).deviceId),\n      SrcDvcOs                    = tostring(todynamic(DeviceDetail).operatingSystem),\n      TargetAppId                 = ResourceIdentity ,\n      TargetAppName               = ResourceDisplayName,\n      TargetUserIdType            = 'EntraID',\n      TargetUsernameType          = 'UPN'\n  | extend\n      SrcGeoCity                  = tostring(Location.city),\n      SrcGeoCountry               = tostring(Location.countryOrRegion),\n      SrcGeoLatitude              = toreal(Location.geoCoordinates.latitude),\n      SrcGeoLongitude             = toreal(Location.geoCoordinates.longitude)\n  | project-rename\n      EventOriginalUid            = Id,\n      EventUid                    = _ItemId,\n      HttpUserAgent               = UserAgent,\n      LogonMethod                 = AuthenticationRequirement,\n      SrcDvcIpAddr                = IPAddress,\n      TargetSessionId             = CorrelationId,\n      TargetUserId                = UserId,\n      TargetUsername              = UserPrincipalName\n  | lookup FailedReason on ResultType\n  // -- Aliases\n  | extend \n      Dvc                         = EventVendor,\n      LogonTarget                 = ResourceIdentity,\n      User                        = TargetUsername,\n  // -- Entity identifier explicit aliases\n      TargetUserAadId             = TargetUserId,\n      TargetUserUpn               = TargetUsername\n};\nparser \n  (\n      disabled = disabled\n  )",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
