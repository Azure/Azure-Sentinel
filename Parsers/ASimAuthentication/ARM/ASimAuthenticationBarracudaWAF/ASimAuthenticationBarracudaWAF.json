{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimAuthenticationBarracudaWAF')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "ASIM Authentication parser for Barracuda WAF",
        "category": "ASIM",
        "FunctionAlias": "ASimAuthenticationBarracudaWAF",
        "query": "let barracudaSchema = datatable(\n    LogType_s: string,\n    UnitName_s: string,\n    EventName_s: string,\n    DeviceReceiptTime_s: string,\n    HostIP_s: string,\n    host_s: string,\n    LoginIP_s: string,\n    Severity_s: string,\n    LoginPort_d: real,\n    AdminName_s: string,\n    EventMessage_s: string,\n    TimeTaken_d: real,\n    TenantId: string,\n    Message: string,\n    SourceSystem: string,\n    _ResourceId: string,\n    RawData: string,\n    Computer: string,\n    MG: string,\n    ManagementGroupName: string,\n    SourceIP: string\n)[];\nlet SeverityLookup = datatable (severity: int, EventSeverity: string)\n    [\n    0, \"High\", \n    1, \"High\", \n    2, \"High\", \n    3, \"Medium\",\n    4, \"Low\",\n    5, \"Low\", \n    6, \"Informational\",\n    7, \"Informational\" \n];\nlet EventTypeLookup = datatable (\n    EventName_s: string,\n    EventType_lookup: string,\n    EventResult: string\n)\n    [\n    \"LOGIN\", \"Logon\", \"Success\",\n    \"UNSUCCESSFUL_LOGIN\", \"Logoff\", \"Failure\",\n    \"LOGOUT\", \"Logoff\", \"Success\"\n];\nlet EventResultDetailsLookup = datatable (\n    Reason: string,\n    EventResultDetails: string\n)\n    [\n    \"Invalid Username/Password\", \"Incorrect password\",\n    \"Account Lockout\", \"User locked\",\n    \"Expired or Disabled Accounts\", \"User disabled\",\n    \"IP Blocking\", \"Logon violates policy\",\n    \"Session Timeouts\", \"Session expired\",\n    \"CAPTCHA Verification\", \"Other\"\n];\nlet parser = (disabled: bool=false)\n{\nlet BarracudaCustom = \n    union isfuzzy=true\n        barracudaSchema,\n        barracuda_CL\n    | where not(disabled)\n        and (LogType_s == \"AUDIT\")\n        and (EventName_s in (\"LOGIN\", \"LOGOUT\", \"UNSUCCESSFUL_LOGIN\"))\n    | parse trim(@'[^\\w(\")]+', EventMessage_s) with * \"Reason=\" Reason:string\n    | extend Reason = trim(@'(\")', Reason)\n    | lookup EventResultDetailsLookup on Reason\n    | lookup EventTypeLookup on EventName_s\n    | extend \n        EventType = EventType_lookup,\n        severity = toint(Severity_s)\n    | lookup SeverityLookup on severity\n    | extend\n        Dvc = UnitName_s,\n        EventCount = toint(1),\n        EventProduct = \"WAF\",\n        EventSchema = \"Authentication\",\n        EventSchemaVersion = \"0.1.3\",\n        EventVendor = \"Barracuda\"\n    | extend\n        EventStartTime = iff(isnotempty(TimeTaken_d), unixtime_milliseconds_todatetime(tolong(DeviceReceiptTime_s)-tolong(TimeTaken_d)), unixtime_milliseconds_todatetime(tolong(DeviceReceiptTime_s))),\n        SrcPortNumber = toint(LoginPort_d),\n        DvcIpAddr = HostIP_s,\n        SrcIpAddr = LoginIP_s,\n        DvcHostname = host_s,\n        ActorUsername = AdminName_s\n    | extend\n        ActorUsernameType = iff(isnotempty(ActorUsername), \"Simple\", \"\"),\n        ActorUserType = iff(isnotempty(ActorUsername), \"Admin\", \"\")\n    | extend\n        IpAddr = SrcIpAddr,\n        Src = SrcIpAddr,\n        EventEndTime = EventStartTime\n    | project-away\n        *_s,\n        *_d,\n        severity,\n        EventType_lookup,\n        TenantId,\n        Message,\n        SourceSystem,\n        _ResourceId,\n        RawData,\n        Computer,\n        MG,\n        ManagementGroupName,\n        SourceIP,\n        Reason;\n  BarracudaCustom\n};\nparser(disabled=disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}