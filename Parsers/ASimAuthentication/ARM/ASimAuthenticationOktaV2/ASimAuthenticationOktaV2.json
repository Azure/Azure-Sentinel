{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimAuthenticationOktaV2')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Authentication ASIM parser for OktaV2",
        "category": "ASIM",
        "FunctionAlias": "ASimAuthenticationOktaV2",
        "query": "let parser=(disabled: bool=false) {\n  let OktaSuccessfulOutcome = dynamic(['SUCCESS', 'ALLOW']);\n  let OktaFailedOutcome = dynamic(['FAILURE', 'SKIPPED', 'DENY']);\n  let OktaSigninEvents=dynamic(['user.session.start', 'user.session.end']);\n  let emptyOctaV2Table = datatable(\n  TimeGenerated: datetime,\n  ActorDetailEntry: dynamic,\n  ActorDisplayName: string,\n  AuthenticationContext: string,\n  AuthenticationProvider: string,\n  AuthenticationStep: string,\n  AuthenticationContextAuthenticationProvider: string,\n  AuthenticationContextAuthenticationStep: int,\n  AuthenticationContextCredentialProvider: string,\n  AuthenticationContextInterface: string,\n  AuthenticationContextIssuerId: string,\n  AuthenticationContextIssuerType: string,\n  DebugData: dynamic,\n  DvcAction: string,\n  EventResult:string,\n  OriginalActorAlternateId: string,\n  OriginalClientDevice: string,\n  OriginalOutcomeResult: string,\n  OriginalSeverity: string,\n  OriginalTarget: dynamic,\n  OriginalUserId: string,\n  OriginalUserType: string,\n  Request: dynamic,\n  SecurityContextAsNumber: int,\n  SecurityContextAsOrg: string,\n  SecurityContextDomain: string,\n  SecurityContextIsProxy: bool,\n  TransactionDetail: dynamic,\n  TransactionId: string,\n  TransactionType: string\n)[];\n    let OktaV2 = union isfuzzy=true emptyOctaV2Table, OktaV2_CL\n        | where not(disabled)      \n        | extend\n            EventOriginalType=column_ifexists('EventOriginalType', \"\") \n            ,\n            OriginalActorAlternateId = column_ifexists('OriginalActorAlternateId', \"\")\n            ,\n            ActorUsername=column_ifexists('ActorUsername', \"\")\n            ,\n            SrcIpAddr = column_ifexists('SrcIpAddr', \"\")\n        | where EventOriginalType in (OktaSigninEvents)\n        | extend ActorUsernameType = _ASIM_GetUsernameType(ActorUsername)\n        | extend \n            EventProduct='Okta'\n            ,\n            EventSchema = 'Authentication'\n            ,\n            EventVendor='Okta'\n            ,\n            EventCount=int(1)\n            ,\n            EventSchemaVersion='0.1.0'\n            ,\n            EventStartTime=TimeGenerated\n            ,\n            EventEndTime=TimeGenerated\n            ,\n            EventType=iff(EventOriginalType hassuffix 'start', 'Logon', 'Logoff')       \n            ,\n            TargetSessionId=column_ifexists('ActorSessionId', \"\")\n            ,\n            TargetUserId= column_ifexists('ActorUserId', \"\")\n            ,\n            TargetUsername=column_ifexists('ActorUsername', \"\")\n            ,\n            TargetUserType=column_ifexists('ActorUserType', \"\")\n            ,\n            TargetUserIdType=column_ifexists('ActorUserIdType', \"\")\n            ,\n            TargetUsernameType=column_ifexists('ActorUsernameType', \"\")\n            ,\n            SrcIpAddr = column_ifexists('SrcIpAddr', \"\")\n            //** extend non-normalized fields to be projected-away \n            ,\n            ActorDetailEntry,\n            ActorDisplayName,\n            AuthenticationContextAuthenticationProvider,\n            AuthenticationContextAuthenticationStep,\n            AuthenticationContextCredentialProvider,\n            AuthenticationContextInterface,\n            AuthenticationContextIssuerId,\n            AuthenticationContextIssuerType\n            ,\n            DebugData,\n            DvcAction,\n            OriginalActorAlternateId,\n            OriginalClientDevice,\n            OriginalOutcomeResult,\n            OriginalSeverity,\n            OriginalTarget,\n            OriginalUserId,\n            OriginalUserType,\n            Request,\n            SecurityContextAsNumber,\n            SecurityContextAsOrg,\n            SecurityContextDomain,\n            SecurityContextIsProxy\n            ,\n            TransactionDetail,\n            TransactionId,\n            TransactionType\n        // ** Aliases\n        | extend \n            User=TargetUsername\n            ,\n            Dvc=EventVendor\n            ,\n            IpAddr=SrcIpAddr\n        | project-away\n            ActorDetailEntry,\n            ActorDisplayName,\n            AuthenticationContextAuthenticationProvider,\n            AuthenticationContextAuthenticationStep,\n            AuthenticationContextCredentialProvider,\n            AuthenticationContextInterface,\n            AuthenticationContextIssuerId,\n            AuthenticationContextIssuerType,\n            DebugData,\n            DvcAction,\n            OriginalActorAlternateId,\n            OriginalClientDevice,\n            OriginalOutcomeResult,\n            OriginalSeverity,\n            OriginalTarget,\n            OriginalUserId,\n            OriginalUserType,\n            Request,\n            SecurityContextAsNumber,\n            SecurityContextAsOrg,\n            SecurityContextDomain,\n            SecurityContextIsProxy,\n            TransactionId,\n            TransactionType;\n    OktaV2\n};\nparser(disabled = disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
