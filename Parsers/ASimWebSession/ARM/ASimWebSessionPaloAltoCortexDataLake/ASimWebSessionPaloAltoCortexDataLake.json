{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimWebSessionPaloAltoCortexDataLake')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Web Session ASIM parser for Palo Alto Cortex Data Lake",
        "category": "ASIM",
        "FunctionAlias": "ASimWebSessionPaloAltoCortexDataLake",
        "query": "let EventSeverityLookup = datatable (LogSeverity: string, EventSeverity: string)\n[\n    \"0\", \"Low\",\n    \"1\", \"Low\",\n    \"2\", \"Low\",\n    \"3\", \"Low\",\n    \"4\", \"Low\",\n    \"5\", \"Low\",\n    \"6\", \"Medium\",\n    \"7\", \"Medium\",\n    \"8\", \"Medium\",\n    \"9\", \"High\",\n    \"10\", \"High\"\n];\nlet EventLookup=datatable(\n    DeviceAction: string,\n    DvcAction: string,\n    EventResult: string\n)\n    [\n    \"alert\", \"Allow\", \"Success\",\n    \"continue\", \"Allow\", \"Success\",\n    \"override\", \"Allow\", \"Success\",\n    \"block-continue\", \"Allow\", \"Partial\",\n    \"block-url\", \"Deny\", \"Failure\",\n    \"block-override\", \"Deny\", \"Failure\",\n    \"override-lockout\", \"Deny\", \"Failure\",\n];\nlet ThreatRiskLevelLookup = datatable(PanOSApplicationRisk: string, ThreatRiskLevel: int)\n    [\n    \"1\", 20,\n    \"2\", 40,\n    \"3\", 60,\n    \"4\", 80,\n    \"5\", 100\n];\nlet parser = (disabled: bool=false) {\n    CommonSecurityLog\n    | where not(disabled)\n        and DeviceVendor == \"Palo Alto Networks\" and DeviceProduct == \"LF\"\n        and DeviceEventClassID == \"THREAT\" and Activity == \"url\"\n    | parse-kv AdditionalExtensions as (PanOSDestinationUUID: string, PanOSDestinationLocation: string, PanOSDestinationDeviceMac: string, PanOSSourceUUID: string, PanOSSourceDeviceMac: string, PanOSReferer: string, PanOSIsClienttoServer: string, PanOSSourceDeviceHost: string, PanOSDestinationDeviceHost: string, start: string, PanOSApplicationCategory: string, PanOSApplicationSubcategory: string, PanOSApplicationTechnology: string, PanOSDestinationDeviceOS: string, PanOSDestinationDeviceOSFamily: string, PanOSDestinationDeviceOSVersion: string, PanOSHostID: string, PanOSHTTPHeaders: string, PanOSInlineMLVerdict: string, PanOSInboundInterfaceDetailsType: string, PanOSOutboundInterfaceDetailsType: string, PanOSParentSessionID: string, PanOSContainerName: string, PanOSContainerNameSpace: string, PanOSHTTPRefererFQDN: string, PanOSHTTPRefererPort: string, PanOSHTTPRefererProtocol: string, PanOSHTTPRefererURLPath: string, PanOSRuleUUID: string, PanOSURLCategoryList: string, PanOSURLDomain: string, PanOSURLCounter: string, PanOSUsers: string, PanOSVendorSeverity: string, [\"PanOSX-Forwarded-For\"]: string, [\"PanOSX-Forwarded-ForIP\"]: string, PanOSIsSaaSApplication: string, PanOSLogSource: string, PanOSSourceLocation: string, PanOSCortexDataLakeTenantID: string, PanOSApplicationRisk: string) with (pair_delimiter=\";\", kv_delimiter=\"=\")\n    | invoke _ASIM_ResolveDvcFQDN('DeviceName')\n    | invoke _ASIM_ResolveSrcFQDN('PanOSSourceDeviceHost')\n    | invoke _ASIM_ResolveDstFQDN('PanOSDestinationDeviceHost')\n    | lookup EventSeverityLookup on LogSeverity\n    | lookup EventLookup on DeviceAction\n    | lookup ThreatRiskLevelLookup on PanOSApplicationRisk\n    | extend\n        EventStartTime = todatetime(coalesce(start, ReceiptTime)),\n        SrcIpAddr = coalesce(SourceIP, DeviceCustomIPv6Address2),\n        DstIpAddr = coalesce(DestinationIP, DeviceCustomIPv6Address3),\n        HttpRequestMethod = toupper(RequestMethod),\n        NetworkProtocol = toupper(Protocol),\n        NetworkSessionId = tostring(FieldDeviceCustomNumber1),\n        SrcDomain = coalesce(SourceNTDomain, SrcDomain),\n        DstDomain = coalesce(DestinationNTDomain, DstDomain),\n        AdditionalFields = bag_pack(\n                      \"DirectionOfAttack\",\n                      FlexString2,\n                      \"VirtualLocation\",\n                      DeviceCustomString3,\n                      \"PanOSApplicationCategory\",\n                      PanOSApplicationCategory,\n                      \"PanOSApplicationSubcategory\",\n                      PanOSApplicationSubcategory,\n                      \"PanOSApplicationTechnology\",\n                      PanOSApplicationTechnology,\n                      \"PanOSDestinationDeviceOS\",\n                      PanOSDestinationDeviceOS,\n                      \"PanOSDestinationDeviceOSFamily\",\n                      PanOSDestinationDeviceOSFamily,\n                      \"PanOSDestinationDeviceOSVersion\",\n                      PanOSDestinationDeviceOSVersion,\n                      \"PanOSHostID\",\n                      PanOSHostID,\n                      \"PanOSHTTPHeaders\",\n                      PanOSHTTPHeaders,\n                      \"PanOSInlineMLVerdict\",\n                      PanOSInlineMLVerdict,\n                      \"PanOSInboundInterfaceDetailsType\",\n                      PanOSInboundInterfaceDetailsType,\n                      \"PanOSOutboundInterfaceDetailsType\",\n                      PanOSOutboundInterfaceDetailsType,\n                      \"PanOSParentSessionID\",\n                      PanOSParentSessionID,\n                      \"PanOSContainerName\",\n                      PanOSContainerName,\n                      \"PanOSContainerNameSpace\",\n                      PanOSContainerNameSpace,\n                      \"PanOSHTTPRefererFQDN\",\n                      PanOSHTTPRefererFQDN,\n                      \"PanOSHTTPRefererPort\",\n                      PanOSHTTPRefererPort,\n                      \"PanOSHTTPRefererProtocol\",\n                      PanOSHTTPRefererProtocol,\n                      \"PanOSHTTPRefererURLPath\",\n                      PanOSHTTPRefererURLPath,\n                      \"PanOSRuleUUID\",\n                      PanOSRuleUUID,\n                      \"PanOSURLCategoryList\",\n                      PanOSURLCategoryList,\n                      \"PanOSURLDomain\",\n                      PanOSURLDomain,\n                      \"PanOSURLCounter\",\n                      PanOSURLCounter,\n                      \"PanOSUsers\",\n                      PanOSUsers,\n                      \"PanOSVendorSeverity\",\n                      PanOSVendorSeverity,\n                      \"PanOSX-Forwarded-For\",\n                      [\"PanOSX-Forwarded-For\"],\n                      \"PanOSX-Forwarded-ForIP\",\n                      [\"PanOSX-Forwarded-ForIP\"],\n                      \"PanOSLogSource\",\n                      PanOSLogSource\n                  ),\n        HttpContentType = RequestContext\n    | project-rename\n        DvcIpAddr = Computer,\n        EventUid = _ItemId,\n        DstDvcId = PanOSDestinationUUID,\n        DstGeoCountry = PanOSDestinationLocation,\n        DstMacAddr = PanOSDestinationDeviceMac,\n        DstNatIpAddr = DestinationTranslatedAddress,\n        DstNatPortNumber = DestinationTranslatedPort,\n        DstPortNumber = DestinationPort,\n        DstUsername = DestinationUserName,\n        DstZone = DeviceCustomString5,\n        DvcId = DeviceExternalID,\n        DvcOriginalAction = DeviceAction,\n        EventOriginalSeverity = LogSeverity,\n        EventOriginalType = DeviceEventClassID,\n        EventOriginalUid = ExtID,\n        EventProductVersion = DeviceVersion,\n        HttpContentFormat = RequestContext,\n        HttpReferrer = PanOSReferer,\n        RuleName = DeviceCustomString1,\n        SrcDvcId = PanOSSourceUUID,\n        SrcMacAddr = PanOSSourceDeviceMac,\n        SrcNatIpAddr = SourceTranslatedAddress,\n        SrcNatPortNumber = SourceTranslatedPort,\n        SrcPortNumber = SourcePort,\n        SrcUsername = SourceUserName,\n        SrcZone = DeviceCustomString4,\n        Url = RequestURL,\n        UrlCategory = DeviceCustomString2,\n        EventOriginalSubType = Activity,\n        DvcOutboundInterface = DeviceOutboundInterface,\n        DvcInboundInterface = DeviceInboundInterface,\n        DstUserId = DestinationUserID,\n        SrcUserId = SourceUserID,\n        HttpUserAgent = RequestClientApplication,\n        SrcGeoCountry = PanOSSourceLocation,\n        DvcScopeId = PanOSCortexDataLakeTenantID,\n        SrcAppName = ApplicationProtocol,\n        ThreatOriginalRiskLevel = PanOSApplicationRisk\n    | extend\n        Dst = coalesce(DstFQDN, DstDvcId, DstHostname, DstIpAddr),\n        Dvc = coalesce(DvcFQDN, DvcId, DvcHostname, DvcIpAddr),\n        EventEndTime = EventStartTime,\n        Src = coalesce(SrcFQDN, SrcDvcId, SrcHostname, SrcIpAddr),\n        NetworkProtocolVersion = case(\n                            DstIpAddr contains \".\",\n                            \"IPv4\",       \n                            DstIpAddr contains \":\",\n                            \"IPv6\", \n                            \"\"\n                        ),\n        NetworkDirection = iff(PanOSIsClienttoServer == \"true\", \"Outbound\", \"Inbound\"),\n        Rule = RuleName,\n        SrcUserType = _ASIM_GetUserType(SrcUsername, SrcUserId),\n        DstUserType = _ASIM_GetUserType(DstUsername, DstUserId),\n        User = SrcUsername,\n        Hostname = DstHostname,\n        IpAddr = SrcIpAddr,\n        SessionId = NetworkSessionId,\n        UserAgent = HttpUserAgent,\n        DvcIdType = iff(isnotempty(DvcId), \"Other\", \"\"),\n        SrcDvcIdType = iff(isnotempty(SrcDvcId), \"Other\", \"\"),\n        DstDvcIdType = iff(isnotempty(DstDvcId), \"Other\", \"\"),\n        SrcDomainType = iff(isnotempty(SourceNTDomain), \"Windows\", SrcDomainType),\n        DstDomainType = iff(isnotempty(DestinationNTDomain), \"Windows\", DstDomainType),\n        SrcUsernameType = _ASIM_GetUsernameType(SrcUsername),\n        DstUsernameType = _ASIM_GetUsernameType(DstUsername),\n        SrcUserIdType = iff(isnotempty(SrcUserId), \"UID\", \"\"),\n        DstUserIdType = iff(isnotempty(DstUserId), \"UID\", \"\"),\n        SrcAppType = case(\n                isnotempty(SrcAppName) and PanOSIsSaaSApplication == \"true\",\n                \"SaaS Application\",\n                isnotempty(SrcAppName) and PanOSIsSaaSApplication == \"false\",\n                \"Other\",\n                \"\"\n            )\n    | extend\n        EventProduct = \"Cortex Data Lake\",\n        EventVendor = \"Palo Alto\",\n        EventSchema = \"WebSession\",\n        EventSchemaVersion = \"0.2.6\",\n        EventType = \"HTTPsession\"\n    | project-away\n        Source*,\n        Destination*,\n        Device*,\n        AdditionalExtensions,\n        CommunicationDirection,\n        EventOutcome,\n        PanOS*,\n        Protocol,\n        ExternalID,\n        Message,\n        start,\n        EndTime,\n        FieldDevice*,\n        Flex*,\n        File*,\n        Old*,\n        MaliciousIP*,\n        OriginalLogSeverity,\n        Process*,\n        ReceivedBytes,\n        SentBytes,\n        Remote*,\n        Request*,\n        SimplifiedDeviceAction,\n        StartTime,\n        TenantId,\n        ReportReferenceLink,\n        ReceiptTime,\n        Reason,\n        Indicator*,\n        _ResourceId,\n        ThreatConfidence,\n        ThreatDescription,\n        ThreatSeverity\n};\nparser(disabled=disabled)\n",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
