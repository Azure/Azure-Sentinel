{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimNetworkSessionMicrosoft365Defender')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Network Session ASIM parser for M365 Defender for Endpoint",
        "category": "ASIM",
        "FunctionAlias": "ASimNetworkSessionMicrosoft365Defender",
        "query": "let M365Defender=(disabled:bool=false){\n let DirectionLookup=datatable(ActionType:string,NetworkDirection:string,Outbound:boolean)[\n   'ConnectionSuccess','Outbound', true\n   ,'ConnectionFailed', 'Outbound', true\n   ,'ConnectionRequest','Outbound', true\n   ,'InboundConnectionAccepted', 'Inbound', false\n   ,'ConnectionFound', 'Unknown', false\n   ,'ListeningConnectionCreated', 'Listen', false \n ];\n // -- Common preprocessing to both input and outbound events\n let RawNetworkEvents = (select_outbound:boolean) {\n   DeviceNetworkEvents | where not(disabled) \n   | lookup DirectionLookup on ActionType\n   | where Outbound == select_outbound\n   | project-away AppGuardContainerId, LocalIPType, MachineGroup, RemoteIPType, Timestamp, Outbound //, SourceSystem, TenantId\n   | extend\n     // Event\n     EventOriginalUid = tostring(ReportId),\n     EventCount = int(1),\n     EventProduct = 'M365 Defender for Endpoint',\n     EventVendor = 'Microsoft',\n     EventSchema = 'NetworkSession',\n     EventSchemaVersion = '0.1.0',\n     EventStartTime = TimeGenerated,\n     EventEndTime = TimeGenerated,\n     EventType = 'NetworkSession',\n     EventResult = iff(ActionType=='ConnectionFailed','Failure','Success'),\n     EventSeverity = \"Informational\",\n     DvcIdType = 'MDEid'\n   | project-away \n       ReportId\n   | project-rename \n       EventOriginalResultDetails = ActionType\n   | extend\n     RemoteUrl = extract (@\"(?:https?://)?(.*)\", 1, RemoteUrl)\n   | extend\n     User = iff (InitiatingProcessAccountDomain == '', InitiatingProcessAccountName, strcat(InitiatingProcessAccountDomain, '\\\\', InitiatingProcessAccountName)),\n     UsernameType = iff(InitiatingProcessAccountDomain == '','Simple', 'Windows'),\n     SplitHostname = split(DeviceName,\".\"),\n     SplitUrl = split(RemoteUrl,\".\"),\n     NetworkProtocol = case (\n       Protocol startswith \"Tcp\", \"TCP\",\n       Protocol == \"Unknown\", \"\",\n       toupper(Protocol)\n     )\n   | project-away Protocol\n   | extend  \n     DvcHostname = tostring(SplitHostname[0]),\n     DvcDomain = tostring(strcat_array(array_slice(SplitHostname, 1, -1), '.')),\n     DvcFQDN = iif (DeviceName contains \".\", DeviceName, \"\"),\n     UrlHostname = tostring(SplitUrl[0]),\n     UrlDomain = tostring(strcat_array(array_slice(SplitUrl, 1, -1), '.')),\n     UrlFQDN = iif(RemoteUrl contains \".\", RemoteUrl, \"\")\n   | project-away RemoteUrl, DeviceName\n   | extend\n     DvcDomainType = iif(DvcFQDN != \"\", \"FQDN\", \"\"),\n     UrlDomainType = iff(UrlFQDN != \"\", \"FQDN\", \"\"),\n     DvcIpAddr = LocalIP\n   | extend\n     Dvc = DvcHostname  \n   | project-rename\n     DvcId = DeviceId\n   | project-away SplitUrl, SplitHostname\n };\n let OutboundNetworkEvents = \n   RawNetworkEvents (true)\n   | project-rename\n      DstIpAddr = RemoteIP,\n      SrcIpAddr = LocalIP,\n      DstPortNumber = RemotePort,\n      SrcPortNumber = LocalPort,\n      SrcUsernameType = UsernameType,\n      SrcUserAadId = InitiatingProcessAccountObjectId,\n      SrcUserUpn = InitiatingProcessAccountUpn,\n      SrcUserId = InitiatingProcessAccountSid\n   | extend\n      SrcUsername = User,\n      SrcDvcId = DvcId,\n      SrcDvcIdType = 'MDEid',\n      SrcUserIdType = iff (SrcUserId <> \"S-1-0-0\", \"SID\", \"\"),\n      SrcUserId = iff (SrcUserId <> \"S-1-0-0\", SrcUserId, \"\"),\n      DstHostname = UrlHostname\n   | project-rename\n      DstDomain = UrlDomain,\n      DstFQDN = UrlFQDN,\n      DstDomainType = UrlDomainType\n   | extend  \n      SrcHostname = DvcHostname,\n      SrcDomain = DvcDomain,\n      SrcFQDN = DvcDomain\n   // Processes\n   | extend\n      SrcProcessId = tostring(InitiatingProcessId),\n      ParentProcessId = tostring(InitiatingProcessParentId)\n   | project-rename\n      SrcProcessName = InitiatingProcessFileName,\n      SrcProcessCommandLine = InitiatingProcessCommandLine,\n      SrcProcessCreationTime = InitiatingProcessCreationTime,\n      SrcProcessIntegrityLevel = InitiatingProcessIntegrityLevel,\n      SrcProcessTokenElevation = InitiatingProcessTokenElevation,\n      ParentProcessName = InitiatingProcessParentFileName,\n      ParentProcessCreationTime = InitiatingProcessParentCreationTime\n      // SrcProcessFileSize = InitiatingProcessFileSize,\n      // SrcProcessCompany = InitiatingProcessVersionInfoCompanyName,\n      // SrcProcessFileProduct = InitiatingProcessVersionInfoProductName,\n      // SrcProcessFileVersion = InitiatingProcessVersionInfoProductVersion,\n      // SrcProcessFileInternalName = InitiatingProcessVersionInfoInternalFileName,\n      // SrcProcessFileOriginalName = InitiatingProcessVersionInfoOriginalFileName,\n      // SrcProcessFileDescription = InitiatingProcessVersionInfoFileDescription\n   | extend\n      Process = SrcProcessName,\n      SrcAppName = SrcProcessName,\n      SrcAppType = \"Process\"\n ;\n let InboundNetworkEvents = \n   RawNetworkEvents (false)\n   | project-rename\n      SrcIpAddr = RemoteIP,\n      DstIpAddr = LocalIP,\n      SrcPortNumber = RemotePort,\n      DstPortNumber = LocalPort,\n      DstUsernameType = UsernameType,\n      DstUserAadId = InitiatingProcessAccountObjectId,\n      DstUserId = InitiatingProcessAccountSid,\n      DstUserUpn = InitiatingProcessAccountUpn\n   | extend\n      DstUsername = User,\n      DstDvcId = DvcId,\n      DstDvcIdType = 'MDEid',\n      DstUserIdType = 'SID',\n      SrcHostname = UrlHostname\n  | project-rename\n      SrcDomain = UrlDomain,\n      SrcFQDN = UrlFQDN,\n      SrcDomainType = UrlDomainType,\n      DstHostname = DvcHostname,\n      DstDomain = DvcDomain,\n      DstFQDN = DvcFQDN\n   // Processes\n   | extend\n      DstProcessId = tostring(InitiatingProcessId),\n      ParentProcessId = tostring(InitiatingProcessParentId)\n   | project-rename\n      DstProcessName = InitiatingProcessFileName,\n      DstProcessCommandLine = InitiatingProcessCommandLine,\n      DstProcessCreationTime = InitiatingProcessCreationTime,\n      DstProcessIntegrityLevel = InitiatingProcessIntegrityLevel,\n      DstProcessTokenElevation = InitiatingProcessTokenElevation,\n      ParentProcessName = InitiatingProcessParentFileName,\n      ParentProcessCreationTime = InitiatingProcessParentCreationTime\n      // SrcProcessFileSize = InitiatingProcessFileSize,\n      // SrcProcessCompany = InitiatingProcessVersionInfoCompanyName,\n      // SrcProcessFileProduct = InitiatingProcessVersionInfoProductName,\n      // SrcProcessFileVersion = InitiatingProcessVersionInfoProductVersion,\n      // SrcProcessFileInternalName = InitiatingProcessVersionInfoInternalFileName,\n      // SrcProcessFileOriginalName = InitiatingProcessVersionInfoOriginalFileName,\n      // SrcProcessFileDescription = InitiatingProcessVersionInfoFileDescription\n   | extend\n      Process = DstProcessName,\n      DstAppName = DstProcessName,\n      DstAppType = \"Process\"\n ;\n union InboundNetworkEvents, OutboundNetworkEvents\n | project-rename \n    Hostname = UrlHostname\n | extend // aliases\n    IpAddr = SrcIpAddr,\n    Src = SrcIpAddr,\n    Dst = DstIpAddr\n };\n M365Defender (disabled)\n",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
