{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimNetworkSessionPaloAltoCEF')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Network Session ASIM parser for Palo Alto PanOS",
        "category": "ASIM",
        "FunctionAlias": "ASimNetworkSessionPaloAltoCEF",
        "query": "let Actions=datatable(DeviceAction:string,DvcAction:string)\n[ \"reset client\",\"Reset Source\"\n, \"reset server\",\"Reset Destination\"\n, \"reset both\", \"Reset\"\n, \"allow\",\"Allow\"\n, \"deny\",\"Deny\"\n, \"drop\", \"Drop\"\n, \"drop ICMP\", \"Drop ICMP\"\n, \"reset-client\",\"Reset Source\"\n, \"reset-server\",\"Reset Destination\"\n, \"reset-both\", \"Reset\"\n, \"drop-icmp\", \"Drop ICMP\"];\nlet NWParser=(disabled:bool=false){\nCommonSecurityLog | where not(disabled)\n| where DeviceVendor == \"Palo Alto Networks\" and DeviceProduct == \"PAN-OS\" and Activity == \"TRAFFIC\"\n| parse AdditionalExtensions with \"PanOSPacketsReceived=\" DstPackets:long * \"PanOSPacketsSent=\" SrcPackets:long *\n  // -- Adjustment to support both old and new CSL fields.\n| extend \n  EventStartTime =  coalesce(\n    todatetime(StartTime), \n    extract(@'start=(.*?)(?:;|$)',1, AdditionalExtensions,typeof(datetime)),\n    datetime(null)\n  ),\n  EventOriginalResultDetails = coalesce(\n    column_ifexists(\"Reason\", \"\"),\n    extract(@'reason=(.*?)(?:;|$)',1, AdditionalExtensions, typeof(string)),\n    \"\"\n  )\n| project-rename \n    EventProductVersion=DeviceVersion // Not Documented\n  , Dvc=DeviceName   \n  , NetworkApplicationProtocol=ApplicationProtocol\n  , SrcZone=DeviceCustomString4 \n  , DstZone=DeviceCustomString5\n  , NetworkRuleName=DeviceCustomString1\n  , SrcUsername=SourceUserName \n  , DstUsername=DestinationUserName \n  , EventOriginalSeverity=LogSeverity // not documented\n  , SrcNatIpAddr=SourceTranslatedAddress\n  , DstNatIpAddr=DestinationTranslatedAddress\n  , PaloAltoFlags=FlexString1 // Flags\n| extend\nEventVendor=\"Palo Alto\"\n  ,EventProduct=\"PanOS\" // Not Documented\n  , SrcBytes=tolong(SentBytes)\n  , DstBytes=tolong(ReceivedBytes) \n  , NetworkProtocol=toupper(Protocol)\n  , NetworkBytes=tolong(FlexNumber1)\n  , SrcUsernameType=case(isempty(SrcUsername), \"\", SrcUsername contains \"@\", \"UPN\", \"Simple\")\n  , DstUsernameType=case(isempty(DstUsername), \"\", DstUsername contains \"@\", \"UPN\", \"Simple\")\n  , EventType=\"NetworkSession\"\n  , EventCount=toint(1)\n  , EventResult=case(DeviceAction==\"allow\",\"Success\",\"Failure\")\n  // -- Adjustment to support both old and new CSL fields.\n  , NetworkPackets = coalesce(\n      tolong(column_ifexists(\"FieldDeviceCustomNumber2\", long(null))),\n      tolong(column_ifexists(\"DeviceCustomNumber2\",long(null)))\n    )\n  , NetworkSessionId = coalesce(\n      tostring(column_ifexists(\"FieldDeviceCustomNumber1\", long(null))),\n      tostring(column_ifexists(\"DeviceCustomNumber1\",long(null)))\n    )\n  , NetworkDuration= coalesce(\n      toint(1000*column_ifexists(\"FieldDeviceCustomNumber3\", 0)),\n      toint(1000*column_ifexists(\"DeviceCustomNumber3\",0)),\n      int(null)\n    )\n  , EventSchemaVersion=\"0.2.1\"\n  , EventSchema=\"NetworkSession\"\n  , EventSeverity = \"Informational\"\n| extend hostelements=split(Dvc,'.')\n| extend DvcHostname=tostring(hostelements[0])\n       , DvcDomain=strcat_array( array_slice(hostelements,1,-1), '.')\n| extend DvcFQDN = iff(Dvc contains \".\",Dvc,\"\" )\n      , DvcDomainType=iff(Dvc contains \".\",\"FQDN\",\"\" )\n| project-away hostelements\n| lookup Actions on DeviceAction\n| project-rename\n  DstMacAddr=DestinationMACAddress\n  , SrcMacAddr=SourceMACAddress\n  , DstIpAddr=DestinationIP\n  , DstPortNumber=DestinationPort\n  , DstNatPortNumber=DestinationTranslatedPort\n  , SrcPortNumber=SourcePort\n  , SrcIpAddr=SourceIP\n  , SrcNatPortNumber=SourceTranslatedPort\n  , DvcOutboundInterface=DeviceOutboundInterface\n  , DvcInboundInterface=DeviceInboundInterface\n  , EventMessage=Message\n  , DvcOriginalAction=DeviceAction\n// -- Aliases\n| extend\nIpAddr = SrcIpAddr,\nRule=NetworkRuleName,\nDst=DstIpAddr,\n// Host=DstHostname, \nUser=DstUsername,\nDuration=NetworkDuration,\nSessionId=NetworkSessionId,\nEventEndTime =EventStartTime,\nSrc=SrcIpAddr\n| project-away AdditionalExtensions, CommunicationDirection, Device*, Destination*, EndTime, ExternalID, File*, Flex*, IndicatorThreatType, Malicious*, Old*, Process*, ReceiptTime, ReceivedBytes, Remote*, Request*, Sent*, SimplifiedDeviceAction, Source*, StartTime, TenantId, ThreatConfidence, ThreatDescription, ThreatSeverity, EventOutcome, FieldDevice*, ExtID, Reason, ReportReferenceLink, Activity, Computer, OriginalLogSeverity, PaloAltoFlags, Protocol\n};\nNWParser (disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
