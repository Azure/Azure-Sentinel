Parser:
    Title: NetworkSession ASIM Parser for Illumio SaaS Core
    Version: "0.1.0"
    LastUpdated: Aug 21, 2024
Product:
    Name: Illumio SaaS Core
Normalization:
    Schema: NetworkSession
    Version: "0.2.6"
References:
    - Title: ASIM Network Session Schema
      Link: https://aka.ms/ASimNetworkSessionDoc
    - Title: ASIM
      Link: https://aka.ms/AboutASIM
    - Title: Illumio SaaS Core Documentation
      Link: https://docs.illumio.com/core/24.1/Content/Guides/events-administration/events-described/list-of-event-types.htm
Description: |
    This ASIM parser supports normalizing Illumio SaaS Core logs to the ASIM Network Session normalized schema. These events are captured through Illumio Sentinel Integration data connector.
ParserName: ASimNetworkSessionIllumioSaaSCore
EquivalentBuiltInParser: _ASim_NetworkSession_IllumioSaaSCore
ParserParams:
    - Name: disabled
      Type: bool
      Default: false
ParserQuery: |
    let ProtocolLookup = datatable(proto:int, NetworkProtocol:string) [
          0,"HOPOPT",
          1,"ICMP",
          2,"IGMP",
          3,"GGP",
          4,"IPv4",
          5,"ST",
          6,"TCP",
          7,"CBT",
          8,"EGP",
          9,"IGP",
          10,"BBN-RCC-MON",
          11,"NVP-II",
          12,"PUP",
          13,"ARGUS (deprecated)",
          14,"EMCON",
          15,"XNET",
          16,"CHAOS",
          17,"UDP",
          18,"MUX",
          19,"DCN-MEAS",
          20,"HMP",
          21,"PRM",
          22,"XNS-IDP",
          23,"TRUNK-1",
          24,"TRUNK-2",
          25,"LEAF-1",
          26,"LEAF-2",
          27,"RDP",
          28,"IRTP",
          29,"ISO-TP4",
          30,"NETBLT",
          31,"MFE-NSP",
          32,"MERIT-INP",
          33,"DCCP",
          34,"3PC",
          35,"IDPR",
          36,"XTP",
          37,"DDP",
          38,"IDPR-CMTP",
          39,"TP++",
          40,"IL",
          41,"IPv6",
          42,"SDRP",
          43,"IPv6-Route",
          44,"IPv6-Frag",
          45,"IDRP",
          46,"RSVP",
          47,"GRE",
          48,"DSR",
          49,"BNA",
          50,"ESP",
          51,"AH",
          52,"I-NLSP",
          53,"SWIPE (deprecated)",
          54,"NARP",
          55,"MOBILE",
          56,"TLSP",
          57,"SKIP",
          58,"IPv6-ICMP",
          59,"IPv6-NoNxt",
          60,"IPv6-Opts",
          61,"",
          62,"CFTP",
          63,"",
          64,"SAT-EXPAK",
          65,"KRYPTOLAN",
          66,"RVD",
          67,"IPPC",
          68,"",
          69,"SAT-MON",
          70,"VISA",
          71,"IPCV",
          72,"CPNX",
          73,"CPHB",
          74,"WSN",
          75,"PVP",
          76,"BR-SAT-MON",
          77,"SUN-ND",
          78,"WB-MON",
          79,"WB-EXPAK",
          80,"ISO-IP",
          81,"VMTP",
          82,"SECURE-VMTP",
          83,"VINES",
          84,"TTP",
          84,"IPTM",
          85,"NSFNET-IGP",
          86,"DGP",
          87,"TCF",
          88,"EIGRP",
          89,"OSPFIGP",
          90,"Sprite-RPC",
          91,"LARP",
          92,"MTP",
          93,"AX.25",
          94,"IPIP",
          95,"MICP (deprecated)",
          96,"SCC-SP",
          97,"ETHERIP",
          98,"ENCAP",
          99,"",
          100,"GMTP",
          101,"IFMP",
          102,"PNNI",
          103,"PIM",
          104,"ARIS",
          105,"SCPS",
          106,"QNX",
          107,"A/N",
          108,"IPComp",
          109,"SNP",
          110,"Compaq-Peer",
          111,"IPX-in-IP",
          112,"VRRP",
          113,"PGM",
          114,"",
          115,"L2TP",
          116,"DDX",
          117,"IATP",
          118,"STP",
          119,"SRP",
          120,"UTI",
          121,"SMP",
          122,"SM (deprecated)",
          123,"PTP",
          124,"ISIS over IPv4",
          125,"FIRE",
          126,"CRTP",
          127,"CRUDP",
          128,"SSCOPMCE",
          129,"IPLT",
          130,"SPS",
          131,"PIPE",
          132,"SCTP",
          133,"FC",
          134,"RSVP-E2E-IGNORE",
          135,"Mobility Header",
          136,"UDPLite",
          137,"MPLS-in-IP",
          138,"manet",
          139,"HIP",
          140,"Shim6",
          141,"WESP",
          142,"ROHC",
          143,"Ethernet",
          253,"",
          254,"",
          255,"Reserved"
        ];
    let NetworkProtocolVersionLookup = datatable(version: int, NetworkProtocolVersion: string)
    [
      4,"IPv4",
      6,"IPv6"
    ];
    let EventResultLookup = datatable(DvcAction: string, EventResult: string)
    [
      "Deny", "Failure",
      "Allow", "Success"
    ];
    let DvcActionLookup = datatable(pd: int, DvcAction: string)
    [
    // - Allow
    // - Deny
    // - Drop
    // - Drop ICMP
    // - Reset
    // - Reset Source
    // - Reset Destination
    // - Encrypt
    // - Decrypt
    // - VPNroute
      2, "Deny",
      1, "Allow",
      0, "Allow"
    ];
    let ClassLookup = datatable(class: string, ClassDetail: string)
    [
      "M", "Multicast",
      "B", "Broadcast",
      "U", "Unicast"
    ];
    let parser=(disabled:bool=false){
      Illumio_Flow_Events_CL 
      | where not(disabled)
      | lookup ProtocolLookup on proto
      | lookup NetworkProtocolVersionLookup on version
      | lookup DvcActionLookup on pd //set DvcAction
      | extend EventResult = iff(DvcAction == "Deny", "Failure", "Success")
      | lookup ClassLookup on class
      | extend
          EventCount = flow_count,
          EventStartTime = TimeGenerated, 
          EventEndTime= TimeGenerated,
          EventType = 'Flow',
          EventProduct = 'Core',
          EventVendor = 'Illumio',
          EventSchemaVersion = '0.2.6',
          EventSchema = 'NetworkSession',
          Dvc = pce_fqdn    
      | extend NetworkDirection = case(
          dir=='I', 'Inbound',
          dir=='O', 'Outbound',
          'Unknown'
      ),
          NetworkDuration = interval_sec,
          DstBytes = tolong(dst_dbo),
          SrcBytes = tolong(dst_dbi),
          DstIpAddr = dst_ip,
          SrcIpAddr = src_ip,
          DstPortNumber = dst_port,
          DstHostname = dst_hostname,
          SrcHostname = src_hostname,
          EventSeverity = case( 
              DvcAction=='Deny', 'Low',
              'Informational'        
          )
      | extend 
        SrcProcessName = iif(dir=='O', pn, ''),
        DstProcessName = iif(dir=='I', pn, ''),
        SrcUsername = iif(dir=='O', un, ''),
        DstUsername = iif(dir=='I', un, '')
      | extend
        SrcUsernameType = _ASIM_GetUsernameType(SrcUsername),
        DstUsernameType = _ASIM_GetUsernameType(DstUsername)
      //Aliases
      | extend 
          DvcIpAddr = SrcIpAddr,
          DvcHostname = SrcHostname
      | extend
          AdditionalFields = bag_pack("Class", ClassDetail,
          "Network",network,
          "Source_Labels", src_labels,
          "Dest_Labels", dst_labels,
          "Src_href", src_href, // can this be stored in SrcId instead?
          "Dst_href", dst_href // can this be stored in DvcId instead?
          // need to add SN here
          )
      // aliases    
      | extend
          Duration = NetworkDuration,
          User = DstUsername,
          Hostname = DstHostname,
          IpAddr = SrcIpAddr,
          EventUid = _ItemId
      | project-away 
          code,
          icmp_type,
          dst_dbi,
          dst_dbo,
          dst_tbi,
          dst_tbo,
          pce_fqdn,
          proto,
          dst_port,
          src_ip,
          dst_ip,
          dst_hostname,
          src_hostname,
          dir,
          flow_count,
          src_href,
          dst_href,
          src_labels,
          dst_labels,
          network,
          class,
          org_id,
          state, // decide how to use this
          pd_qualifier, //decide how to use this
          interval_sec,
          version,
          ddms, // not needed
          tdms, // not needed
          pn, 
          un,
          pd,
          ClassDetail,
          TenantId
    };
    parser(disabled=disabled)
