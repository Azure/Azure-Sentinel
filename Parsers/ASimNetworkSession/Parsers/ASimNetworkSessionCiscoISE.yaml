Parser:
  Title: Network Session ASIM parser for Cisco ISE
  Version: '1.1.0'
  LastUpdated: July 6, 2023
Product:
  Name: Cisco ISE
Normalization:
  Schema: NetworkSession
  Version: '0.2.6'
References:
  - Title: ASIM Network Session Schema
    Link: https://aka.ms/ASimNetworkSessionDoc
  - Title: ASIM
    Link: https://aka.ms/AboutASIM
  - Title: Organization Application Security Events 
    Link: https://www.cisco.com/c/en/us/td/docs/security/ise/3-2/admin_guide/b_ise_admin_3_2/b_ISE_admin_32_maintain_monitor.html#ID58
Description: |
  This ASIM parser supports normalizing Cisco ISE Events produced by the Microsoft Sentinel Cisco ISE connector to the ASIM Network Session normalized schema.
ParserName: ASimNetworkSessionCiscoISE
EquivalentBuiltInParser: _ASim_NetworkSession_CiscoISE
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
    let EventFieldsLookup=datatable(
    EventOriginalType: string,
    EventResult: string,
    DvcAction: string,
    EventResultDetails: string,
    EventSubType: string,
    EventOriginalSeverity: string,
    EventSeverity: string,
    EventMessage: string,
    EventOriginalResultDetails: string
    )[
    "60188", "Failure", "Drop", "Terminated", "End", "INFO", "Low", "An attempted SSH connection has failed", "An attempted SSH connection has failed",
    "60234", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "The SXP connection has been disconnected", "The SXP connection has been disconnected",
    "60235", "Success", "Allow", "", "Start", "INFO", "Informational", "SXP connection succeeded", "SXP connection succeeded",
    "60236", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "SXP connection failed", "SXP connection failed",
    "61010", "Success", "Allow", "", "Start", "INFO", "Informational", "ISE has established connection to APIC", "ISE has established connection to APIC",
    "61011", "Success", "Allow", "", "End", "INFO", "Informational", "ISE was disconnected from APIC", "ISE was disconnected from APIC",
    "61025", "Success", "Allow", "", "Start", "INFO", "Informational", "Open secure connection with TLS peer", "Secure connection established with TLS peer",
    "61026", "Success", "Allow", "", "Start", "INFO", "Informational", "Shutdown secure connection with TLS peer", "Secure connection with TLS peer shutdown",
    "60509", "Failure", "Deny", "Terminated", "End", "ERROR", "Low", "ERS request was denied as maximum possible connection was exceeded", "ERS request was denied as maximum possible connection was exceeded",
    "61231", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "Kafka connection to ACI error while receiving message", "Kafka connection to ACI error while receiving message",
    "61232", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "Kafka connection to ACI error while sending message", "Kafka connection to ACI error while sending message",
    "89003", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "Failed to connect to MDM server", "Failed to connect to MDM server",
    "24000", "Success", "Allow", "", "Start", "INFO", "Informational", "Connection established with LDAP server", "Connection established with LDAP server",
    "24001", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Cannot establish connection with LDAP server", "Cannot establish connection with LDAP server",
    "24019", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "LDAP connection error was encountered", "ISE cannot connect to LDAP external ID store",
    "24030", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "SSL connection error was encountered", "SSL connection error was encountered",
    "24400", "Success", "Allow", "", "Start", "INFO", "Informational", "Connection to ISE Active Directory agent established successfully", "Connection to ISE Active Directory agent established successfully",
    "24401", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Could not establish connection with ISE Active Directory agent", "Could not establish connection with ISE Active Directory agent",
    "24428", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Connection related error has occurred in either LRPC, LDAP or KERBEROS", "This RPC connection problem may be because the stub received incorrect data",
    "24429", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Could not establish connection with Active Directory", "Could not establish connection with Active Directory",
    "24850", "Success", "Allow", "", "Start", "DEBUG", "Informational", "Successfully connected to external ODBC database", "ISE successfully established a new connection to external ODBC database",
    "24851", "Failure", "Drop", "Terminated", "End", "DEBUG", "Low", "Connection to external ODBC database failed", "ISE failed to establish a new connection to external ODBC database",
    "34120", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Profiler failed to get the connection to NAC Manager", "Profiler sends a notification event to NAC Manager, but the notification fails because could not connect to NAC Manager",
    "34147", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "JGroups TLS Handshake Failed", "JGroups TLS Handshake Failed",
    "34148", "Success", "Allow", "", "Start", "INFO", "Informational", "JGroups TLS Handshake Succeeded", "JGroups TLS Handshake Succeeded",
    "34149", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "HTTPS TLS Handshake Failed", "HTTPS TLS Handshake Failed",
    "34150", "Success", "Allow", "", "Start", "INFO", "Informational", "HTTPS TLS Handshake Succeeded", "HTTPS TLS Handshake Succeeded",
    "34159", "Success", "Allow", "", "Start", "INFO", "Informational", "LDAPS connection established successfully", "LDAPS connection established successfully",
    "34160", "Success", "Allow", "", "Start", "INFO", "Informational", "LDAPS connection terminated successfully", "LDAPS connection terminated successfully",
    "34161", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "LDAPS connection establishment failed with SSL error", "LDAPS connection establishment failed with SSL error",
    "34162", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "LDAPS connection terminated with SSL error", "LDAPS connection terminated with SSL error",
    "34163", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "LDAPS connection establishment failed with non-SSL error", "LDAPS connection establishment failed with non-SSL error",
    "34164", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "LDAPS connection terminated with non-SSL error", "LDAPS connection terminated with non-SSL error",
    "90062", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Cannot connect to Domain Controller", "Cannot connect to Domain Controller",
    "90063", "Success", "Allow", "", "Start", "INFO", "Informational", "Successfully establish connection to Domain Controller", "Successfully establish connection to Domain Controller",
    "90066", "Failure", "Drop", "Terminated", "End", "ERROR", "Low", "Lost connection with Domain Controller", "Lost connection with Domain Controller",
    "90078", "Success", "Allow", "", "Start", "INFO", "Informational", "Closed connection to Domain Controller", "Closed connection to Domain Controller",
    "91082", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "RADIUS DTLS: Connection to OCSP server failed", "RADIUS DTLS: Connection attempt to OCSP server failed.",
    "11317", "Failure", "Drop", "Terminated", "End", "WARN", "Low", "TrustSec SSH connection failed", "ISE failed to establish SSH connection to a network device. Verify network device SSH credentials in the Network Device page are similar to the credentials configured on the network device. Check network device enabled ssh connections from ISE (ip address)",
    "5405", "Failure", "Drop", "Terminated", "End", "NOTICE", "Low", "RADIUS Request dropped", "RADIUS request dropped",
    "5406", "Failure", "Drop", "Terminated", "End", "NOTICE", "Low", "TACACS+ Request dropped", "TACACS+ request dropped"
    ];
    let EventOriginalTypeList = toscalar(EventFieldsLookup 
        | summarize make_set(EventOriginalType));
    let GetSrcIpAddr = (src_ip: string) {
        case ( 
              src_ip matches regex @"\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}",
              src_ip,
              ""
              )
    };
    let GetMacAddr = (mac: string) {
        case ( 
        mac matches regex @"[a-fA-F0-9\-:]{17}",
        mac,
        ""
        )
    };
    let CiscoISENSParser=(disabled: bool=false) {
        Syslog
        | where not(disabled)
        | where ProcessName has_any ("CISE", "CSCO")
        | parse kind = regex SyslogMessage with @"\d{10}\s" EventOriginalType @"\s(NOTICE|INFO|WARN|WARNING|ERROR|FATAL|DEBUG)"
        | where EventOriginalType in (EventOriginalTypeList)
        | lookup EventFieldsLookup on EventOriginalType
        | parse-kv SyslogMessage as (FailureReason: string, NetworkDeviceName: string, DestinationIPAddress: string, DestinationPort: int, ['Remote-Address']: string, ['Device IP Address']: string, ['User-Name']: string, UserName: string, User: string, ['Device Port']: int, Protocol: string, ['Calling-Station-ID']: string, ['Called-Station-ID']: string) with (pair_delimiter=',', kv_delimiter='=')
        | project-rename
            DstIpAddr=DestinationIPAddress
            , DstPortNumber=DestinationPort
            , SrcPortNumber=['Device Port']
            , NetworkApplicationProtocol=Protocol
        | invoke _ASIM_ResolveSrcFQDN("['Calling-Station-ID']")
        | extend 
            EventVendor = "Cisco"
            , EventProduct = "ISE"
            , EventProductVersion = "3.2"
            , EventCount = int(1)
            , EventSchema = "NetworkSession"
            , EventSchemaVersion = "0.2.6"
            , EventStartTime = coalesce(EventTime, TimeGenerated)
            , EventEndTime = coalesce(EventTime, TimeGenerated)
            , EventType = "NetworkSession"
            , EventOriginalResultDetails = case(isnotempty(FailureReason), FailureReason, EventOriginalResultDetails)
            , DvcIpAddr = iif(isnotempty(HostIP) and HostIP != "Unknown IP", HostIP, extract(@"(\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})", 1, Computer))
            , DstMacAddr = GetMacAddr(['Called-Station-ID'])
            , SrcMacAddr = GetMacAddr(['Calling-Station-ID'])
            , DstUsername = coalesce(UserName, ['User-Name'], User)
        | extend
            DstUsernameType = _ASIM_GetUsernameType(DstUsername)
            , DvcHostname = coalesce(NetworkDeviceName, Computer, HostName)
            , SrcIpAddr = coalesce(['Device IP Address'], ['Remote-Address'], GetSrcIpAddr(['Calling-Station-ID']))
        //********************** <Aliaces> ************************
        | extend 
            Dvc = coalesce(DvcHostname, DvcIpAddr)
            , IpAddr = SrcIpAddr
            , Dst = DstIpAddr
            , Src = SrcIpAddr
            , User = DstUsername
        //********************** </Aliases> ***********************
        | project-away
            TenantId,
            SourceSystem,
            MG,
            Computer,
            EventTime,
            Facility,
            HostName,
            SeverityLevel,
            SyslogMessage,
            HostIP,
            ProcessName,
            ProcessID,
            _ResourceId,
            FailureReason,
            NetworkDeviceName,
            ['User-Name'],
            UserName,
            ['Device IP Address'],
            ['Remote-Address'],
            ['Calling-Station-ID'],
            ['Called-Station-ID']
    };
    CiscoISENSParser(disabled=disabled)