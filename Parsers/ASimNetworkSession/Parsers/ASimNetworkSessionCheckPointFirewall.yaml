Parser:
  Title: Network Session ASIM parser for Check Point Firewall
  Version: '1.1'
  LastUpdated: Dec 11, 2022
Product:
  Name: CheckPointFirewall
Normalization:
  Schema: NetworkSession
  Version: '0.2.4'
References:
  - Title: ASIM Network Session Schema
    Link: https://aka.ms/ASimNetworkSessionDoc
  - Title: ASIM
    Link: https://aka.ms/AboutASIM
  - Title: Field Description in Check Point Logs 
    Link: https://supportcenter.checkpoint.com/supportcenter/portal?eventSubmit_doGoviewsolutiondetails=&solutionid=sk144192
Description: |
  This ASIM parser supports normalizing Check Point VPN-1 & Firewall-1 logs coming from CEF Data Connector to the ASIM Network Session normalized schema.
ParserName: ASimNetworkSessionCheckPointFirewall
EquivalentBuiltInParser: _ASim_NetworkSession_CheckPointFirewall
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let ProtocolLookup=datatable(Protocol:string,NetworkProtocol:string)
      [
          "0","HOPOPT"
          , "1","ICMP"
          , "2","IGMP"
          , "3","GGP"
          , "4","IPv4"
          , "5","ST"
          , "6","TCP"
          , "7","CBT"
          , "8","EGP"
          , "9","IGP"
          , "10","BBN-RCC-MON"
          , "11","NVP-II"
          , "12","PUP"
          , "13","ARGUS (deprecated)"
          , "14","EMCON"
          , "15","XNET"
          , "16","CHAOS"
          , "17","UDP"
          , "18","MUX"
          , "19","DCN-MEAS"
          , "20","HMP"
          , "21","PRM"
          , "22","XNS-IDP"
          , "23","TRUNK-1"
          , "24","TRUNK-2"
          , "25","LEAF-1"
          , "26","LEAF-2"
          , "27","RDP"
          , "28","IRTP"
          , "29","ISO-TP4"
          , "30","NETBLT"
          , "31","MFE-NSP"
          , "32","MERIT-INP"
          , "33","DCCP"
          , "34","3PC"
          , "35","IDPR"
          , "36","XTP"
          , "37","DDP"
          , "38","IDPR-CMTP"
          , "39","TP++"
          , "40","IL"
          , "41","IPv6"
          , "42","SDRP"
          , "43","IPv6-Route"
          , "44","IPv6-Frag"
          , "45","IDRP"
          , "46","RSVP"
          , "47","GRE"
          , "48","DSR"
          , "49","BNA"
          , "50","ESP"
          , "51","AH"
          , "52","I-NLSP"
          , "53","SWIPE (deprecated)"
          , "54","NARP"
          , "55","MOBILE"
          , "56","TLSP"
          , "57","SKIP"
          , "58","IPv6-ICMP"
          , "59","IPv6-NoNxt"
          , "60","IPv6-Opts"
          , "61",""
          , "62","CFTP"
          , "63",""
          , "64","SAT-EXPAK"
          , "65","KRYPTOLAN"
          , "66","RVD"
          , "67","IPPC"
          , "68",""
          , "69","SAT-MON"
          , "70","VISA"
          , "71","IPCV"
          , "72","CPNX"
          , "73","CPHB"
          , "74","WSN"
          , "75","PVP"
          , "76","BR-SAT-MON"
          , "77","SUN-ND"
          , "78","WB-MON"
          , "79","WB-EXPAK"
          , "80","ISO-IP"
          , "81","VMTP"
          , "82","SECURE-VMTP"
          , "83","VINES"
          , "84","TTP"
          , "84","IPTM"
          , "85","NSFNET-IGP"
          , "86","DGP"
          , "87","TCF"
          , "88","EIGRP"
          , "89","OSPFIGP"
          , "90","Sprite-RPC"
          , "91","LARP"
          , "92","MTP"
          , "93","AX.25"
          , "94","IPIP"
          , "95","MICP (deprecated)"
          , "96","SCC-SP"
          , "97","ETHERIP"
          , "98","ENCAP"
          , "99",""
          , "100","GMTP"
          , "101","IFMP"
          , "102","PNNI"
          , "103","PIM"
          , "104","ARIS"
          , "105","SCPS"
          , "106","QNX"
          , "107","A/N"
          , "108","IPComp"
          , "109","SNP"
          , "110","Compaq-Peer"
          , "111","IPX-in-IP"
          , "112","VRRP"
          , "113","PGM"
          , "114",""
          , "115","L2TP"
          , "116","DDX"
          , "117","IATP"
          , "118","STP"
          , "119","SRP"
          , "120","UTI"
          , "121","SMP"
          , "122","SM (deprecated)"
          , "123","PTP"
          , "124","ISIS over IPv4"
          , "125","FIRE"
          , "126","CRTP"
          , "127","CRUDP"
          , "128","SSCOPMCE"
          , "129","IPLT"
          , "130","SPS"
          , "131","PIPE"
          , "132","SCTP"
          , "133","FC"
          , "134","RSVP-E2E-IGNORE"
          , "135","Mobility Header"
          , "136","UDPLite"
          , "137","MPLS-in-IP"
          , "138","manet"
          , "139","HIP"
          , "140","Shim6"
          , "141","WESP"
          , "142","ROHC"
          , "143","Ethernet"
          , "253",""
          , "254",""
          , "255","Reserved"];
      let DirectionLookup=datatable(conn_direction:string,NetworkDirection:string)
      [
          "Incoming","Inbound", 
          "Outgoing","Outbound", 
          "Internal","Local"];
      let ActionLookup=datatable(DeviceAction:string,DvcAction:string,EventResult:string,EventSeverity:string)
      [
          "Accept","Allow","Success","Informational",
          "Allow","Allow","Success","Informational",
          "Drop","Drop","Failure","Low",
          "Reject","Deny","Failure","Low",
          "Encrypt","Encrypt","Success","Informational",
          "Decrypt","Decrypt","Success","Informational",
          "Bypass","Allow","Success","Informational",
          "Block","Deny","Failure","Low",
          "","","NA","Informational"
       ];
        let NWParser=(disabled:bool=false)
        {
        CommonSecurityLog
        | where not(disabled)
        | where DeviceVendor=="Check Point" and DeviceProduct=="VPN-1 & FireWall-1"
        | lookup ActionLookup on DeviceAction
        | lookup ProtocolLookup on Protocol
        | extend 
                EventProduct = "Firewall",
                EventCount = toint(1),
                EventType = "NetworkSession",
                EventSchema = "NetworkSession",
                EventSchemaVersion = "0.2.4"
        | parse-kv AdditionalExtensions as (
                    rule_uid:string,
                    loguid:string,
                    origin:string,
                    originsicname:string,
                    inzone:string,
                    outzone:string,
                    conn_direction:string,
                    alert:string,
                    inspection_category:string,
                    inspection_item:string
                ) with (pair_delimiter=';', kv_delimiter='=')
        | extend
                ThreatCategory = coalesce(alert, inspection_category),
                NetworkRuleName = coalesce(DeviceCustomString2, rule_uid, Activity),
                EventStartTime = TimeGenerated
        | parse originsicname with "CN\\=" DvcHostname "," *
        | project-rename
                Dvc = origin,                
                EventOriginalUid = loguid,
                ThreatName = inspection_item,
                EventVendor = DeviceVendor,
                DstPortNumber = DestinationPort,
                DstIpAddr = DestinationIP,
                SrcPortNumber = SourcePort,
                SrcIpAddr = SourceIP,
                DstNatIpAddr = DestinationTranslatedAddress,
                DstNatPortNumber = DestinationTranslatedPort,
                SrcNatIpAddr = SourceTranslatedAddress,
                SrcNatPortNumber = SourceTranslatedPort,
                EventProductVersion = DeviceVersion,
                EventOriginalSeverity = LogSeverity,
                Rule = NetworkRuleName,
                DvcOriginalAction = DeviceAction,
                DstAppName = Activity,
                EventMessage = Message
        | lookup DirectionLookup on conn_direction
        | extend 
                EventEndTime = EventStartTime,
                IpAddr = SrcIpAddr,
                Dst = DstIpAddr,
                Src = SrcIpAddr,
                NetworkDirection = case(
                                    isnotempty(NetworkDirection), NetworkDirection,
                                    inzone == "Internal" and (outzone == "Internal" or outzone == "Local"), "Local",
                                    (inzone == "Internal" or inzone == "Local") and outzone == "External", "Outbound",
                                    inzone == "External" and (outzone == "Internal" or outzone == "Local"), "Inbound",
                                    CommunicationDirection == "0", "Inbound",
                                    CommunicationDirection == "1", "Outbound",
                                    ""
                                    ),
                EventSeverity = iif(isnotempty(ThreatCategory),"High",EventSeverity),
                NetworkIcmpType = coalesce(
                                        tostring(column_ifexists("FieldDeviceCustomNumber2", long(null))),
                                        tostring(column_ifexists("DeviceCustomNumber2",long(null)))
                                        ),
                NetworkIcmpCode = coalesce(
                                        toint(column_ifexists("FieldDeviceCustomNumber3", long(null))),
                                        toint(column_ifexists("DeviceCustomNumber3",long(null)))
                                        )
        | project-away ApplicationProtocol, AdditionalExtensions, CommunicationDirection, Computer, Device*, Destination*, EndTime, ExternalID, File*, Flex*, IndicatorThreatType, Malicious*, Old*, OriginalLogSeverity, Process*, Protocol, ReceiptTime, ReceivedBytes, Remote*, ReportReferenceLink, Request*, Sent*, SimplifiedDeviceAction, Source*, StartTime, TenantId, ThreatConfidence, ThreatDescription, ThreatSeverity, rule_uid, originsicname, inzone, outzone, alert, conn_direction, inspection_category, ExtID, EventOutcome, FieldDevice*, Reason
      };
      NWParser (disabled=disabled)