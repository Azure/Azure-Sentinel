Parser:
  Title: Network Session ASIM  parser for Microsoft Windows Firewall Events
  Version: '0.5.0'
  LastUpdated: Jul 17, 2024
Product:
  Name: Windows Firewall
Normalization:
  Schema: NetworkSession
  Version: '0.2.6'
References:
- Title: ASIM Network Session Schema
  Link: https://aka.ms/ASimNetworkSessionDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Microsoft Windows Firewall Events logs ingested in 'SecurityEvent' table to the ASIM Network Session schema. Event IDs which are parsed as part of this parser: 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5167, 5158, 5159
ParserName: ASimNetworkSessionMicrosoftSecurityEventFirewall
EquivalentBuiltInParser: _ASim_NetworkSession_MicrosoftSecurityEventFirewall
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  // Data tables for mapping raw values into string
  let LayerCodeTable = datatable (LayerCode:string,LayerName:string)[
    '%%14596', 'IP Packet',
    '%%14597', 'Transport',
    '%%14598', 'Forward',
    '%%14599', 'Stream',
    '%%14600', 'Datagram Data',
    '%%14601', 'ICMP Error',
    '%%14602', 'MAC 802.3',
    '%%14603', 'MAC Native',
    '%%14604', 'vSwitch',
    '%%14608', 'Resource Assignment',
    '%%14609', 'Listen',
    '%%14610', 'Receive/Accept',
    '%%14611', 'Connect',
    '%%14612', 'Flow Established',
    '%%14614', 'Resource Release',
    '%%14615', 'Endpoint Closure',
    '%%14616', 'Connect Redirect',
    '%%14617', 'Bind Redirect',
    '%%14624', 'Stream Packet'];
  let ProtocolTable = datatable (Protocol:int, NetworkProtocol: string)[
    1, 'ICMP',
    3, 'GGP',
    6, 'TCP',
    8, 'EGP',
    12, 'PUP',
    17, 'UDP',
    20, 'HMP',
    27, 'RDP',
    46, 'RSVP',
    47, 'PPTP data over GRE',
    50, 'ESP',
    51, 'AH',
    66, 'RVD',
    88, 'IGMP',
    89, 'OSPF'];
  let Directions = datatable (DirectionCode:string,NetworkDirection:string, isOutBound:bool)[
    '%%14592', 'Inbound', false,
    '%%14593', 'Outbound', true,
    '%%14594', 'Forward',false,
    '%%14595', 'Bidirectional', false,
    '%%14609', 'Listen', false];
  ///////////////////////////////////////////////////////
  // this query extract data fields from EventData column from SecurityEvent table
  ///////////////////////////////////////////////////////
  let parser = (disabled: bool=false) {
  let WindowsFirewall_SecurityEvent=(){ // Event IDs between (5151 .. 5159)
  // will be extracting Event specific fields from 'EventData' field
    let SecurityEventProjected =
        SecurityEvent
        | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Type
    ;
    let SecurityEvent_5152 = 
        SecurityEventProjected | where not(disabled)
        | where EventID==5152
        | parse EventData with * '<Data Name="ProcessId">'ProcessId:string'</Data>'
            '\x0d\x0a  <Data Name="Application">'Application'</Data>'
            '\x0d\x0a  <Data Name="Direction">'DirectionCode'</Data>'
            '\x0d\x0a  <Data Name="SourceAddress">'SrcIpAddr:string'</Data>'
            '\x0d\x0a  <Data Name="SourcePort">'SrcPortNumber:int'</Data>'
            '\x0d\x0a  <Data Name="DestAddress">'DstIpAddr:string'</Data>'
            '\x0d\x0a  <Data Name="DestPort">'DstPortNumber:int'</Data>'
            '\x0d\x0a  <Data Name="Protocol">'Protocol:int'</Data>'
            '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber:int'</Data>'
            '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
            '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'*
        | project-away EventData;
    let SecurityEvent_5154_5155_5158_5159 =
        SecurityEventProjected | where not(disabled)
        | where EventID in (5154, 5155, 5158, 5159)
        | parse EventData with * '<Data Name="ProcessId">'ProcessId:string'</Data>' 
            '\x0d\x0a  <Data Name="Application">'Application'</Data>'
            '\x0d\x0a  <Data Name="SourceAddress">'SrcIpAddr:string'</Data>'
            '\x0d\x0a  <Data Name="SourcePort">'SrcPortNumber:int'</Data>'
            '\x0d\x0a  <Data Name="Protocol">'Protocol:int'</Data>'
            '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber:int'</Data>'
            '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
            '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'*
        | extend DirectionCode = "%%14609"
        | project-away EventData;
    let SecurityEvent_5156_5157 =
        SecurityEventProjected | where not(disabled)
        | where EventID in (5156, 5157)
        | parse EventData with * '<Data Name="ProcessID">'ProcessId:string'</Data>'
            '\x0d\x0a  <Data Name="Application">'Application:string'</Data>'
            '\x0d\x0a  <Data Name="Direction">'DirectionCode:string'</Data>'
            '\x0d\x0a  <Data Name="SourceAddress">'SrcIpAddr:string'</Data>'
            '\x0d\x0a  <Data Name="SourcePort">'SrcPortNumber:int'</Data>'
            '\x0d\x0a  <Data Name="DestAddress">'DstIpAddr:string'</Data>'
            '\x0d\x0a  <Data Name="DestPort">'DstPortNumber:int'</Data>'
            '\x0d\x0a  <Data Name="Protocol">'Protocol:int'</Data>'
            '\x0d\x0a  <Data Name="FilterRTID">'NetworkRuleNumber:int'</Data>'
            '\x0d\x0a  <Data Name="LayerName">'LayerCode'</Data>'
            '\x0d\x0a  <Data Name="LayerRTID">'LayerRTID'</Data>'
            '\x0d\x0a  <Data Name="RemoteUserID">'RemoteUserID'</Data>'
            '\x0d\x0a  <Data Name="RemoteMachineID">'RemoteMachineID'</Data>'*
        | project-away EventData;
    union SecurityEvent_5152, SecurityEvent_5156_5157, SecurityEvent_5154_5155_5158_5159
        | lookup Directions on DirectionCode
        | project-rename DvcHostname = Computer
        | extend
            SrcAppName = iff(isOutBound, Application, ""),
            DstAppName = iff(not(isOutBound), Application, ""),
            SrcDvcId = iff(isOutBound, RemoteMachineID, ""),
            DstDvcId = iff(not(isOutBound), RemoteMachineID, ""),
            SrcProcessId =  iff(isOutBound, tostring(ProcessId), ""),
            DstProcessId =  iff(not(isOutBound), tostring(ProcessId), ""),
            DstUserId = iff(isOutBound, RemoteUserID, ""),
            SrcUserId = iff(not(isOutBound), RemoteUserID, ""),
            DstHostname = iff(isOutBound, "", DvcHostname),
            SrcHostname = iff(isOutBound, DvcHostname, "")
        | project-away Application, RemoteMachineID, RemoteUserID, ProcessId
  };
  WindowsFirewall_SecurityEvent 
       | extend 
              DvcAction = iff(EventID in (5154, 5156, 5158), "Allow", "Deny"),
              DvcOs = 'Windows',
              DstAppType = "Process",
              SrcUserIdType = iff (SrcUserId <> "S-1-0-0", "SID", ""),
              SrcUserId = iff (SrcUserId <> "S-1-0-0", SrcUserId, ""),
              DstUserIdType = iff (DstUserId <> "S-1-0-0", "SID", ""),
              DstUserId = iff (DstUserId <> "S-1-0-0", DstUserId, ""),
              SrcAppType = "Process",
              EventType = "NetworkSession",
              EventSchema = "NetworkSession",
              EventSchemaVersion="0.2.0",
              EventCount=toint(1),
              EventVendor = "Microsoft",
              EventProduct = "Windows Firewall",
              EventResult = iff(EventID in (5154, 5156, 5158), "Success", "Failure"),
              EventStartTime = TimeGenerated,
              EventEndTime = TimeGenerated,
              EventSeverity = iff(EventID  in (5154, 5156, 5158), "Informational", "Low"),
              EventOriginalType = tostring(EventID),
              DstDvcIdType = iff (DstDvcId != "", "SID", ""),
              SrcDvcIdType = iff (SrcDvcId != "", "SID", "")
     // aliases
      | extend
              Dvc = DvcHostname,
              Hostname = DstHostname,
              IpAddr = SrcIpAddr,
              Src = SrcIpAddr,
              Dst = DstIpAddr,
              Rule = tostring (NetworkRuleNumber)
      | lookup LayerCodeTable on LayerCode
      | lookup ProtocolTable on Protocol
      | project-away LayerCode, DirectionCode, Protocol, isOutBound, LayerName, EventID, LayerRTID,_ResourceId,_SubscriptionId
      };
      parser(disabled=disabled)