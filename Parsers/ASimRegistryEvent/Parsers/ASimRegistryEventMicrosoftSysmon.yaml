Parser:
    Title: Registry Event ASIM parser for Microsoft Sysmon (registry creation event)
    Version: "0.3.1"
    LastUpdated: Jun 18, 2024
Product:
    Name: Microsoft Sysmon
Normalization:
    Schema: RegistryEvent
    Version: "0.1.2"
References:
    - Title: ASIM Registry Schema
      Link: https://aka.ms/ASimRegistryEventDoc
    - Title: ASIM
      Link: https://aka.ms/AboutASIM
Description: |
    This ASIM parser supports normalizing Microsoft Sysmon events (event number 12, 13, 14) logs ingested in 'Event' table to the ASIM Registry Event normalized schema.
ParserName: ASimRegistryEventMicrosoftSysmon
EquivalentBuiltInParser: _ASim_RegistryEvent_MicrosoftSysmon
ParserParams:
    - Name: disabled
      Type: bool
      Default: false
ParserQuery: |
    let parser = (
      disabled: bool=false
      ) {
      let RegistryAction = datatable (EventType: string, NewEventType: string)
          [
      "CreateKey", "RegistryKeyCreated",
      "DeleteKey", "RegistryKeyDeleted",
      "DeleteValue", "RegistryValueDeleted", 
      "SetValue", "RegistryValueSet",
      "RenameKey", "RegistryKeyRenamed"
      ];     
          let Hives = datatable (KeyPrefix: string, Hive: string)
              [
          "HKLM", "HKEY_LOCAL_MACHINE",
          "HKU", "HKEY_USERS", 
          "HKCR", "HKEY_LOCAL_MACHINE\\Classes" 
      ];
          // this is the parser for sysmon from Event table
          // Create the raw table from the raw XML file structure
          let ParsedRegistryEvent_Event=() {
          Event
              | where not(disabled)
              | where Source == "Microsoft-Windows-Sysmon" and EventID in (12, 13, 14)
              | parse EventData with 
                  * '<Data Name="RuleName">'RuleName // parsing the XML using the original fields name - for readibliy 
                  '</Data><Data Name="EventType">'EventType
                  '</Data><Data Name="UtcTime">'UtcTime
                  '</Data><Data Name="ProcessGuid">{'ProcessGuid
                  '}</Data><Data Name="ProcessId">'ProcessId
                  '</Data><Data Name="Image">'Image
                  '</Data><Data Name="TargetObject">'TargetObject
                  '</Data>' EventDataRemainder 
              | parse EventDataRemainder with '<Data Name="Details">' Parameter '</Data><Data Name="User">' ActorUsername '</Data>' *
              | project-away EventDataRemainder
              // End of XML parse
              | extend 
                  EventStartTime = todatetime(TimeGenerated), 
                  EventEndTime = todatetime(TimeGenerated), 
                  EventCount = int(1), 
                  EventVendor = "Microsoft",
                  EventSchemaVersion = "0.1.0", 
                  EventProduct = "Sysmon",
                  EventOriginalType = tostring(EventID), 
                  DvcOs = "Windows",
                  ActorUsernameType = iff(isnotempty(ActorUsername), 'Windows', '')
              | project-rename 
                  EventMessage = RenderedDescription, 
                  DvcHostName = Computer, 
                  ActingProcessId = ProcessId,
                  ActingProcessGuid = ProcessGuid, 
                  ActingProcessName = Image 
              // Lookup Event Type
              | lookup RegistryAction on EventType 
              | project-rename EventOriginalSubType = EventType
              | project-rename EventType = NewEventType
              // Normalize Key Hive
              | parse TargetObject with KeyPrefix "\\" KeyMain
              | lookup Hives on KeyPrefix
              | extend Key = strcat (Hive, "\\", KeyMain)
              | parse Parameter with KeyPrefix "\\" KeyMain
              | lookup Hives on KeyPrefix
              | extend NewName = strcat (Hive, "\\", KeyMain)
              | project-away KeyPrefix, KeyMain, Hive
              // Split Key and Value for relevant events 
              | extend ParsedKey = extract_all (@"^(.+)\\(.+)$", Key)
              | extend Key = iff (EventType in ("RegistryValueSet", "RegistryValueDeleted"), ParsedKey[0][0], Key)
              | extend Value = iff (EventType in ("RegistryValueSet", "RegistryValueDeleted"), ParsedKey[0][1], "")
              | extend ParsedKey = extract_all (@"^(.+)\\(.+)$", NewName)
              | extend NewKey = ParsedKey[0][0]
              | extend NewValue = ParsedKey[0][1]
              | project-away ParsedKey, TargetObject, NewName
              // Set normalized registry fields
              | extend
                  RegistryKey = iff (EventType == "RegistryKeyRenamed", NewKey, Key),
                  RegistryKeyModified = iff (EventType in ("RegistryKeyRenamed", "RegistryValueSet"), Key, ""),
                  RegistryValue = iff (EventType in ("RegistryValueSet", "RegistryValueDeleted"), Value, ""),
                  RegistryValueModified = iff (EventType == "RegistryValueSet", Value, ""),
                  RegistryValueData = iff (EventType == "RegistryValueSet", Parameter, ""),
                  EventResult = "Success",
                  EventSchema = "RegistryEvent",
                  Rule=RuleName
              | extend // aliases
                  User = ActorUsername,
                  Process = ActingProcessName,
                  Dvc = DvcHostName
              | project-away
                  Parameter,
                  Value,
                  Key,
                  NewKey,
                  NewValue,
                  EventData,
                  ParameterXml,
                  DvcHostName,
                  EventCategory,
                  EventID,
                  EventLevelName,
                  EventLevel,
                  EventLog,
                  Hive1,
                  MG,
                  AzureDeploymentID,
                  RegistryKeyModified,
                  RegistryValueModified,
                  Role,
                  SourceSystem,
                  Source,
                  TenantId,
                  UserName,
                  UtcTime,
                  ManagementGroupName,
                  Message,_ResourceId
      };
          ParsedRegistryEvent_Event
      };
      parser (
          disabled                 = disabled
      )