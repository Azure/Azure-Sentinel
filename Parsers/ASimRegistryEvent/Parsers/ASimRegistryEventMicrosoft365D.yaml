Parser:
  Title: Registry Event ASIM parser for Microsoft 365 Defender for Endpoint
  Version: "0.1.2"
  LastUpdated: Oct 10, 2023
Product:
  Name: Microsoft 365 Defender for Endpoint
Normalization:
  Schema: RegistryEvent
  Version: "0.1.0"
References:
  - Title: ASIM Registry Schema
    Link: https://aka.ms/ASimRegistryEventDoc
  - Title: ASIM
    Link: https:/aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Microsoft 365 Defender for endpoint logs, produced by the Microsoft Sentinel Microsoft 365 Defender connector, to the ASIM Registry Event normalized schema.
ParserName: ASimRegistryEventMicrosoft365D
EquivalentBuiltInParser: _ASim_RegistryEvent_Microsoft365D
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let RegistryType = datatable (TypeCode: string, TypeName: string)
    [
    "None", "Reg_None",
    "String", "Reg_Sz",
    "ExpandString", "Reg_Expand_Sz",
    "Binary", "Reg_Binary",
    "Dword", "Reg_DWord",
    "MultiString", "Reg_Multi_Sz",
    "QWord", "Reg_QWord"
  ];
  let parser = (
      disabled: bool=false
      ) {
      DeviceRegistryEvents
      | where not(disabled)
      | extend
          // Event
          EventOriginalUid = tostring(ReportId), 
          EventCount = int(1), 
          EventProduct = 'M365 Defender for Endpoint', 
          EventVendor = 'Microsoft', 
          EventSchemaVersion = '0.1.0', 
          EventStartTime = TimeGenerated, 
          EventEndTime = TimeGenerated, 
          EventType = ActionType,
          // Registry
          RegistryKey = iff (ActionType in ("RegistryKeyDeleted", "RegistryValueDeleted"), PreviousRegistryKey, RegistryKey),
          RegistryValue = iff (ActionType == "RegistryValueDeleted", PreviousRegistryValueName, RegistryValueName),
          // RegistryValueType -- original name is fine 
          // RegistryValueData -- original name is fine 
          RegistryKeyModified = iff (ActionType == "RegistryKeyRenamed", PreviousRegistryKey, ""),
          RegistryValueModified = iff (ActionType == "RegistryValueSet", PreviousRegistryValueName, ""),
          // RegistryValueTypeModified -- Not provided by Defender
          RegistryValueDataModified = PreviousRegistryValueData
      | lookup RegistryType on $left.RegistryValueType == $right.TypeCode
      | extend RegistryValueType = TypeName
      | project-away
          TypeName,
          PreviousRegistryKey,
          PreviousRegistryValueName,
          PreviousRegistryValueData
      // Device
      | extend
          DvcHostname = DeviceName, 
          DvcId = DeviceId, 
          Dvc = DeviceName 
      // Users
      | extend
          ActorUsername = iff (InitiatingProcessAccountDomain == '', InitiatingProcessAccountName, strcat(InitiatingProcessAccountDomain, '\\', InitiatingProcessAccountName)), 
          ActorUsernameType = iff(InitiatingProcessAccountDomain == '', 'Simple', 'Windows'), 
          ActorUserIdType = 'SID'
      //| project-away InitiatingProcessAccountDomain, InitiatingProcessAccountName
      | project-rename
          ActorUserId = InitiatingProcessAccountSid, 
          ActorUserAadId = InitiatingProcessAccountObjectId, 
          ActorUserUpn = InitiatingProcessAccountUpn
      // Processes
      | extend
          ActingProcessId = tostring(InitiatingProcessId), 
          ParentProcessId = tostring(InitiatingProcessParentId) 
      | project-away InitiatingProcessId, InitiatingProcessParentId
      | project-rename
          ParentProcessName = InitiatingProcessParentFileName, 
          ParentProcessCreationTime = InitiatingProcessParentCreationTime, 
          ActingProcessName = InitiatingProcessFolderPath, 
          ActingProcessFileName = InitiatingProcessFileName,
          ActingProcessCommandLine = InitiatingProcessCommandLine, 
          ActingProcessMD5 = InitiatingProcessMD5, 
          ActingProcessSHA1 = InitiatingProcessSHA1, //OK
          ActingProcessSHA256 = InitiatingProcessSHA256, 
          ActingProcessIntegrityLevel = InitiatingProcessIntegrityLevel, 
          ActingProcessTokenElevation = InitiatingProcessTokenElevation, 
          ActingProcessCreationTime = InitiatingProcessCreationTime 
      // -- aliases
      | extend 
          Username = ActorUsername,
          UserId = ActorUserId,
          UserIdType = ActorUserIdType,
          User = ActorUsername,
          CommandLine = ActingProcessCommandLine,
          Process = ActingProcessName
  };
  parser (
      disabled = disabled
  )