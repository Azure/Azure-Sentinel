{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimRegistryEventVMwareCarbonBlackCloud')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Registry Event ASIM Parser for VMware Carbon Black Cloud",
        "category": "ASIM",
        "FunctionAlias": "ASimRegistryEventVMwareCarbonBlackCloud",
        "query": "let EventTypeLookup = datatable (temp_action: string, EventType: string)\n[\n    \"ACTION_WRITE_VALUE\", \"RegistryValueSet\",\n    \"ACTION_CREATE_KEY\", \"RegistryKeyCreated\",\n    \"ACTION_DELETE_KEY\", \"RegistryKeyDeleted\",\n    \"ACTION_DELETE_VALUE\", \"RegistryValueDeleted\",\n    \"ACTION_RENAME_KEY\", \"RegistryKeyRenamed\"\n];\nlet RegistryKeyPrefixLookup = datatable(\n    RegistryKeyPrefix: string,\n    RegistryKeyNormalizedPrefix: string\n)[\n    \"HKLM\", \"HKEY_LOCAL_MACHINE\",\n    \"HKU\", \"HKEY_USERS\",\n    \"HKCU\", \"HKEY_CURRENT_USER\",\n    \"HKCR\", \"HKEY_CLASSES_ROOT\",\n    \"HKCC\", \"HKEY_CURRENT_CONFIG\"\n];\nlet actionvalues = dynamic([\"ACTION_WRITE_VALUE\", \"ACTION_CREATE_KEY\", \"ACTION_DELETE_KEY\", \"ACTION_DELETE_VALUE\", \"ACTION_RENAME_KEY\"]);\nlet parser=(disabled: bool=false) {\n    CarbonBlackEvents_CL\n    | where not(disabled)\n    | where eventType_s == \"endpoint.event.regmod\"\n        and isnotempty(regmod_name_s)\n    | extend\n        temp_action = case(\n                          action_s has \"|\" and action_s has \"delete\",\n                          \"ACTION_DELETE_KEY\",\n                          action_s has \"|\" and action_s !has \"delete\",\n                          \"ACTION_CREATE_KEY\",\n                          action_s\n                      ),\n        RegistryKeyPrefix = tostring(split(regmod_name_s, @'\\')[0])\n    | where temp_action in (actionvalues)\n    | lookup EventTypeLookup on temp_action\n    | lookup RegistryKeyPrefixLookup on RegistryKeyPrefix\n    | extend\n        RegistryKey = replace_string(regmod_name_s, RegistryKeyPrefix, RegistryKeyNormalizedPrefix),\n        ActingProcessId = tostring(toint(process_pid_d)),\n        EventStartTime = todatetime(split(createTime_s, '+')[0]),\n        ParentProcessId = tostring(toint(parent_pid_d)),\n        AdditionalFields = bag_pack(\n                      \"process_guid\", process_guid_s,\n                      \"parent_guid\", parent_guid_s \n                  )\n    | project-rename\n        ActorUsername = process_username_s,\n        DvcIpAddr = device_external_ip_s,\n        DvcScope = device_group_s,\n        EventUid = _ItemId,\n        ActingProcessName = process_path_s,\n        DvcId = device_id_s,\n        DvcOs = device_os_s,\n        EventMessage = event_description_s,\n        EventOriginalType = action_s,\n        EventOriginalUid = event_id_g,\n        EventOwner = event_origin_s,\n        ParentProcessName = processDetails_parentName_s,\n        ActorScopeId = org_key_s\n    | invoke _ASIM_ResolveDvcFQDN('device_name_s')\n    | extend\n        EventCount = toint(1),\n        EventProduct = \"Carbon Black Cloud\",\n        EventVendor = \"VMware\",\n        EventResult = \"Success\",\n        DvcAction = \"Allowed\",\n        EventSchema = \"RegistryEvent\",\n        EventSchemaVersion = \"0.1.2\"\n    | extend\n        Dvc = coalesce(DvcFQDN, DvcId, DvcHostname, DvcIpAddr),\n        DvcIdType = iff(isnotempty(DvcId), \"Other\", \"\"),\n        EventEndTime = EventStartTime,\n        Process = ActingProcessName,\n        User = ActorUsername,\n        ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),\n        ActorUserType = _ASIM_GetUserType(ActorUsername, \"\")\n    | project-away\n        *_d,\n        *_s,\n        *_g,\n        *_b,\n        temp_action,\n        _ResourceId,\n        Computer,\n        MG,\n        ManagementGroupName,\n        RawData,\n        SourceSystem,\n        TenantId,\n        RegistryKeyPrefix,\n        RegistryKeyNormalizedPrefix\n};\nparser(disabled = disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
