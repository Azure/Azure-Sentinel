Parser:
  Title: Process Terminate ASIM parser for VMware Carbon Black Cloud
  Version: '0.1.0'
  LastUpdated: Oct 03, 2023
Product:
  Name: VMware Carbon Black Cloud
Normalization:
  Schema: ProcessEvent
  Version: '0.1.4'
References:
- Title: ASIM Process Schema
  Link: https://aka.ms/ASimProcessEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
- Title: VMware Carbon Black Cloud documentation
  Link: 
    https://developer.carbonblack.com/reference/carbon-black-cloud/data-forwarder/schema/latest/endpoint.event-1.0.0/
    https://developer.carbonblack.com/reference/cb-threathunter/latest/event-search-fields/
Description: |
  This ASIM parser supports normalizing VMware Carbon Black Cloud logs to the ASIM Process Terminate normalized schema. VMware Carbon Black Cloud events are captured through VMware Carbon Black Cloud data connector which ingests Carbon Black Audit, Notification and Event data into Microsoft Sentinel through the REST API.
ParserName: ASimProcessTerminateVMwareCarbonBlackCloud
EquivalentBuiltInParser: ASim_ProcessEvent_TerminateVMwareCarbonBlackCloud
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let EventFieldsLookup = datatable(
    sensor_action_s: string,
    DvcAction: string,
    EventResult: string
  )[
      "ACTION_ALLOW", "Allow", "Success",
      "ACTION_BLOCK", "Block", "Failure",
      "ACTION_TERMINATE", "Terminate", "Failure",
      "ACTION_BREAK", "Break", "Failure",
      "ACTION_SUSPEND", "Suspend", "Failure",
      "", "", "Success"
  ];
  let parser = (disabled: bool=false) {
      CarbonBlackEvents_CL
      | where not(disabled)
      | where eventType_s == "endpoint.event.procend" and isnotempty(process_pid_d)
      | parse process_hash_s with * '["' TargetProcessMD5: string '","' TargetProcessSHA256: string '"]'
      | parse parent_hash_s with * '["' ActingProcessMD5: string  '","' ActingProcessSHA256: string '"]'
      | lookup EventFieldsLookup on sensor_action_s
      | extend
          EventStartTime = todatetime(split(createTime_s, '+')[0]),
          TargetProcessId = tostring(toint(process_pid_d)),
          ActingProcessId = tostring(toint(parent_pid_d)),
          ActorUsername = process_username_s,
          TargetProcessCommandLine = coalesce(target_cmdline_s, process_cmdline_s),
          AdditionalFields = bag_pack(
                      "org_key", org_key_s,
                      "alert_id", alert_id_g,
                      "process_reputation", process_reputation_s,
                      "parent_reputation", parent_reputation_s,
                      "parent_guid", parent_guid_s,
                      "process_guid", process_guid_s
                  )
      | invoke _ASIM_ResolveDvcFQDN('device_name_s')
      | project-rename 
          TargetProcessName = process_path_s,
          DvcIpAddr = device_external_ip_s,
          DvcScope = device_group_s,
          ActingProcessCommandLine = parent_cmdline_s,
          DvcId = device_id_s,
          DvcOriginalAction = sensor_action_s,
          DvcOs = device_os_s,
          EventOriginalType = action_s,
          EventOriginalUid = event_id_g,
          EventOwner = event_origin_s,
          ActingProcessName = parent_path_s,
          EventUid = _ItemId
      | extend
          EventCount = int(1),
          EventProduct = "Carbon Black Cloud",
          EventSchemaVersion = "0.1.4",
          EventType = "ProcessTerminated",
          EventVendor = "VMware",
          EventSchema = "ProcessEvent"
      | extend 
          Dvc = coalesce(DvcFQDN, DvcId, DvcHostname, DvcIpAddr),
          EventEndTime = EventStartTime,
          Hash = coalesce(TargetProcessSHA256, TargetProcessMD5),
          CommandLine = TargetProcessCommandLine,
          Process = TargetProcessName,
          User = ActorUsername,
          DvcIdType = iff(isnotempty(DvcId), "Other", ""),
          ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),
          ActorUserType = _ASIM_GetUserType(ActorUsername, ""),
          HashType = case(
                isnotempty(TargetProcessSHA256),
                "TargetProcessSHA256",
                isnotempty(TargetProcessMD5),
                "TargetProcessMD5",
                ""
            )
      | project-away
          *_s,
          *_d,
          *_g,
          *_b,
          _ResourceId,
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId
  };
  parser(disabled=disabled)