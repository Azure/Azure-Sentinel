{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimProcessEventCreateMicrosoftSysmonWindowsEvent')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Process Create Event ASIM parser for Sysmon",
        "category": "ASIM",
        "FunctionAlias": "ASimProcessEventCreateMicrosoftSysmonWindowsEvent",
        "query": "let parser = (disabled: bool = false) {\n    // this is the parser for sysmon from WindowsEvent table\n    let parser_WindowsEvent=\n      WindowsEvent\n      | where not(disabled)\n      | where Provider == \"Microsoft-Windows-Sysmon\" and EventID == 1\n      | parse-kv tostring(EventData.Hashes) as (MD5: string, SHA1: string, SHA256: string, IMPHASH: string) with (quote='\"')\n      | extend\n          Hash = coalesce (SHA256, SHA1, IMPHASH, MD5, \"\")\n      | extend\n          HashType = tostring(dynamic([\"SHA256\", \"SHA1\", \"IMPHASH\", \"MD5\"])[array_index_of(pack_array(SHA256, SHA1, IMPHASH, MD5), Hash)])\n      | project-rename\n          TargetProcessMD5 = MD5,\n          TargetProcessSHA1 = SHA1,\n          TargetProcessSHA256 = SHA256,\n          TargetProcessIMPHASH = IMPHASH\n      | extend \n          EventOriginalType = tostring(EventID),\n          TargetUserSessionId = tostring(EventData.LogonId),           \n          TargetUsername = tostring(EventData.User),\n          TargetProcessCommandLine = tostring(EventData.CommandLine),\n          TargetProcessCurrentDirectory = tostring(EventData.CurrentDirectory),\n          TargetUserSessionGuid = extract ('^{(.*)}$', 1, tostring(EventData.LogonGuid), typeof(string)),\n          TargetProcessId = tostring(EventData.ProcessId),\n          TargetProcessGuid = extract ('^{(.*)}$', 1, tostring(EventData.ProcessGuid), typeof(string)),\n          TargetProcessName = tostring(EventData.Image),\n          TargetProcessFilename = tostring(EventData.OriginalFileName),\n          TargetProcessIntegrityLevel = tostring(EventData.IntegrityLevel),\n          TargetProcessFileCompany = tostring(EventData.Company),\n          TargetProcessFileDescription = tostring(EventData.Description),\n          TargetProcessFileVersion = tostring(EventData.FileVersion),\n          TargetProcessFileProduct = tostring(EventData.Product),\n          ActingProcessId = tostring(EventData.ParentProcessId),  \n          ActingProcessGuid = extract ('^{(.*)}$', 1, tostring(EventData.ParentProcessGuid), typeof(string)),                 \n          ActingProcessCommandLine = tostring(EventData.ParentCommandLine),\n          ActingProcessName = tostring(EventData.ParentImage),\n          ActorUsername = tostring(EventData.ParentUser)\n      | extend \n          TargetUsernameType = iff(isnotempty(TargetUsername), 'Windows', ''),\n          ActorUsernameType = iff(isnotempty(ActorUsername), 'Windows', ''),\n          EventProduct = \"Security Events\"\n      | project-rename\n          DvcHostname = Computer,\n          EventOriginalUid = EventOriginId\n      | extend // aliases \n          Dvc = DvcHostname,\n          User = TargetUsername,\n          CommandLine = TargetProcessCommandLine,\n          Process = TargetProcessName,\n          EventUid = _ItemId\n      | project-away\n          EventData,\n          Provider,\n          ManagementGroupName,\n          RawEventData,\n          SourceSystem,\n          Task,\n          TenantId,\n          EventID,\n          Data,\n          Channel,\n          EventLevel,\n          EventLevelName,\n          Correlation,\n          EventRecordId,\n          Keywords,\n          Opcode,\n          SystemProcessId,\n          SystemThreadId,\n          SystemUserId,\n          TimeCreated,\n          Version,\n          _ResourceId,\n          _ItemId\n      | extend \n          EventType = \"ProcessCreated\",\n          EventOriginalType = \"1\",\n          EventStartTime = todatetime(TimeGenerated),\n          EventEndTime = todatetime(TimeGenerated),\n          EventCount = int(1),\n          EventVendor = \"Microsoft\",\n          EventSchemaVersion = \"0.1.0\",\n          EventSchema = 'ProcessEvent',\n          EventProduct = \"Sysmon\",\n          EventResult = 'Success',\n          DvcOs = \"Windows\",\n          TargetUsernameType = \"Windows\",\n          ActorUsernameType = \"Windows\";\n    parser_WindowsEvent\n};\nparser (disabled=disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
