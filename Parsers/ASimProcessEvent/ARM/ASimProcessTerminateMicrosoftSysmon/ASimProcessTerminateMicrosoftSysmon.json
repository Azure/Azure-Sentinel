{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimProcessEventTerminateMicrosoftSysmon')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Process Terminate Event ASIM parser for Microsoft Windows Security Events",
        "category": "ASIM",
        "FunctionAlias": "ASimProcessEventTerminateMicrosoftSysmon",
        "query": "let parser = (disabled: bool = false) {\n// this is the parser for sysmon from Event table\nlet parser_Event =\n    Event \n    | where not(disabled)\n    | where Source == \"Microsoft-Windows-Sysmon\" and EventID == 5\n    | parse-kv EventData as (\n        ProcessId: string,\n        ProcessGuid: string,\n        Image: string,\n        User: string\n        ) \n        with (regex=@'<Data Name=\"(\\w+)\">{?([^<]*?)}?</Data>')\n    | project-rename\n        ActorUsername = User,\n        DvcHostname = Computer,\n        TargetProcessName = Image,\n        TargetProcessGuid = ProcessGuid,\n        TargetProcessId = ProcessId\n    | extend \n        EventProduct = \"Sysmon\"\n    | project-away\n        EventData,\n        ParameterXml,\n        RenderedDescription,\n        MG,\n        ManagementGroupName,\n        Message,\n        AzureDeploymentID,\n        SourceSystem,\n        EventCategory,\n        EventLevelName,\n        EventLevel,\n        EventLog,\n        Role,\n        TenantId,\n        UserName,\n        Source,\n        _ResourceId\n    | extend  \n        EventType = \"ProcessTerminated\",\n        EventStartTime = todatetime(TimeGenerated),\n        EventEndTime = todatetime(TimeGenerated),\n        EventCount = int(1),\n        EventVendor = \"Microsoft\",\n        EventSchemaVersion = \"0.1.0\",\n        EventSchema = 'ProcessEvent',\n        EventOriginalType=tostring(EventID),\n        EventResult = 'Success',\n        DvcOs = \"Windows\",\n        ActorUsernameType = iff(isnotempty(ActorUsername), 'Windows', ''),\n        // -- Aliases \n        User = ActorUsername,\n        Process = TargetProcessName,\n        Dvc = DvcHostname\n    | project-away EventID\n;\nparser_Event\n};\nparser (disabled = disabled)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
