Parser:
  Title: File Event Parser for VMware Carbon Black Cloud
  Version: '0.1.1'
  LastUpdated: Oct 10, 2023
Product:
  Name: VMware Carbon Black Cloud
Normalization:
  Schema: FileEvent
  Version: '0.2.1'
References:
- Title: ASIM File Event Schema
  Link: https://aka.ms/ASimFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
- Title: VMware Carbon Black Cloud documentation
  Link: 
    https://developer.carbonblack.com/reference/carbon-black-cloud/data-forwarder/schema/latest/endpoint.event-1.0.0/
    https://developer.carbonblack.com/reference/cb-threathunter/latest/event-search-fields/
Description: |
  This ASIM parser supports normalizing VMware Carbon Black Cloud logs to the ASIM File Event normalized schema. VMware Carbon Black Cloud events are captured through VMware Carbon Black Cloud data connector which ingests Carbon Black Audit, Notification and Event data into Microsoft Sentinel through the REST API.
ParserName: ASimFileEventVMwareCarbonBlackCloud
EquivalentBuiltInParser: _ASim_FileEvent_VMwareCarbonBlackCloud
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let EventFieldsLookup = datatable(
      sensor_action_s: string,
      DvcAction: string,
      EventResult: string
  )[
      "ACTION_ALLOW", "Allow", "Success",
      "ACTION_BLOCK", "Block", "Failure",
      "ACTION_TERMINATE", "Terminate", "Failure",
      "ACTION_BREAK", "Break", "Failure",
      "ACTION_SUSPEND", "Suspend", "Failure",
      "", "", "Success"
  ];
  let EventTypeLookup = datatable(action_s: string, EventType: string)[
      "ACTION_FILE_CREATE", "FileCreated",
      "ACTION_FILE_DELETE", "FileDeleted",
      "ACTION_FILE_LAST_WRITE", "FileModified",
      "ACTION_FILE_LINK", "FileModified",
      "ACTION_FILE_READ", "FileAccessed",
      "ACTION_FILE_RENAME", "FileRenamed",
      "ACTION_FILE_WRITE", "FileModified",
      "ACTION_FILE_OPEN_DELETE", "FileDeleted",
      "ACTION_FILE_OPEN_EXECUTE", "FileAccessed",
      "ACTION_FILE_OPEN_SET_ATTRIBUTES", "FileAttributesUpdated",
      "ACTION_FILE_OPEN_SET_SECURITY", "FileAttributesUpdated",
      "ACTION_FILE_SET_SECURITY", "FileAttributesUpdated",
      "ACTION_FILE_TRUNCATE", "FileModified",
      "ACTION_FILE_OPEN_WRITE", "FileModified",
      "ACTION_FILE_MOD_OPEN", "FileAccessed",
      "ACTION_FILE_OPEN_READ", "FileAccessed"
  ];
  let parser = (disabled: bool=false) {
      CarbonBlackEvents_CL
      | where not(disabled)
      | where eventType_s == "endpoint.event.filemod" and isnotempty(filemod_name_s)
      | where action_s !in ("ACTION_INVALID", "ACTION_FILE_UNDELETE")
      | parse filemod_hash_s with * '["' TargetFileMD5: string '","' TargetFileSHA256: string '"]'
      | lookup EventFieldsLookup on sensor_action_s
      | extend temp_action = iff(action_s has "|", action_s, "")
      | lookup EventTypeLookup on action_s
      | extend EventType = case(
                          isnotempty(EventType), EventType,
                          temp_action has "delete", "FileDeleted",
                          temp_action has "link", "FileModified",
                          temp_action has "rename", "FileRenamed",
                          temp_action has "execute", "FileAccessed",
                          temp_action has_any ("attributes", "security"), "FileAttributesUpdated",
                          temp_action has "truncate", "FileModified",
                          temp_action has "write", "FileModified",
                          temp_action has_any ("read", "open"), "FileAccessed",
                          temp_action has "create", "FileCreated",
                          ""
                      )
      | extend
          EventStartTime = todatetime(split(createTime_s, '+')[0]),
          TargetFilePathType = case(
                          device_os_s == "WINDOWS" and filemod_name_s startswith "\\", "Windows Share",
                          device_os_s == "WINDOWS", "Windows Local",
                          device_os_s in ("MAC", "LINUX"), "Unix",
                          ""
                      ),
          ActingProcessId = tostring(toint(process_pid_d)),
          TargetFileName = tostring(split(filemod_name_s, '\\')[-1]),
          AdditionalFields = bag_pack(
                        "org_key", org_key_s,
                        "process_publisher", process_publisher_s,
                        "process_reputation", process_reputation_s,
                        "process_guid", process_guid_s
                    )
      | invoke _ASIM_ResolveDvcFQDN('device_name_s')
      | project-rename
          ActorUsername = process_username_s,
          DvcIpAddr = device_external_ip_s,
          EventUid = _ItemId,
          DvcScope = device_group_s,
          ActingProcessCommandLine = process_cmdline_s,
          ActingProcessName = process_path_s,
          DvcId = device_id_s,
          DvcOriginalAction = sensor_action_s,
          DvcOs = device_os_s,
          EventMessage = event_description_s,
          EventOriginalType = action_s,
          EventOriginalUid = event_id_g,
          EventOwner = event_origin_s,
          TargetFilePath = filemod_name_s
      | extend 
          EventProduct = "Carbon Black Cloud",
          EventSchema = "FileEvent",
          EventSchemaVersion = "0.2.1",
          EventVendor = "VMware",
          EventCount = int(1),
          SrcIpAddr = DvcIpAddr
      | extend
          EventEndTime = EventStartTime,
          IpAddr = SrcIpAddr,
          Src = SrcIpAddr,
          Dvc = coalesce(DvcFQDN, DvcId, DvcHostname, DvcIpAddr),
          FileName = TargetFileName,
          FilePath = TargetFilePath,
          Process = ActingProcessName,
          User = ActorUsername,
          Hash = coalesce(TargetFileSHA256, TargetFileMD5)
      | extend
          ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),
          ActorUserType = _ASIM_GetUserType(ActorUsername, ""),
          DvcIdType = iff(isnotempty(DvcId), "Other", ""),
          HashType = case(
                isnotempty(TargetFileSHA256),
                "TargetFileSHA256",
                isnotempty(TargetFileMD5),
                "TargetFileMD5",
                ""
            )
      | project-away
          *_s,
          *_d,
          *_g,
          *_b,
          _ResourceId,
          Computer,
          MG,
          ManagementGroupName,
          RawData,
          SourceSystem,
          TenantId,
          temp_action
  };
  parser(disabled=disabled)