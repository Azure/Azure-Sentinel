Parser:
  Title: File event ASIM parser for Windows Sysmon
  Version: '0.4.1'
  LastUpdated: Jul 19, 2024
Product:
  Name: Windows Sysmon
Normalization:
  Schema: FileEvent
  Version: '0.2.1'
References:
- Title: ASIM File Event Schema
  Link: https://aka.ms/ASimFileEventDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: 
  This ASIM parser supports normalizing Sysmon logs ingested in 'WindowsEvent' table to the ASIM file event schema.
ParserName: ASimFileEventMicrosoftSysmonWindowsEvent
EquivalentBuiltInParser: _ASim_FileEvent_MicrosoftSysmonWindowsEvent
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
   let parser = (disabled:bool=false) {
       //
       // -- WindowsEvent parser
       let WindowsEventParser=(){
         WindowsEvent 
         | where not(disabled)
         | project EventID, EventData, Computer, TimeGenerated, _ResourceId, _SubscriptionId, Provider, Type , _ItemId 
         | where Provider == "Microsoft-Windows-Sysmon" and EventID in (11,23,26)
         | project-away Provider
         | extend 
             TargetFileCreationTime=todatetime(EventData.CreationUtcTime),
             TargetFilePath=tostring(EventData.TargetFilename),
             ActingProcessName = tostring(EventData.Image),
             ActingProcessId = tostring(EventData.ProcessId),
             ActingProcessGuid = tostring(EventData.ProcessGuid),
             ActorUsername = tostring(EventData.User),
             EventStartTime = todatetime(EventData.UtcTime),
             RuleName = tostring(EventData.RuleName),
             Hashes = tostring(EventData.Hashes)
          | parse ActingProcessGuid with "{" ActingProcessGuid "}"
          | project-away EventData
       };
       WindowsEventParser
       | project-rename
           DvcHostname = Computer,
           DvcScopeId = _SubscriptionId,
           DvcId = _ResourceId
       | extend
           EventType=iff (EventID == 11, 'FileCreated', 'FileDeleted'),
           EventProduct = 'Sysmon',
           EventVendor = 'Microsoft',
           EventSchema = 'FileEvent',
           EventSchemaVersion = '0.2.1',
           EventResult = 'Success',
           EventSeverity = 'Informational',
           DvcOs='Windows',
           TargetFilePathType = 'Windows',
           DvcIdType = iff (DvcId != "", "AzureResourceId", ""),
           EventCount = int(1),
           EventEndTime = EventStartTime,
           EventOriginalType = tostring(EventID),
           TargetFileName = tostring(split(TargetFilePath,'\\')[-1]),
           ActorUsernameType = iff(isnotempty(ActorUsername),'Windows', ''),
           RuleName = iff (RuleName == "-", "", RuleName),
           EventUid = _ItemId
        | parse-kv Hashes as (
            MD5:string,
            SHA1:string,
            IMPHASH:string,
            SHA256:string
        )
        | project-rename
            TargetFileMD5 = MD5,
            TargetFileSHA1 = SHA1,
            TargetFileIMPHASH = IMPHASH,
            TargetFileSHA256 = SHA256
        | extend
           Hash=coalesce(TargetFileSHA256, TargetFileSHA1, TargetFileMD5, TargetFileIMPHASH)
        | extend
           HashType = tostring(dynamic(["SHA256", "SHA1", "MD5", "IMPHASH"])[array_index_of(pack_array(TargetFileSHA256, TargetFileSHA1, TargetFileMD5,TargetFileIMPHASH),Hash)])
        // -- Typed entity identifiers
        | extend
           ActorWindowsUsername = ActorUsername
        // -- Aliases
        | extend
           Process = ActingProcessName,
           Dvc = DvcHostname,
           FilePath = TargetFilePath,
           FileName = TargetFileName,
           User = ActorUsername
        | project-away EventID, Hashes,ActorWindowsUsername,TargetFileIMPHASH
    }; 
    parser(disabled=disabled)