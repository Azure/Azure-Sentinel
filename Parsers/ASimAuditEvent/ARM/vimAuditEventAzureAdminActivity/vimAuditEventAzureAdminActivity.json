{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/vimAuditEventAzureActivity')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "Audit Event ASIM filtering parser for Azure administrative activity",
        "category": "ASIM",
        "FunctionAlias": "vimAuditEventAzureActivity",
        "query": "let parser=  (\n          starttime:datetime=datetime(null), \n          endtime:datetime=datetime(null),\n          srcipaddr_has_any_prefix:dynamic=dynamic([]), \n          eventresult:string='*',\n          actorusername_has_any:dynamic=dynamic([]),\n          eventtype_in:dynamic=dynamic([]),\n          operation_has_any:dynamic=dynamic([]),\n          object_has_any:dynamic=dynamic([]),\n          newvalue_has_any:dynamic=dynamic([]),\n          disabled:bool = false\n  ){\n   let AzureActivityOperationLookup = datatable (op:string, EventType:string) \n  [\n    'ACTION', 'Execute',\n    'WRITE', 'Set',\n    'DELETE', 'Delete'\n  ];\n  let AzureActivityStatusLookup = datatable (ActivityStatusValue:string, ActivitySubstatusValue:string, EventResult:string, EventResultDetails:string) \n  [\n      \"Accept\",\"Accepted\",\"Success\",\"\",\n      \"Accept\",\"Created\",\"Success\",\"\",\n      \"Accept\",\"OK\",\"Success\",\"\",\n      \"Accept\",\"\",\"Success\",\"\",\n      \"Accepted\",\"\",\"Success\",\"\",\n      \"Active\",\"\",\"Success\",\"Active\",\n      \"Failed\",\"\",\"Failure\",\"\",\n      \"Failure\",\"BadRequest\",\"Failure\",\"Bad Request\",\n      \"Failure\",\"Conflict\",\"Failure\",\"Bad Request\",\n      \"Failure\",\"Forbidden\",\"Failure\",\"Unauthorized\",\n      \"Failure\",\"InternalServerError\",\"Failure\",\"Internal error\",\n      \"Failure\",\"MethodNotAllowed\",\"Failure\",\"Bad Request\",\n      \"Failure\",\"NotFound\",\"Failure\",\"Not found\",\n      \"Failure\",\"Unauthorized\",\"Failure\",\"Unauthorized\",\n      \"Failure\",\"\",\"Failure\",\"\",\n      \"In Progress\",\"\",\"Success\",\"In Progress\",\n      \"Resolved\",\"\",\"Success\",\"\",\n      \"Start\",\"\",\"Success\",\"Start\",\n      \"Started\",\"\",\"Success\",\"Start\",\n      \"Succeeded\",\"\",\"Success\",\"\",\n      \"Success\",\"Created\",\"Success\",\"\",\n      \"Success\",\"NoContent\",\"Success\",\"\",\n      \"Success\",\"OK\",\"Success\",\"\",\n      \"Success\",\"\",\"Success\",\"\",\n      \"Updated\",\"\",\"Success\",\"\",\n      \"Succeeded\",\"OK\",\"Success\",\"\",\n      \"Accepted\",\"Accepted\",\"Success\",\"\",\n      \"Accepted\",\"OK\",\"Success\",\"\",\n      \"Failed\",\"Forbidden\",\"Failure\",\"Unauthorized\",\n      \"Succeeded\",\"Created\",\"Success\",\"\",\n      \"Failed\",\"BadRequest\",\"Failure\",\"Bad request\",\n      \"Accepted\",\"Created\",\"Success\",\"\",\n      \"Failed\",\"Conflict\",\"Failure\",\"Bad request\",\n      \"Failed\",\"MethodNotAllowed\",\"Failure\",\"Bad request\",\n      \"Failure\",\"BadGateway\",\"Failure\",\"Bad request\",\n      \"Succeeded\",\"NoContent\",\"Success\",\"\",\n      \"Failure\",\"ServiceUnavailable\",\"Failure\",\"Internal error\",\n      \"Failure\",\"GatewayTimeout\",\"Failure\",\"Internal error\",\n      \"Failed\",\"NotFound\",\"Failure\",\"Not found\",\n      \"Failed\",\"BadGateway\",\"Failure\",\"Bad request\",\n      \"Failure\",\"UnsupportedMediaType\",\"Failure\",\"Bad request\",\n      \"Failed\",\"Unauthorized\",\"Failure\",\"Unauthorized\",\n      \"Cancel\",\"\",\"Failure\",\"Cancelled\"\n  ];\n  AzureActivity \n  | where not(disabled)\n  | where\n      (isnull(starttime) or TimeGenerated >= starttime) \n      and (isnull(endtime) or TimeGenerated <= endtime)\n      and (array_length(newvalue_has_any) == 0)\n  | where CategoryValue == \"Administrative\"\n  | project-away HTTPRequest, Level, SourceSystem, EventSubmissionTimestamp, TenantId, OperationId, Hierarchy, Category, ResourceId, ResourceProvider, Resource\n  | where \n      (array_length(srcipaddr_has_any_prefix) == 0 or has_any_ipv4_prefix(CallerIpAddress,srcipaddr_has_any_prefix))\n      and (array_length(actorusername_has_any) == 0 or Caller has_any (actorusername_has_any))\n      and (array_length(operation_has_any) == 0 or OperationNameValue has_any (operation_has_any))\n      and (array_length(object_has_any) == 0 or Properties  has_any (object_has_any))\n  // --\n  // Calculate and filter by EventType\n  | extend op = toupper(tostring(split(OperationNameValue,\"/\")[-1]))\n  | lookup AzureActivityOperationLookup on op\n  | extend EventType = iff (EventType == \"\", \"Other\", EventType)\n  | where array_length(eventtype_in) == 0 or EventType in (eventtype_in)\n  | project-away op\n  // --\n  // Calculate EventResult, EventResultDetails, and EventResultOriginalDetails\n  | extend\n      EventOriginalResultDetails = strcat (\n          ActivityStatusValue, \n          iff (ActivitySubstatusValue !=\"\", strcat(' [', ActivitySubstatusValue, ']'), \"\")\n      )\n  | extend \n      ActivitySubstatusValue = iff (ActivitySubstatusValue matches regex \"\\\\d+\", \"\", ActivitySubstatusValue)\n  | lookup AzureActivityStatusLookup on ActivityStatusValue, ActivitySubstatusValue\n  | extend EventResult = iff(EventResult == \"\", \"Other\", EventResult)\n  | where eventresult == \"*\" or (EventResult == eventresult) // Not optimized\n  | extend EventSeverity = iff(EventResult == \"Failure\", \"Low\", \"Informational\")\n  | project-away ActivityStatus*, ActivitySubstatus*    // \n  | project-rename \n      Operation = OperationNameValue,\n      SrcIpAddr = CallerIpAddress,\n      EventOriginalUid = EventDataId,\n      ActorSessionId = CorrelationId,\n      EventOriginalType = CategoryValue\n  | extend\n      EventCount = int(1),\n      EventStartTime = TimeGenerated, \n      EventEndTime= TimeGenerated,\n      EventProduct = 'Azure',\n      EventVendor = 'Microsoft',\n      EventSchemaVersion = '0.1.0',\n      EventSchema = 'AuditEvent',\n      ObjectType = \"Cloud Resource\",\n      TargetAppName = \"Azure\",\n      TargetAppType = \"CSP\"\n  // --\n  // Calculate Actor\n  | extend \n      Caller = iff(Caller == \"Microsoft.RecoveryServices\", \"\", Caller)\n  | extend \n      ActorUsernameType = iff (Caller has \"@\", \"UPN\", \"\")\n  | extend \n      ActorUsername = iff (ActorUsernameType == \"UPN\", Caller, \"\"),\n      ActorUserId = iff (ActorUsernameType != \"UPN\", Caller, \"\")\n  | extend\n      ActorUserIdType = iff  (ActorUserId != \"\", \"AADID\", \"\")\n  | project-away Caller\n  // --\n  // Calculate Object\n  | extend \n      entity = tostring(Properties_d.entity), \n      resource = tostring(Properties_d.resource),\n      entity_name = tostring(Properties_d.[\"Entity Name\"])\n  | extend Object = case ( \n          entity != \"\", entity,\n          strcat (\"/subscriptions/\", SubscriptionId, \"/resourceGroups/\", ResourceGroup, \"/providers/\", ResourceProviderValue, \"/\",resource, iff (entity_name != \"\", strcat(\"/\", entity_name), \"\"))\n      )\n  | project-away entity, resource,entity_name, _SubscriptionId, SubscriptionId, ResourceGroup, ResourceProviderValue\n  // Aliases\n  | extend AdditionalFields = pack_dictionary(\"Authorization\", Authorization_d, \"Claims\", Claims_d, \"Error\", Properties_d.statusMessage)\n  // -- Aliases\n  | extend \n      IpAddr = SrcIpAddr,\n      User = ActorUsername,\n      Application = TargetAppName,\n      Dst = TargetAppName,\n      Src = SrcIpAddr,\n  // -- Entity identifier explicit aliases\n      ActorUserUpn = ActorUsername,\n      ActorUserAadId = ActorUserId\n  | project-away OperationName, Properties*, Authorization*, Claims*\n  // -- Properties*\n};\nparser\n(\n  starttime = starttime,\n  endtime = endtime,\n  srcipaddr_has_any_prefix = srcipaddr_has_any_prefix,\n  actorusername_has_any = actorusername_has_any,\n  eventtype_in = eventtype_in,\n  eventresult = eventresult,\n  operation_has_any = operation_has_any,\n  object_has_any=object_has_any,\n  newvalue_has_any=newvalue_has_any,\n  disabled=disabled\n)",
        "version": 1,
        "functionParameters": "starttime:datetime=datetime(null),endtime:datetime=datetime(null),srcipaddr_has_any_prefix:dynamic=dynamic([]),actorusername_has_any:dynamic=dynamic([]),operation_has_any:dynamic=dynamic([]),eventtype_in:dynamic=dynamic([]),eventresult:string='*',object_has_any:dynamic=dynamic([]),newvalue_has_any:dynamic=dynamic([]),disabled:bool=False"
      }
    }
  ]
}
