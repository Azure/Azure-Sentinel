{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimUserManagementLinuxAuthpriv')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "User Management ASIM parser for Linux Authpriv logs",
        "category": "ASIM",
        "FunctionAlias": "ASimUserManagementLinuxAuthpriv",
        "query": "let parser = (\n    disabled:bool = false\n) {\nlet ActionLookup = datatable (Action:string, EventType:string)\n[\n    \"added\",  \"UserAddedToGroup\",\n    \"removed\",\"UserRemovedFromGroup\"\n];\nlet SeverityLookup = datatable (SeverityLevel:string, EventSeverity:string)\n[\n    \"info\", \"Informational\",\n    \"warn\", \"Low\",\n    \"err\",  \"Medium\",\n    \"crit\", \"High\"\n];    \nlet ItemParser = (T:(SyslogMessage:string,SeverityLevel:string,ProcessID:int)) {\n    T\n    | lookup SeverityLookup on SeverityLevel\n    | extend ActingAppId = tostring(ProcessID)\n    | project-away SyslogMessage,SeverityLevel, ProcessID\n};\nlet SyslogParsed = (\n    Syslog\n    | where not(disabled)\n    | where Computer in (_ASIM_GetSourceBySourceType('LinuxAuthpriv'))\n    | where Facility == \"authpriv\"\n        and ProcessName in (\"useradd\",\"usermod\",\"userdel\",\"groupadd\",\"groupmod\",\"groupdel\",\"gpasswd\")\n    | project-away EventTime,Facility,MG,CollectorHostName,SourceSystem,TenantId\n);\nunion (\n    SyslogParsed\n    | where ProcessName == \"useradd\"\n        and SyslogMessage startswith \"new user: name=\"\n    | parse SyslogMessage with \"new user: name=\" TargetUsername \", UID=\" TargetUserId \", GID=\" GroupId \", \" *\n    | extend \n        EventType   = \"UserCreated\", \n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"useradd\"\n        and SyslogMessage startswith \"failed adding user '\"\n    | parse SyslogMessage with \"failed adding user '\" TargetUsername \"', exit code: \" EventOriginalResultDetails\n    | extend \n        EventType          = \"UserCreated\", \n        EventResult        = \"Failure\",\n        EventResultDetails = \"Other\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"useradd\"\n        and SyslogMessage startswith \"new group: name=\"\n    | parse SyslogMessage with \"new user: name=\" GroupName \", GID=\" GroupId\n    | extend \n        EventType   = \"UserCreated\", \n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"useradd\"\n        and SyslogMessage startswith \"cannot open login definitions\"\n    | extend EventType     = \"UserCreated\", \n        EventResult        = \"Failure\",\n        EventResultDetails = \"NotAuthorized\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName ==\"useradd\" \n        and SyslogMessage startswith \"add '\"\n    | parse SyslogMessage with \"add '\" TargetUsername \"'\" * \"group '\" GroupName \"'\" \n    | extend \n        EventType   = \"UserCreated\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"usermod\"\n        and SyslogMessage startswith \"change user name '\"\n    | parse SyslogMessage with \"change user name '\" TargetUsername \"'\" *\n    | extend \n        EventType   = \"UserModified\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName ==\"usermod\" \n        and SyslogMessage startswith \"add '\"\n    | parse SyslogMessage with \"add '\" TargetUsername \"'\" * \"group '\" GroupName \"'\" \n    | extend \n        EventType   = \"UserAddedToGroup\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"usermod\"\n        and SyslogMessage startswith \"change user '\"\n        and not (SyslogMessage endswith \"' password\")\n    | parse SyslogMessage with \"change user '\" TargetUsername \"' \" EventSubType \" from '\" PreviousPropertyValue \"' to '\" NewPropertyValue \"'\"\n    | extend \n        EventType = case (\n            EventSubType == \"expiration\" and PreviousPropertyValue == \"never\", \"UserDisabled\",\n            EventSubType == \"expiration\" and NewPropertyValue == \"never\", \"UserEnabled\",\n            \"UserModified\"\n        ),\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"usermod\"\n        and SyslogMessage startswith \"cannot open login definitions\"\n    | extend \n        EventType          = \"UserCreated\", \n        EventResult        = \"Failure\",\n        EventResultDetails = \"NotAuthorized\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"usermod\"\n        and SyslogMessage startswith \"change user '\"\n        and SyslogMessage endswith \"password\"\n    | parse SyslogMessage with \"change user '\" TargetUsername \"' \" EventSubType\n    | extend \n        EventType   = \"PasswordChanged\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"usermod\"\n        and SyslogMessage startswith \"lock user '\"\n        and SyslogMessage endswith \"' password\"\n    | parse SyslogMessage with \"lock user '\" TargetUsername \"' password\"\n    | extend \n        EventType   = \"UserLocked\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"userdel\"\n        and SyslogMessage startswith \"delete '\"\n    | parse SyslogMessage with \"delete '\" TargetUsername \"'\" * \"group '\" GroupName \"'\" *\n    | extend \n        EventType   = \"UserDeleted\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"userdel\"\n        and SyslogMessage startswith \"delete user '\"\n    | parse SyslogMessage with \"delete user '\" TargetUsername \"'\" *\n    | extend \n        EventType   = \"UserDeleted\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"userdel\"\n        and (SyslogMessage startswith \"removed group '\" \n        or SyslogMessage startswith \"removed shadow group '\")\n    | parse SyslogMessage with \"removed\" * \"group '\" GroupName \"' owned by '\" TargetUsername \"'\"\n    | extend \n        EventType   = \"UserDeleted\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupadd\"\n        and SyslogMessage startswith \"group added to \"\n        and SyslogMessage has \"GID=\"\n    | parse SyslogMessage with \"group added to \" * \"name=\" GroupName \", GID=\" GroupId\n    | extend \n        EventType   = \"GroupCreated\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupadd\"\n        and SyslogMessage startswith \"group added to \"\n        and not(SyslogMessage has \"GID=\")\n    | parse SyslogMessage with \"group added to \" * \"name=\" GroupName\n    | extend \n        EventType   = \"GroupCreated\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupadd\"\n        and SyslogMessage startswith \"new group: name=\"\n    | parse SyslogMessage with \"new group: name=\" GroupName \", GID=\" GroupId\n    | extend \n        EventType   = \"GroupCreated\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupadd\"\n        and SyslogMessage startswith \"cannot open login definitions\"\n    | extend \n        EventType          = \"GroupCreated\", \n        EventResult        = \"Failure\",\n        EventResultDetails = \"NotAuthorized\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupmod\"\n        and SyslogMessage startswith \"group changed in \"\n    | parse SyslogMessage with \"group changed in \" * \" (group \" Temp_GroupName \", new name: \" *\n    | extend \n        split(Temp_GroupName, \"/\")\n    | extend \n        GroupName = tostring(Temp_GroupName[0]),\n        GroupId   = tostring(Temp_GroupName[1])\n    | project-away Temp_GroupName\n    | extend \n        EventType   = \"GroupModified\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupmod\"\n        and SyslogMessage startswith \"failed to change \"\n    | parse SyslogMessage with \"failed to change \" * \" (group \" Temp_GroupName \", new name: \" *\n    | extend split(Temp_GroupName, \"/\")\n    | extend \n        GroupName = tostring(Temp_GroupName[0]),\n        GroupId   = tostring(Temp_GroupName[1])\n    | project-away Temp_GroupName\n    | extend \n        EventType   = \"GroupModified\",\n        EventResult = \"Failure\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"groupdel\"\n    | parse SyslogMessage with \"group '\" GroupName \"' removed\" *\n    | extend \n        EventType   = \"GroupDeleted\",\n        EventResult = \"Success\"\n    | invoke ItemParser()\n),(\n    SyslogParsed\n    | where ProcessName == \"gpasswd\"\n    | parse SyslogMessage with \"user \" TargetUsername \" \" Action \" by \" ActorUsername \" \" * \" group \" GroupName\n    | lookup ActionLookup on Action\n    | project-away Action\n    | extend \n        EventResult = \"Success\"\n    | invoke ItemParser()\n)\n| invoke _ASIM_ResolveDvcFQDN (\"HostName\")\n| project-rename \n    ActingAppName = ProcessName,\n    DvcId         = _ResourceId,\n    EventUid      = _ItemId\n| extend\n    ActingAppType       = \"Process\",\n    ActorUsernameType   = iif(isnotempty(ActorUsername), \"Simple\", \"\"),\n    DvcIdType           = iff (DvcId == \"\", \"\", \"AzureResourceID\"),\n    DvcIpAddr           = iif(HostIP == \"Unknown IP\",\"\",HostIP),\n    DvcOs               = \"Linux\",\n    EventCount          = int(1),\n    EventEndTime        = TimeGenerated,\n    EventProduct        = \"Authpriv\",\n    EventSchema         = \"UserManagement\",\n    EventSchemaVersion  = \"0.1.1\",\n    EventStartTime      = TimeGenerated,\n    EventVendor         = \"Linux\",\n    GroupIdType         = iif(isnotempty(GroupId), \"UID\", \"\"),\n    GroupNameType       = iif(isnotempty(GroupName), \"Simple\", \"\"),\n    Hostname            = DvcHostname,\n    TargetUserIdType    = iif(isnotempty(TargetUserId), \"UID\", \"\"),\n    TargetUsernameType  = iif(isnotempty(TargetUsername), \"Simple\", \"\"),\n    UpdatedPropertyName = EventSubType,\n    User                = ActorUsername\n    | extend SrcIpAddr = DvcIpAddr\n| project-away Computer, HostIP, HostName\n};\nparser (\n  disabled = disabled\n)",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
