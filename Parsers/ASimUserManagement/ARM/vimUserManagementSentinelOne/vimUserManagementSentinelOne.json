{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/vimUserManagementSentinelOne')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "User Management ASIM parser for SentinelOne",
        "category": "ASIM",
        "FunctionAlias": "vimUserManagementSentinelOne",
        "query": "let EventTypeLookup = datatable (\n    activityType_d: real,\n    EventType: string,\n    EventOriginalType: string,\n    EventSubType: string\n)[\n    23, \"UserCreated\", \"User Added\", \"\",\n    24, \"UserModified\", \"User Modified\", \"MultipleProperties\",\n    25, \"UserDeleted\", \"User Deleted\", \"\",\n    37, \"UserModified\", \"User modified\", \"MultipleProperties\",\n    102, \"UserDeleted\", \"User Deleted\", \"\",\n    110, \"UserModified\", \"Enable API Token Generation\", \"NewPermissions\",\n    111, \"UserModified\", \"Disable API Token Generation\", \"PreviousPermissions\",\n    140, \"UserCreated\", \"Service User creation\", \"\",\n    141, \"UserModified\", \"Service User modification\", \"MultipleProperties\",\n    142, \"UserDeleted\", \"Service User deletion\", \"\",\n    3522, \"GroupCreated\", \"Ranger Deploy - Credential Group Created\", \"\",\n    3523, \"GroupModified\", \"Ranger Deploy -Credential Group Edited\", \"MultipleProperties\",\n    3524, \"GroupDeleted\", \"Ranger Deploy - Credential Group Deleted\", \"\",\n    3710, \"PasswordReset\", \"User Reset Password with Forgot Password from the Login\", \"\",\n    3711, \"PasswordChanged\", \"User Changed Their Password\", \"\",\n    3715, \"PasswordReset\", \"User Reset Password by Admin Request\", \"\",\n    5006, \"GroupDeleted\", \"Group Deleted\", \"\",\n    5008, \"GroupCreated\", \"User created a Manual or Pinned Group\", \"\",\n    5011, \"GroupModified\", \"Group Policy Reverted\", \"Newpolicy\",\n    67, \"\", \"User 2FA Modified\", \"\",\n    145, \"UserModified\", \"Enroll 2FA\", \"\",\n    146, \"UserModified\", \"Reset 2FA\", \"\",\n    42, \"\", \"Global 2FA modified\", \"\",\n    147, \"UserModified\", \"User Configured 2FA\", \"\"\n];\nlet UsermanagementactivityIds = dynamic([23, 24, 25, 37, 102, 110, 111, 140, 141, 142, 3522, 3523, 3524, 3710, 3711, 3715, 5006, 5008, 5011, 67, 145, 146, 42, 147]);\nlet parser = (\n    starttime: datetime=datetime(null), \n    endtime: datetime=datetime(null),\n    srcipaddr_has_any_prefix: dynamic=dynamic([]), \n    targetusername_has_any: dynamic=dynamic([]),\n    actorusername_has_any: dynamic=dynamic([]),\n    eventtype_in: dynamic=dynamic([]),\n    disabled: bool=false\n    ) {\n    SentinelOne_CL\n    | where not(disabled)\n    | where event_name_s == \"Activities.\"\n        and (isnull(starttime) or TimeGenerated >= starttime) and (isnull(endtime) or TimeGenerated <= endtime)\n        and activityType_d in (UsermanagementactivityIds)\n        and (array_length(srcipaddr_has_any_prefix) == 0 or has_any_ipv4_prefix(DataFields_s, srcipaddr_has_any_prefix))\n        and (array_length(targetusername_has_any) == 0 or DataFields_s has_any (targetusername_has_any))\n        and (array_length(actorusername_has_any) == 0 or DataFields_s has_any (actorusername_has_any))\n    | parse-kv DataFields_s as (byUser: string, username: string, email: string, ipAddress: string, group: string, groupName: string, name: string, oldDescription: string, oldRole: string, description: string, role: string, userScope: string, scopeLevelName: string, scopeName: string, roleName: string, modifiedFields: string, deactivationPeriodInDays: string, descriptionChanged: string, groupType: string, newValue: string) with (pair_delimiter=\",\", kv_delimiter=\":\", quote='\"')\n    | where array_length(srcipaddr_has_any_prefix) == 0 or has_any_ipv4_prefix(ipAddress, srcipaddr_has_any_prefix)\n    | parse modifiedFields with 'Modified fields: ' ModifiedFields: string\n    | parse description_s with * \"with id=\" id: string \",\" restOfMessage\n    | lookup EventTypeLookup on activityType_d\n    | extend\n        EventType = case (\n              activityType_d in (67, 42) and primaryDescription_s has \"enabled\",\n              \"UserEnabled\",\n              activityType_d in (67, 42) and primaryDescription_s has \"disabled\",\n              \"UserDisabled\",\n              EventType\n          )\n    | where (array_length(eventtype_in) == 0 or (EventType in (eventtype_in)))\n    | extend \n        PreviousPropertyValue = case(\n                            activityType_d in (67, 42) and primaryDescription_s has \"enabled\",\n                            \"disabled\",\n                            activityType_d in (67, 42) and primaryDescription_s has \"disabled\",\n                            \"enabled\",\n                            activityType_d == 141 and descriptionChanged == \"true\",\n                            oldDescription, \n                            activityType_d == 141 and descriptionChanged == \"false\",\n                            oldRole,\n                            \"\"\n                        ),\n        NewPropertyValue = case(\n                      activityType_d in (67, 42) and primaryDescription_s has \"enabled\",\n                      \"enabled\", \n                      activityType_d in (67, 42) and primaryDescription_s has \"disabled\",\n                      \"disabled\",\n                      activityType_d == 141 and descriptionChanged == \"true\",\n                      description, \n                      activityType_d == 141 and descriptionChanged == \"false\",\n                      role,\n                      \"\"\n                  ),\n        ActorUsername = iff(activityType_d == 102, \"SentinelOne\", coalesce(byUser, username, email)),        \n        GroupName = coalesce(group, groupName, name),\n        TargetUsername = iff(isnotempty(byUser) or activityType_d in (147, 42), username, \"\")\n    | where (array_length(targetusername_has_any) == 0 or TargetUsername has_any (targetusername_has_any))\n        and (array_length(actorusername_has_any) == 0 or ActorUsername has_any (actorusername_has_any))\n    | extend GroupName = iff(GroupName == \"null\", \"\", GroupName)\n    | project-rename\n        EventStartTime = createdAt_t,\n        SrcIpAddr = ipAddress,\n        EventUid = _ItemId,\n        ActorUserId = id,\n        GroupId = groupId_s,\n        EventMessage = primaryDescription_s,\n        EventOriginalUid = activityUuid_g\n    | extend\n        EventCount = int(1),\n        EventResult = \"Success\",\n        DvcAction = \"Allowed\",\n        EventSeverity = \"Informational\",\n        EventSchema = \"UserManagement\",\n        EventSchemaVersion = \"0.1.1\",\n        EventProduct = \"SentinelOne\",\n        EventVendor = \"SentinelOne\",\n        EventResultDetails = \"Other\"\n    | extend\n        Dvc = EventProduct,\n        EventEndTime = EventStartTime,\n        IpAddr = SrcIpAddr,\n        User = ActorUsername,\n        UpdatedPropertyName = EventSubType,\n        ActorUserIdType = iff(isnotempty(ActorUserId), \"Other\", \"\"),\n        ActorUserType = _ASIM_GetUserType(ActorUsername, ActorUserId),\n        ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),\n        GroupIdType = iff(isnotempty(GroupId), \"UID\", \"\"),\n        GroupNameType = iff(isnotempty(GroupName), \"Simple\", \"\"),\n        GroupType = iff(isnotempty(groupType), \"Other\", \"\"),\n        GroupOriginalType = groupType,\n        TargetUsernameType = _ASIM_GetUsernameType(TargetUsername),\n        TargetUserType = _ASIM_GetUserType(TargetUsername, \"\"),\n        AdditionalFields = bag_pack(\n                      \"userScope\", userScope,\n                      \"scopeLevelName\", scopeLevelName,\n                      \"scopeName\", scopeName,\n                      \"modifiedFields\", modifiedFields,\n                      \"roleName\", roleName,\n                      \"deactivationPeriodInDays\", deactivationPeriodInDays,\n                      \"descriptionChanged\", descriptionChanged\n                  )\n    | project-away \n        *_b,\n        *_d,\n        *_g,\n        *_s,\n        *_t,\n        byUser,\n        username,\n        email,\n        group,\n        groupName,\n        groupType,\n        name,\n        oldDescription,\n        oldRole,\n        description,\n        role,\n        userScope,\n        scopeLevelName,\n        scopeName,\n        roleName,\n        modifiedFields,\n        ModifiedFields,\n        deactivationPeriodInDays,\n        descriptionChanged,\n        restOfMessage,\n        _ResourceId,\n        TenantId,\n        RawData,\n        Computer,\n        MG,\n        ManagementGroupName,\n        SourceSystem,\n        newValue\n};\nparser(\n    starttime = starttime,\n    endtime = endtime,\n    srcipaddr_has_any_prefix  = srcipaddr_has_any_prefix,\n    targetusername_has_any = targetusername_has_any,\n    actorusername_has_any = actorusername_has_any,\n    eventtype_in = eventtype_in,\n    disabled = disabled\n)\n",
        "version": 1,
        "functionParameters": "starttime:datetime=datetime(null),endtime:datetime=datetime(null),srcipaddr_has_any_prefix:dynamic=dynamic([]),actorusername_has_any:dynamic=dynamic([]),targetusername_has_any:dynamic=dynamic([]),eventtype_in:dynamic=dynamic([]),disabled:bool=False"
      }
    }
  ]
}
