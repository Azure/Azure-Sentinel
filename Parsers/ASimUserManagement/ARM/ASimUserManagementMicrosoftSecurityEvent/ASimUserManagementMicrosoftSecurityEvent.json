{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimUserManagementMicrosoftSecurityEvent')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "User Management ASIM parser for Microsoft Security Event logs",
        "category": "ASIM",
        "FunctionAlias": "ASimUserManagementMicrosoftSecurityEvent",
        "query": "let parser = (\n    disabled:bool = false\n) {\n    let EventIDLookup = datatable(EventID:int, EventType:string, EventSubType:string, GroupType:string)\n    [   \n        \"4720\", \"UserCreated\", \"UserCreated\", \"\", \n        \"4722\", \"UserEnabled\", \"UserModified\", \"\", \n        \"4723\", \"PasswordChanged\", \"UserModified\", \"\", \n        \"4724\", \"PasswordReset\", \"UserModified\", \"\", \n        \"4725\", \"UserDisabled\", \"UserModified\", \"\", \n        \"4726\", \"UserDeleted\", \"UserModified\", \"\", \n        \"4727\", \"GroupCreated\", \"GroupCreated\", \"Global Security Enabled\", \n        \"4728\", \"UserAddedToGroup\", \"GroupModified\", \"Global Security Enabled\", \n        \"4729\", \"UserRemovedFromGroup\", \"GroupModified\", \"Global Security Enabled\", \n        \"4730\", \"GroupDeleted\", \"GroupModified\", \"Global Security Enabled\", \n        \"4731\", \"GroupCreated\", \"GroupCreated\", \"Local Security Enabled\", \n        \"4732\", \"UserAddedToGroup\", \"GroupModified\", \"Local Security Enabled\", \n        \"4733\", \"UserRemovedFromGroup\", \"GroupModified\", \"Local Security Enabled\", \n        \"4734\", \"GroupDeleted\", \"GroupModified\", \"Local Security Enabled\", \n        \"4738\", \"UserModified\", \"UserModified\", \"\", \n        \"4740\", \"UserLocked\", \"UserModified\", \"\", \n        \"4744\", \"GroupCreated\", \"GroupCreated\", \"Local Distribution\", \n        \"4748\", \"GroupDeleted\", \"GroupModified\", \"Local Distribution\", \n        \"4749\", \"GroupCreated\", \"GroupCreated\", \"Global Distribution\", \n        \"4753\", \"GroupDeleted\", \"GroupModified\", \"Global Distribution\", \n        \"4754\", \"GroupCreated\", \"GroupCreated\", \"Universal Security Enabled\", \n        \"4756\", \"UserAddedToGroup\", \"GroupModified\", \"Universal Security Enabled\", \n        \"4757\", \"UserRemovedFromGroup\", \"GroupModified\", \"Universal Security Enabled\", \n        \"4758\", \"GroupDeleted\", \"GroupModified\", \"Universal Security Enabled\", \n        \"4759\", \"GroupCreated\", \"GroupCreated\", \"Universal Distribution\", \n        \"4763\", \"GroupDeleted\", \"GroupModified\", \"Universal Distribution\", \n        \"4767\", \"UserLocked\", \"UserModified\", \"\", \n        \"4781\", \"UserModified\", \"UserModified\", \"\" \n    ];\n    let UserTypeLookup = datatable (ActorOriginalUserType:string, ActorUserType:string)\n    [\n        'Machine', 'Machine',\n        'User', 'Regular'\n    ]; \n    let UserEventID = toscalar(\n        EventIDLookup\n        | where not(disabled)\n        | where EventSubType in(\"UserCreated\",\"UserModified\") \n        | summarize make_set(EventID)\n    );\n    let GroupEventID = toscalar(\n        EventIDLookup\n        | where not(disabled)\n        | where EventSubType in(\"GroupCreated\",\"GroupModified\")  \n        | summarize make_set(EventID)\n    );\n    union (\n        SecurityEvent\n        | where not(disabled)\n        | where EventID in(UserEventID)\n        | project-rename \n            ActorOriginalUserType = AccountType,\n            ActorSessionId = SubjectLogonId,\n            ActorUserId = SubjectUserSid,\n            TargetDomain = TargetDomainName,\n            TargetUserId = TargetSid,\n            TargetUsername = TargetUserName,\n            EventMessage = Activity\n        | parse-kv EventData as \n            (\n                OldTargetUserName:string,\n                NewTargetUserName:string\n            ) \n            with (regex=@'<Data Name=\"(\\w+)\">{?([^<]*?)}?</Data>')\n        | project-rename\n            NewPropertyValue = NewTargetUserName,\n            PreviousPropertyValue = OldTargetUserName\n        | extend \n            TargetUsername = coalesce(TargetUsername, PreviousPropertyValue)\n        | project TimeGenerated, EventID, Computer, _ResourceId, _ItemId, TargetDomain, TargetUserId, TargetUsername, ActorUserId, SubjectDomainName, SubjectUserName, ActorOriginalUserType, ActorSessionId, NewPropertyValue, PreviousPropertyValue, SourceComputerId, EventMessage\n        | extend\n            TargetUserIdType = iif(isnotempty(TargetUserId), \"SID\",\"\"),\n            TargetUsername = iff (TargetDomain == \"\", TargetUsername, strcat (TargetDomain, '\\\\', TargetUsername))\n        | project-away TargetDomain\n    ),(\n        SecurityEvent\n        | where not(disabled)\n        | where not (EventID in (4744, 4748, 4749, 4753, 4759, 4763))\n        | where EventID in(GroupEventID)\n        | project-rename \n            ActorOriginalUserType = AccountType,\n            ActorSessionId = SubjectLogonId,\n            ActorUserId = SubjectUserSid,\n            GroupDomain = TargetDomainName,\n            GroupId = TargetSid,\n            GroupName = TargetUserName,\n            EventMessage = Activity\n        | extend GroupName = iff (GroupDomain == \"\", GroupName, strcat (GroupDomain, \"\\\\\" ,GroupName))\n        | parse-kv EventData as \n            (\n                MemberName:string,\n                MemberSid:string\n            ) \n            with (regex=@'<Data Name=\"(\\w+)\">{?([^<]*?)}?</Data>')\n        | project-rename \n            TargetUserId = MemberSid,\n            TargetUsername = MemberName\n        | project TimeGenerated, EventID, Computer, _ResourceId, _ItemId, GroupId, GroupName, ActorUserId, SubjectDomainName, SubjectUserName, ActorOriginalUserType, ActorSessionId, TargetUsername, TargetUserId, SourceComputerId, EventMessage\n        | extend \n            GroupIdType = iif(isnotempty(GroupId), \"SID\",\"\")\n    ),(\n        SecurityEvent\n        | where not(disabled)\n        | where EventID in (4744, 4748, 4749, 4753, 4759, 4763)\n        | parse-kv EventData as \n          (\n              TargetUserName:string,\n              TargetDomainName:string,\n              TargetSid:string,\n              SubjectUserSid:string,\n              AccountType:string,\n              SubjectLogonId:string,\n              SubjectDomainName:string,\n              SubjectUserName:string\n          ) \n          with (regex=@'<Data Name=\"(\\w+)\">{?([^<]*?)}?</Data>')\n        | project-rename \n            ActorOriginalUserType = AccountType,\n            ActorSessionId = SubjectLogonId,\n            ActorUserId = SubjectUserSid,\n            GroupDomain = TargetDomainName,\n            GroupId = TargetSid,\n            GroupName = TargetUserName,\n            EventMessage = Activity\n        | extend GroupName = iff (GroupDomain == \"\", GroupName, strcat (GroupDomain, \"\\\\\" ,GroupName))\n        | parse-kv EventData as \n            (\n                MemberName:string,\n                MemberSid:string\n            ) \n            with (regex=@'<Data Name=\"(\\w+)\">{?([^<]*?)}?</Data>')\n        | project-rename \n            TargetUserId = MemberSid,\n            TargetUsername = MemberName\n        | project TimeGenerated, EventID, Computer, _ResourceId, _ItemId, GroupId, GroupName, ActorUserId, SubjectDomainName, SubjectUserName, ActorOriginalUserType, ActorSessionId, TargetUsername, TargetUserId, SourceComputerId, EventMessage\n        | extend \n            GroupIdType = iif(isnotempty(GroupId), \"SID\",\"\")\n    )\n| lookup EventIDLookup on EventID\n| extend UpdatedPropertyName = EventSubType\n| invoke _ASIM_ResolveDvcFQDN (\"Computer\")\n| lookup UserTypeLookup on ActorOriginalUserType\n| extend \n    DvcId = coalesce(_ResourceId, SourceComputerId),\n    EventOriginalType = tostring(EventID)\n| project-rename \n    EventUid = _ItemId\n| extend \n    ActorUsername = iff (SubjectDomainName == \"\", SubjectUserName, strcat (SubjectDomainName, '\\\\', SubjectUserName)),\n    Dvc = DvcHostname,\n    DvcIdType = iff (isnotempty(_ResourceId), \"AzureResourceID\", \"\"),\n    DvcOs = \"Windows\",\n    EventCount = int(1),\n    EventEndTime = TimeGenerated,\n    EventProduct = 'Security Events',\n    EventResult = \"Success\",\n    EventSchema = \"UserManagement\",\n    EventSchemaVersion = \"0.1.1\",\n    EventSeverity = \"Informational\",\n    EventStartTime = TimeGenerated,\n    EventVendor = 'Microsoft',\n    Hostname = DvcHostname, \n    ActorUserIdType=\"SID\"\n| project-away Subject*, Computer, _ResourceId, SourceComputerId,EventID\n| extend\n    ActorUsernameType = _ASIM_GetUsernameType(ActorUsername),\n    ActorUserType = _ASIM_GetUserType(ActorUsername,ActorUserId),\n    GroupNameType = _ASIM_GetUsernameType(GroupName),\n    TargetUsernameType = _ASIM_GetUsernameType(TargetUsername),\n    TargetUserType = _ASIM_GetUserType(TargetUsername,TargetUserId),\n    User = ActorUsername\n};\n  parser (\n      disabled                 = disabled\n  )",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
