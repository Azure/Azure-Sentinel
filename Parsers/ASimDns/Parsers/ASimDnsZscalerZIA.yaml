Parser:
  Title: DNS activity ASIM parser for Zscaler ZIA
  Version: '0.6'
  LastUpdated: Feb 19 2023
Product:
  Name: Zscaler ZIA DNS
Normalization:
  Schema: Dns
  Version: '0.1.3'
References:
- Title: ASIM DNS Schema
  Link: https://aka.ms/ASimDnsDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports normalizing Zscaler ZIA DNS logs to the ASIM Dns normalized schema.
ParserName: ASimDnsZscalerZIA
EquivalentBuiltInParser: _ASim_Dns_ZscalerZIA
ParserParams:
  - Name: disabled
    Type: bool
    Default: false
ParserQuery: |
  let ZscalerDNSevents=(disabled:bool=false){
    CommonSecurityLog 
    | where not(disabled)
    | where DeviceProduct == "NSSDNSlog" 
    | project-rename
        Dvc=Computer , 
        SrcIpAddr = SourceIP, 
        SrcUsername = SourceUserName, 
        DstIpAddr = DestinationIP, 
        DstPortNumber = DestinationPort,  
        EventProductVersion = DeviceVersion, 
        DnsQueryTypeName = DeviceCustomString4,  
        DnsQuery = DeviceCustomString5, 
        SrcUserDepartment = DeviceCustomString1, // Not part of the standard schema
        reqaction = DeviceCustomString2, 
        resaction = DeviceCustomString3, 
        DvcUsername = SourceUserID,
        DvcZone = SourceUserPrivileges,
        SrcHostname = DeviceName,
        NetworkProtocol = Protocol,
        EventOriginalSeverity = LogSeverity,
        EventMessage = Message
    | extend
        EventCount=int(1), 
        EventStartTime=TimeGenerated,  
        EventVendor = "Zscaler", 
        EventProduct = "ZIA DNS", 
        EventSchema = "Dns", 
        EventSchemaVersion="0.1.3", 
        EventEndTime=TimeGenerated, 
        SrcUsernameType = "UPN", 
        EventSubType = iff(resaction == 'None', 'request', 'response'),  
        DvcAction = iff(resaction == 'None', reqaction, resaction), 
        EventResultDetails = iff (DeviceCustomString6 matches regex @'^([A-Z_]+)$', DeviceCustomString6, 'NOERROR'), 
        EventType = 'Query', 
        RuleName = strcat (FlexString1, " / ", FlexString2),
        // -- Adjustment to support both old and new CSL fields.
        UrlCategory = coalesce(column_ifexists("DeviceEventCategory", ""), extract("cat=(.*)", 1, AdditionalExtensions), ""),  
        DnsNetworkDuration = coalesce(
          toint(column_ifexists ("FieldDeviceCustomNumber1", int(null))), 
          toint(column_ifexists ("DeviceCustomNumber1",int(null)))
        )
      | extend 
        EventResult = case (
          EventSubType == 'request', 'NA', 
          EventResultDetails == 'NOERROR', 'Success',
          'Failure'),
        DnsResponseName = iff (EventResultDetails == 'NOERROR', DeviceCustomString6, '')
    // -- Aliases
    | extend
        DnsResponseCodeName = EventResultDetails,
        Domain = DnsQuery,
        IpAddr = SrcIpAddr,
        Src = SrcIpAddr,
        Hostname = SrcHostname,
        Dst = DstIpAddr,
        DvcHostname = Dvc,
        Duration = DnsNetworkDuration,
        User = SrcUsername,
    // -- Entity identifier explicit aliases
        SrcUserUpn = SrcUsername
    | project-away AdditionalExtensions, CommunicationDirection, Device*, Destination*, EndTime, ExternalID, File*, Flex*, IndicatorThreatType, Malicious*, Old*, OriginalLogSeverity, Process*, ReceiptTime, ReceivedBytes, Remote*, Request*, Sent*, SimplifiedDeviceAction, Source*, StartTime, TenantId, ThreatConfidence, ThreatDescription, ThreatSeverity, EventOutcome, FieldDevice*, ExtID, Reason, ApplicationProtocol, ReportReferenceLink, Activity, resaction, reqaction
    };
  ZscalerDNSevents (disabled)