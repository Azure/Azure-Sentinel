Parser:
  Title: DNS activity ASIM filtering parser.
  Version: '0.5.2'
  LastUpdated: June 7, 2024
Product:
  Name: Source agnostic
Normalization:
  Schema: Dns
  Version: '0.1.7'
References:
- Title: ASIM DNS Schema
  Link: https://aka.ms/ASimDnsDoc
- Title: ASIM
  Link: https://aka.ms/AboutASIM
Description: |
  This ASIM parser supports filtering and normalizing DNS activity logs from all supported sources to the ASIM DNS activity normalized schema.
ParserName: imDns
ParserParams:
  - Name: starttime
    Type: datetime
    Default: datetime(null)
  - Name: endtime
    Type: datetime
    Default: datetime(null)
  - Name: srcipaddr
    Type: string
    Default: '*'
  - Name: domain_has_any
    Type: dynamic
    Default: dynamic([])
  - Name: responsecodename
    Type: string
    Default: '*'
  - Name: response_has_ipv4
    Type: string
    Default: '*'
  - Name: response_has_any_prefix
    Type: dynamic
    Default: dynamic([])
  - Name: eventtype
    Type: string
    Default: 'lookup'
  - Name: pack
    Type: bool
    Default: false
ParserQuery: |
  let Generic=(starttime:datetime=datetime(null), endtime:datetime=datetime(null) , srcipaddr:string='*' , domain_has_any:dynamic=dynamic([]) , responsecodename:string='*', response_has_ipv4:string='*' , response_has_any_prefix:dynamic=dynamic([]) , eventtype:string='lookup', pack:bool=false ){
  let DisabledParsers=materialize(_GetWatchlist('ASimDisabledParsers') | where SearchKey in ('Any', 'ExcludeimDns') | extend SourceSpecificParser=column_ifexists('SourceSpecificParser','') | distinct SourceSpecificParser);
  let imDnsBuiltInDisabled=toscalar('ExcludeimDnsBuiltIn' in (DisabledParsers) or 'Any' in (DisabledParsers)); 
  union isfuzzy=true
    vimDnsEmpty,
    vimDnsAzureFirewall     ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsAzureFirewall'       in (DisabledParsers) ))),
    vimDnsCiscoUmbrella     ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsCiscoUmbrella'       in (DisabledParsers) ))),
    vimDnsCorelightZeek     ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsCorelightZeek'       in (DisabledParsers) ))),
    vimDnsFortinetFortiGate ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsFortinetFortiGate'   in (DisabledParsers) ))),
    vimDnsGcp               ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsDnsGcp'              in (DisabledParsers) ))),
    vimDnsInfobloxNIOS      ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsInfobloxNIOS'        in (DisabledParsers) ))),
    vimDnsMicrosoftNXlog    ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsMicrosoftNXlog'      in (DisabledParsers) ))),
    vimDnsMicrosoftOMS      ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsMicrosoftOMS'        in (DisabledParsers) ))),
    vimDnsMicrosoftSysmon   ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsMicrosoftSysmon'     in (DisabledParsers) ))),
    vimDnsMicrosoftSysmonWindowsEvent   ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsMicrosoftSysmonWindowsevent'     in (DisabledParsers) ))),
    vimDnsNative            ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsNative'              in (DisabledParsers) ))),
    vimDnsSentinelOne       ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsSentinelOne'         in (DisabledParsers) ))),
    vimDnsVectraAI          ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsVectraAI'            in (DisabledParsers) ))),
    vimDnsZscalerZIA        ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsZscalerZIA'          in (DisabledParsers) ))),
    vimDnsInfobloxBloxOne        ( starttime, endtime, srcipaddr, domain_has_any, responsecodename, response_has_ipv4, response_has_any_prefix, eventtype, (imDnsBuiltInDisabled or('ExcludevimDnsInfobloxBloxOne'          in (DisabledParsers) )))
    };
  Generic( starttime=starttime, endtime=endtime, srcipaddr=srcipaddr, domain_has_any=domain_has_any, responsecodename=responsecodename, response_has_ipv4=response_has_ipv4, response_has_any_prefix=response_has_any_prefix, eventtype=eventtype, pack=pack)
EquivalentBuiltInParser: _Im_Dns
Parsers:
  - _Im_Dns_Empty
  - _Im_Dns_AzureFirewall
  - _Im_Dns_CiscoUmbrella
  - _Im_Dns_CorelightZeek
  - _Im_Dns_FortinetFortiGate
  - _Im_Dns_Gcp
  - _Im_Dns_InfobloxNIOS
  - _Im_Dns_MicrosoftNXlog
  - _Im_Dns_MicrosoftOMS
  - _Im_Dns_MicrosoftSysmon
  - _Im_Dns_MicrosoftSysmonWindowsEvent
  - _Im_Dns_Native
  - _Im_Dns_SentinelOne
  - _Im_Dns_VectraAI
  - _Im_Dns_ZscalerZIA
  - _Im_Dns_InfobloxBloxOne
