{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Workspace": {
      "type": "string",
      "metadata": {
        "description": "The Microsoft Sentinel workspace into which the function will be deployed. Has to be in the selected Resource Group."
      }
    },
    "WorkspaceRegion": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The region of the selected workspace. The default value will use the Region selection above."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
      "apiVersion": "2020-08-01",
      "name": "[concat(parameters('Workspace'), '/ASimDnsGcp')]",
      "location": "[parameters('WorkspaceRegion')]",
      "properties": {
        "etag": "*",
        "displayName": "DNS activity ASIM parser for GCP",
        "category": "ASIM",
        "FunctionAlias": "ASimDnsGcp",
        "query": "// https://cloud.google.com/logging/docs/reference/v2/rest/v2/LogEntry\nlet GCPSeverityTable=datatable(severity_s:string,EventSeverity:string)\n[\"DEFAULT\",\"Informational\",\n\"DEBUG\",\"Informational\",\n\"INFO\",\"Informational\",\n\"NOTICE\",\"Medium\",\n\"WARNING\",\"Medium\",\n\"ERROR\",\"High\",\n\"CRITICAL\",\"High\",\n\"ALERT\",\"High\",\n\"EMERGENCY\",\"High\"\n];\nlet DNSQuery_GcpDns=(disabled:bool=false){\n  GCP_DNS_CL | where not(disabled)\n  | project-away MG, ManagementGroupName, RawData, SourceSystem, Computer\n  | where resource_type_s == \"dns_query\"\n  | lookup GCPSeverityTable on severity_s\n  | project-rename\n      DnsQueryTypeName=payload_queryType_s,\n      DnsResponseName=payload_rdata_s, \n      EventResultDetails=payload_responseCode_s,\n      NetworkProtocol=payload_protocol_s, \n      SrcIpAddr=payload_sourceIP_s,\n      EventOriginalUid=insert_id_s,\n      EventOriginalSeverity=severity_s    \n  | extend\n      DnsQuery=trim_end(@'\\.',payload_queryName_s), \n      EventCount=int(1),\n      EventProduct='Cloud DNS',\n      EventVendor='GCP',\n      EventSchema = 'Dns',\n      EventSchemaVersion=\"0.1.3\",\n      Dvc=\"GCPDNS\" ,\n      EventType = iif (resource_type_s == \"dns_query\", \"Query\", resource_type_s),\n      EventResult=iff(EventResultDetails=~'NOERROR','Success','Failure'),\n      EventSubType='response',\n      EventEndTime=todatetime(timestamp_t)\n  | extend\n      EventStartTime = EventEndTime,\n      EventResult = iff (EventResultDetails=~'NOERROR','Success','Failure')\n // -- Aliases\n  | extend \n      DnsResponseCodeName=EventResultDetails, \n      Domain=DnsQuery,\n      IpAddr=SrcIpAddr,\n      Src=SrcIpAddr\n // Backward Computability\n  | project-away *_s, *_d, *_b, *_t\n  };\n  DNSQuery_GcpDns(disabled=disabled)\n",
        "version": 1,
        "functionParameters": "disabled:bool=False"
      }
    }
  ]
}
