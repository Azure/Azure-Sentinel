{
	"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"functionAppName": {
			"type": "string"
		},
		"location": {
			"type": "string",
			"defaultValue": "[resourceGroup().location]"
		},
		"storageAccountUrl": {
			"type": "string"
		},
		"sentinelWorkspace": {
			"type": "object"
		},
		"appInsightsWorkspaceResourceId": {
			"type": "string",
			"metadata": {
				"description": "Migrate Classic Application Insights to Log Analytic Workspace which is retiring by 29 Febraury 2024. Use 'Log Analytic Workspace-->Properties' blade having 'Resource ID' property value. This is a fully qualified resourceId which is in format '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.OperationalInsights/workspaces/{workspaceName}'"
			}
		},
		"roleAssignmentDcr": {
			"type": "bool",
			"defaultValue": false
		},
		"roleAssignmentADLSv2": {
			"type": "bool",
			"defaultValue": false
		},
		"inventoryStorageAccount": {
			"type": "object",
			"defaultValue": {}
		},
		"tagsByResource": {
			"type": "object",
			"defaultValue": {}
		},
		"storageAccountName": {
			"type": "string"
		}
	},
	"variables": {
		"storageSuffix": "[environment().suffixes.storage]",
		"serverFarmName": "[concat('serverfarm_', parameters('functionAppName'))]",
		"appInsightsLogName": "[concat(parameters('functionAppName'),'Logs')]",
		"clv2TableNamePowerApps": "PowerApps_CL",
		"clv2TableNameEnvironments": "PowerPlatformEnvironments_CL",
		"clv2TableNameConnections": "PowerAppsConnections_CL",
		"clv2TableNameFlows": "PowerAutomateFlows_CL",
		"dataCollectionEndpointName": "Microsoft-Sentinel-PPInventory-DCE",
		"dataCollectionRuleName": "Microsoft-Sentinel-PPInventory-DCR",
		"dCRStreamNamePowerApps": "[concat('Custom-', variables('clv2TableNamePowerApps'))]",
		"dCRStreamNameEnvironments": "[concat('Custom-', variables('clv2TableNameEnvironments'))]",
		"dCRStreamNameConnections": "[concat('Custom-', variables('clv2TableNameConnections'))]",
		"dCRStreamNameFlows": "[concat('Custom-', variables('clv2TableNameFlows'))]",
		"monitoringMetricsPublisherRoleId": "3913510d-42f4-4e42-8a64-420c390055eb",
		"storageBlobDataReaderRoleId": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
		"inventoryTablesDeploymentName": "PowerPlatformInventoryTableDeployment",
		"inventoryRoleAssingmentDeploymentName": "PowerPlatformInventoryStorageRoleAssignment"
	},
	"resources": [
		{
			"name": "[variables('inventoryTablesDeploymentName')]",
			"type": "Microsoft.Resources/deployments",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
			"apiVersion": "2022-09-01",
			"resourceGroup": "[parameters('sentinelWorkspace').resourceGroup]",
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"variables": {},
					"resources": [
						{
							"type": "Microsoft.OperationalInsights/workspaces/tables",
							"apiVersion": "2022-10-01",
							"name": "[concat(parameters('sentinelWorkspace').name, '/', variables('clv2TableNamePowerApps'))]",
							"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces/tables'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces/tables'], json('{}')) ]",
							"properties": {
								"schema": {
									"name": "[variables('clv2TableNamePowerApps')]",
									"columns": [
										{
											"name": "TimeGenerated",
											"type": "datetime"
										},
										{
											"name": "Name",
											"type": "string"
										},
										{
											"name": "ResourceId",
											"type": "string"
										},
										{
											"name": "PowerAppsType",
											"type": "string"
										},
										{
											"name": "Settings",
											"type": "dynamic"
										},
										{
											"name": "SharedGroups",
											"type": "int"
										},
										{
											"name": "SharedUsers",
											"type": "int"
										},
										{
											"name": "Solution",
											"type": "dynamic"
										},
										{
											"name": "Owner",
											"type": "string"
										},
										{
											"name": "SubType",
											"type": "string"
										},
										{
											"name": "EnvironmentTenantId",
											"type": "string"
										},
										{
											"name": "Uri",
											"type": "string"
										},
										{
											"name": "ActionsresourceworkflowActions",
											"type": "dynamic"
										},
										{
											"name": "ClientDeviceType",
											"type": "dynamic"
										},
										{
											"name": "CreatedPrincipalId",
											"type": "string"
										},
										{
											"name": "CreatedTime",
											"type": "datetime"
										},
										{
											"name": "CreationType",
											"type": "dynamic"
										},
										{
											"name": "CustomExtensions",
											"type": "dynamic"
										},
										{
											"name": "Description",
											"type": "string"
										},
										{
											"name": "DocumentUri",
											"type": "dynamic"
										},
										{
											"name": "DocumentVersion",
											"type": "string"
										},
										{
											"name": "EmbeddingHost",
											"type": "dynamic"
										},
										{
											"name": "EnvironmentId",
											"type": "string"
										},
										{
											"name": "IconUri",
											"type": "dynamic"
										},
										{
											"name": "IsDeleted",
											"type": "boolean"
										},
										{
											"name": "LastEnabledPrincipalId",
											"type": "string"
										},
										{
											"name": "LastEnabledTime",
											"type": "string"
										},
										{
											"name": "LastModifiedPrincipalId",
											"type": "string"
										},
										{
											"name": "LastModifiedTime",
											"type": "datetime"
										},
										{
											"name": "LifecycleState",
											"type": "string"
										}
									]
								}
							}
						},
						{
							"type": "Microsoft.OperationalInsights/workspaces/tables",
							"apiVersion": "2022-10-01",
							"name": "[concat(parameters('sentinelWorkspace').name, '/', variables('clv2TableNameEnvironments'))]",
							"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces/tables'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces/tables'], json('{}')) ]",
							"properties": {
								"schema": {
									"name": "[variables('clv2TableNameEnvironments')]",
									"columns": [
										{
											"name": "TimeGenerated",
											"type": "datetime"
										},
										{
											"name": "EnvironmentName",
											"type": "string"
										},
										{
											"name": "EnvironmentId",
											"type": "string"
										},
										{
											"name": "CdsInstanceId",
											"type": "string"
										},
										{
											"name": "CdsInstanceUrl",
											"type": "string"
										},
										{
											"name": "CreatedPrincipalId",
											"type": "string"
										},
										{
											"name": "CreatedTime",
											"type": "datetime"
										},
										{
											"name": "DeletedTime",
											"type": "string"
										},
										{
											"name": "EnvironmentRegion",
											"type": "string"
										},
										{
											"name": "EnvironmentState",
											"type": "string"
										},
										{
											"name": "EnvironmentType",
											"type": "string"
										},
										{
											"name": "EnvironmentUrl",
											"type": "string"
										},
										{
											"name": "IsDefault",
											"type": "boolean"
										},
										{
											"name": "LastModifiedPrincipalId",
											"type": "string"
										},
										{
											"name": "LastModifiedTime",
											"type": "string"
										},
										{
											"name": "SecurityGroup",
											"type": "string"
										},
										{
											"name": "TenantGuid",
											"type": "string"
										}
									]
								}
							}
						},
						{
							"type": "Microsoft.OperationalInsights/workspaces/tables",
							"apiVersion": "2022-10-01",
							"name": "[concat(parameters('sentinelWorkspace').name, '/', variables('clv2TableNameConnections'))]",
							"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces/tables'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces/tables'], json('{}')) ]",
							"properties": {
								"schema": {
									"name": "[variables('clv2TableNameConnections')]",
									"columns": [
										{
											"name": "TimeGenerated",
											"type": "datetime"
										},
										{
											"name": "ConnectionId",
											"type": "string"
										},
										{
											"name": "ConnectionName",
											"type": "string"
										},
										{
											"name": "ApiId",
											"type": "string"
										},
										{
											"name": "DisplayName",
											"type": "string"
										},
										{
											"name": "CreatedTime",
											"type": "datetime"
										},
										{
											"name": "CreatedPrincipalId",
											"type": "string"
										},
										{
											"name": "EnvironmentId",
											"type": "string"
										},
										{
											"name": "IsCustomApI",
											"type": "string"
										},
										{
											"name": "LastModifiedTime",
											"type": "datetime"
										},
										{
											"name": "SwaggerUrl",
											"type": "string"
										},
										{
											"name": "EnvironmentTenantId",
											"type": "string"
										},
										{
											"name": "Tier",
											"type": "string"
										},
										{
											"name": "LastModifiedPrincipalId",
											"type": "string"
										},
										{
											"name": "LastEnabledTime",
											"type": "datetime"
										},
										{
											"name": "LastEnabledPrincipalId",
											"type": "string"
										},
										{
											"name": "DeletedPrincipalId",
											"type": "string"
										},
										{
											"name": "DeletedTime",
											"type": "datetime"
										},
										{
											"name": "Owner",
											"type": "string"
										}
									]
								}
							}
						},
						{
							"type": "Microsoft.OperationalInsights/workspaces/tables",
							"apiVersion": "2022-10-01",
							"name": "[concat(parameters('sentinelWorkspace').name, '/', variables('clv2TableNameFlows'))]",
							"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.OperationalInsights/workspaces/tables'), parameters('tagsByResource')['Microsoft.OperationalInsights/workspaces/tables'], json('{}')) ]",
							"properties": {
								"schema": {
									"name": "[variables('clv2TableNameFlows')]",
									"columns": [
										{
											"name": "TimeGenerated",
											"type": "datetime"
										},
										{
											"name": "FlowType",
											"type": "string"
										},
										{
											"name": "SubType",
											"type": "string"
										},
										{
											"name": "ResourceId",
											"type": "string"
										},
										{
											"name": "Name",
											"type": "string"
										},
										{
											"name": "EnvironmentTenantId",
											"type": "string"
										},
										{
											"name": "EnvironmentId",
											"type": "string"
										},
										{
											"name": "ResourceVersion",
											"type": "string"
										},
										{
											"name": "LifecycleState",
											"type": "string"
										},
										{
											"name": "EventsCreatedTimestamp",
											"type": "datetime"
										},
										{
											"name": "EventsCreatedPrincipalId",
											"type": "string"
										},
										{
											"name": "EventsModifiedTimestamp",
											"type": "datetime"
										},
										{
											"name": "SharedUsers",
											"type": "int"
										},
										{
											"name": "SharedGroups",
											"type": "int"
										},
										{
											"name": "IsDeleted",
											"type": "boolean"
										},
										{
											"name": "WorkflowEntityId",
											"type": "string"
										},
										{
											"name": "FlowSuspensionReason",
											"type": "string"
										},
										{
											"name": "TemplateName",
											"type": "string"
										},
										{
											"name": "FlowFailureAlertSubscribed",
											"type": "boolean"
										},
										{
											"name": "SharingType",
											"type": "string"
										}
									]
								}
							}
						}
					],
					"outputs": {}
				}
			}
		},
		{
			"type": "Microsoft.Insights/components",
			"apiVersion": "2020-02-02",
			"name": "[variables('appInsightsLogName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Insights/components'), parameters('tagsByResource')['Microsoft.Insights/components'], json('{}')) ]",
			"location": "[parameters('location')]",
			"kind": "web",
			"properties": {
				"Application_Type": "web",
				"ApplicationId": "[parameters('functionAppName')]",
				"WorkspaceResourceId": "[parameters('appInsightsWorkspaceResourceId')]"
			}
		},
		{
			"type": "Microsoft.Web/serverfarms",
			"apiVersion": "2022-03-01",
			"name": "[variables('serverFarmName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Web/serverfarms'), parameters('tagsByResource')['Microsoft.Web/serverfarms'], json('{}')) ]",
			"location": "[parameters('location')]",
			"sku": {
				"name": "Y1",
				"tier": "Dynamic",
				"size": "Y1",
				"family": "Y",
				"capacity": 0
			},
			"kind": "functionapp",
			"properties": {
				"perSiteScaling": false,
				"elasticScaleEnabled": false,
				"maximumElasticWorkerCount": 1,
				"isSpot": false,
				"reserved": true,
				"isXenon": false,
				"hyperV": false,
				"targetWorkerCount": 0,
				"targetWorkerSizeId": 0,
				"zoneRedundant": false
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2022-09-01",
			"name": "[parameters('storageAccountName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Storage/storageAccounts'), parameters('tagsByResource')['Microsoft.Storage/storageAccounts'], json('{}')) ]",
			"location": "[parameters('location')]",
			"kind": "StorageV2",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			}
		},
		{

			"type": "Microsoft.Web/sites",
			"apiVersion": "2022-03-01",
			"name": "[parameters('functionAppName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Web/sites'), parameters('tagsByResource')['Microsoft.Web/sites'], json('{}')) ]",
			"location": "[parameters('location')]",
			"kind": "functionapp,linux",
			"dependsOn": [
				"[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
				"[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
				"[resourceId('Microsoft.Insights/components', variables('appInsightsLogName'))]",
				"[resourceId('Microsoft.Insights/dataCollectionRules', variables('dataCollectionRuleName'))]"
			],
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"httpsOnly": true,
				"publicNetworkAccess": "Disabled",
				"keyVaultReferenceIdentity": "SystemAssigned",
				"serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('serverFarmName'))]",
				"siteProperties": {
					"properties": [
						{
							"name": "LinuxFxVersion",
							"value": "Python|3.10"
						}
					]
				},
				"siteConfig": {
					"linuxFxVersion": "Python|3.10",
					"ftpsState": "Disabled",
					"appSettings": [
						{
							"name": "AzureWebJobsStorage",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(parameters('storageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('storageAccountName'))), '2022-09-01').keys[0].value, ';EndpointSuffix=',toLower(variables('storageSuffix')))]"
						},
						{
							"name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
							"value": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(parameters('storageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', toLower(parameters('storageAccountName'))), '2022-09-01').keys[0].value, ';EndpointSuffix=',toLower(variables('storageSuffix')))]"
						},
						{
							"name": "STORAGE_ACCOUNT_URL",
							"value": "[toLower(parameters('storageAccountUrl'))]"
						},
						{
							"name": "WEBSITE_CONTENTSHARE",
							"value": "[toLower(parameters('functionAppName'))]"
						},
						{
							"name": "FUNCTIONS_EXTENSION_VERSION",
							"value": "~4"
						},
						{
							"name": "APPINSIGHTS_INSTRUMENTATIONKEY",
							"value": "[reference(resourceId('Microsoft.insights/components', variables('appInsightsLogName'))).InstrumentationKey]"
						},
						{
							"name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
							"value": "[reference(resourceId('microsoft.insights/components', variables('appInsightsLogName'))).ConnectionString]"
						},
						{
							"name": "FUNCTIONS_WORKER_RUNTIME",
							"value": "python"
						},
						{
							"name": "AzureWebJobsFeatureFlags",
							"value": "EnableWorkerIndexing",
							"slotSetting": false
						},
						{
							"name": "DCR_DCE_URL",
							"value": "[reference(variables('dataCollectionEndpointName')).logsIngestion.endpoint]",
							"slotSetting": false
						},
						{
							"name": "DCR_IMMUTABLE_ID",
							"value": "[reference(variables('dataCollectionRuleName')).immutableId]",
							"slotSetting": false
						},
						{
							"name": "DCR_STREAM_NAME_POWERAPPS",
							"value": "[variables('dCRStreamNamePowerApps')]",
							"slotSetting": false
						},
						{
							"name": "DCR_STREAM_NAME_ENVIRONMENTS",
							"value": "[variables('dCRStreamNameEnvironments')]",
							"slotSetting": false
						},
						{
							"name": "DCR_STREAM_NAME_CONNECTIONS",
							"value": "[variables('dCRStreamNameConnections')]",
							"slotSetting": false
						},
						{
							"name": "DCR_STREAM_NAME_FLOWS",
							"value": "[variables('dCRStreamNameFlows')]",
							"slotSetting": false
						},
						{
							"name": "INVENTORY_CONTAINER_NAME",
							"value": "powerplatform",
							"slotSetting": false
						},
						{
							"name": "COLLECT_APPS",
							"value": "true",
							"slotSetting": false
						},
						{
							"name": "COLLECT_ENVIRONMENTS",
							"value": "true",
							"slotSetting": false
						},
						{
							"name": "COLLECT_CONNECTIONS",
							"value": "true",
							"slotSetting": false
						},
						{
							"name": "COLLECT_FLOWS",
							"value": "true",
							"slotSetting": false
						},
						{
							"name": "BATCH_SIZE",
							"value": "10000",
							"slotSetting": false
						},
						{
							"name": "FULL_SYNC_INTERVAL_DAYS",
							"value": "7",
							"slotSetting": false
						},
						{
							"name": "TIMER_SCHEDULE",
							"value": "0 0 2 * * *",
							"slotSetting": false
						},
						{
							"name": "WEBSITE_RUN_FROM_PACKAGE",
							"value": "https://aka.ms/sentinel-ppinventory-functionapp"
						}
					]
				}
			}
		},
		{
			"type": "Microsoft.Insights/dataCollectionRules",
			"apiVersion": "2021-09-01-preview",
			"name": "[variables('dataCollectionRuleName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionRules'), parameters('tagsByResource')['Microsoft.Insights/dataCollectionRules'], json('{}')) ]",
			"location": "[parameters('sentinelWorkspace').location]",
			"dependsOn": [
				"[resourceId('Microsoft.Insights/dataCollectionEndpoints', variables('dataCollectionEndpointName'))]"
			],
			"properties": {
				"dataCollectionEndpointId": "[resourceId('Microsoft.Insights/dataCollectionEndpoints',variables('dataCollectionEndpointName'))]",
				"streamDeclarations": {
					"[variables('dCRStreamNamePowerApps')]": {
						"columns": [
							{
								"name": "resourceId",
								"type": "string"
							},
							{
								"name": "environmentId",
								"type": "string"
							},
							{
								"name": "type",
								"type": "string"
							},
							{
								"name": "subType",
								"type": "string"
							},
							{
								"name": "DocumentVersion",
								"type": "string"
							},
							{
								"name": "name",
								"type": "string"
							},
							{
								"name": "description",
								"type": "string"
							},
							{
								"name": "uri",
								"type": "string"
							},
							{
								"name": "tenantId",
								"type": "string"
							},
							{
								"name": "lifecycleState",
								"type": "string"
							},
							{
								"name": "owner",
								"type": "string"
							},
							{
								"name": "createdTime",
								"type": "datetime"
							},
							{
								"name": "createdPrincipalId",
								"type": "string"
							},
							{
								"name": "lastModifiedTime",
								"type": "datetime"
							},
							{
								"name": "lastModifiedPrincipalId",
								"type": "string"
							},
							{
								"name": "lastEnabledTime",
								"type": "string"
							},
							{
								"name": "lastEnabledPrincipalId",
								"type": "string"
							},
							{
								"name": "sharedUsers",
								"type": "int"
							},
							{
								"name": "sharedGroups",
								"type": "int"
							},
							{
								"name": "actionsresourceworkflowActions",
								"type": "dynamic"
							},
							{
								"name": "settings",
								"type": "dynamic"
							},
							{
								"name": "solution",
								"type": "dynamic"
							},
							{
								"name": "clientDeviceType",
								"type": "dynamic"
							},
							{
								"name": "embeddingHost",
								"type": "dynamic"
							},
							{
								"name": "creationType",
								"type": "dynamic"
							},
							{
								"name": "iconUri",
								"type": "dynamic"
							},
							{
								"name": "documentUri",
								"type": "dynamic"
							},
							{
								"name": "customExtensions",
								"type": "dynamic"
							},
							{
								"name": "isDeleted",
								"type": "boolean"
							}
						]
					},
					"[variables('dCRStreamNameEnvironments')]": {
						"columns": [
							{
								"name": "tenantGuid",
								"type": "string"
							},
							{
								"name": "environmentId",
								"type": "string"
							},
							{
								"name": "environmentName",
								"type": "string"
							},
							{
								"name": "environmentRegion",
								"type": "string"
							},
							{
								"name": "environmentState",
								"type": "string"
							},
							{
								"name": "environmentUrl",
								"type": "string"
							},
							{
								"name": "environmentType",
								"type": "string"
							},
							{
								"name": "isDefault",
								"type": "boolean"
							},
							{
								"name": "securityGroup",
								"type": "string"
							},
							{
								"name": "cdsInstanceId",
								"type": "string"
							},
							{
								"name": "cdsInstanceUrl",
								"type": "string"
							},
							{
								"name": "createdTime",
								"type": "datetime"
							},
							{
								"name": "createdPrincipalId",
								"type": "string"
							},
							{
								"name": "lastModifiedTime",
								"type": "string"
							},
							{
								"name": "lastModifiedPrincipalId",
								"type": "string"
							},
							{
								"name": "deletedTime",
								"type": "string"
							}
						]
					},
					"[variables('dCRStreamNameConnections')]": {
						"columns": [
							{
								"name": "connectionId",
								"type": "string"
							},
							{
								"name": "connectionName",
								"type": "string"
							},
							{
								"name": "apiId",
								"type": "string"
							},
							{
								"name": "displayName",
								"type": "string"
							},
							{
								"name": "createdTime",
								"type": "datetime"
							},
							{
								"name": "createdPrincipalId",
								"type": "string"
							},
							{
								"name": "environmentId",
								"type": "string"
							},
							{
								"name": "isCustomApI",
								"type": "string"
							},
							{
								"name": "lastModifiedTime",
								"type": "datetime"
							},
							{
								"name": "swaggerUrl",
								"type": "string"
							},
							{
								"name": "tenantId",
								"type": "string"
							},
							{
								"name": "tier",
								"type": "string"
							},
							{
								"name": "lastModifiedPrincipalId",
								"type": "string"
							},
							{
								"name": "lastEnabledTime",
								"type": "datetime"
							},
							{
								"name": "lastEnabledPrincipalId",
								"type": "string"
							},
							{
								"name": "deletedPrincipalId",
								"type": "string"
							},
							{
								"name": "deletedTime",
								"type": "datetime"
							},
							{
								"name": "owner",
								"type": "string"
							}
						]
					},
					"[variables('dCRStreamNameFlows')]": {
						"columns": [
							{
								"name": "type",
								"type": "string"
							},
							{
								"name": "subType",
								"type": "string"
							},
							{
								"name": "resourceId",
								"type": "string"
							},
							{
								"name": "name",
								"type": "string"
							},
							{
								"name": "tenantId",
								"type": "string"
							},
							{
								"name": "environmentId",
								"type": "string"
							},
							{
								"name": "resourceVersion",
								"type": "string"
							},
							{
								"name": "lifecycleState",
								"type": "string"
							},
							{
								"name": "events_created_timestamp",
								"type": "datetime"
							},
							{
								"name": "events_created_principalId",
								"type": "string"
							},
							{
								"name": "events_modified_timestamp",
								"type": "datetime"
							},
							{
								"name": "sharedUsers",
								"type": "int"
							},
							{
								"name": "sharedGroups",
								"type": "int"
							},
							{
								"name": "isDeleted",
								"type": "boolean"
							},
							{
								"name": "workflowEntityId",
								"type": "string"
							},
							{
								"name": "flowSuspensionReason",
								"type": "string"
							},
							{
								"name": "templateName",
								"type": "string"
							},
							{
								"name": "flowFailureAlertSubscribed",
								"type": "boolean"
							},
							{
								"name": "sharingType",
								"type": "string"
							}
						]
					}
				},
				"destinations": {
					"logAnalytics": [
						{
							"workspaceResourceId": "[parameters('sentinelWorkspace').id]",
							"name": "clv2ws1"
						}
					]
				},
				"dataFlows": [
					{
						"streams": [
							"[variables('dCRStreamNamePowerApps')]"
						],
						"destinations": [
							"clv2ws1"
						],
						"transformKql": "source| extend TimeGenerated = now()| project-rename EnvironmentTenantId = tenantId, PowerAppsType = type,ResourceId = resourceId,EnvironmentId = environmentId,SubType = subType,Name = name,Description = description,Uri = uri,LifecycleState = lifecycleState,Owner = owner,CreatedTime = createdTime,CreatedPrincipalId = createdPrincipalId,LastModifiedTime = lastModifiedTime,LastModifiedPrincipalId = lastModifiedPrincipalId,LastEnabledTime = lastEnabledTime,LastEnabledPrincipalId = lastEnabledPrincipalId,SharedUsers = sharedUsers,SharedGroups = sharedGroups,ActionsresourceworkflowActions = actionsresourceworkflowActions,Settings = settings,Solution = solution,ClientDeviceType = clientDeviceType,EmbeddingHost = embeddingHost,CreationType = creationType,IconUri = iconUri,DocumentUri = documentUri,CustomExtensions = customExtensions,IsDeleted = isDeleted",
						"outputStream": "[variables('dCRStreamNamePowerApps')]"
					},
					{
						"streams": [
							"[variables('dCRStreamNameEnvironments')]"
						],
						"destinations": [
							"clv2ws1"
						],
						"transformKql": "source| extend TimeGenerated = now()| project-rename TenantGuid = tenantGuid,EnvironmentId = environmentId,EnvironmentName = environmentName,EnvironmentRegion = environmentRegion,EnvironmentState = environmentState,EnvironmentUrl = environmentUrl,EnvironmentType = environmentType,IsDefault = isDefault,SecurityGroup = securityGroup,CdsInstanceId = cdsInstanceId,CdsInstanceUrl = cdsInstanceUrl,CreatedTime = createdTime,CreatedPrincipalId = createdPrincipalId,LastModifiedTime = lastModifiedTime,LastModifiedPrincipalId = lastModifiedPrincipalId,DeletedTime = deletedTime",
						"outputStream": "[variables('dCRStreamNameEnvironments')]"
					},
					{
						"streams": [
							"[variables('dCRStreamNameConnections')]"
						],
						"destinations": [
							"clv2ws1"
						],
						"transformKql": "source| extend TimeGenerated = now()| project-rename ConnectionId = connectionId, ConnectionName = connectionName, ApiId = apiId, DisplayName = displayName, CreatedTime = createdTime, CreatedPrincipalId = createdPrincipalId, EnvironmentId = environmentId, IsCustomApI = isCustomApI, LastModifiedTime = lastModifiedTime, SwaggerUrl = swaggerUrl, EnvironmentTenantId = tenantId, Tier = tier, LastModifiedPrincipalId = lastModifiedPrincipalId, LastEnabledTime = lastEnabledTime, LastEnabledPrincipalId = lastEnabledPrincipalId, DeletedPrincipalId = deletedPrincipalId, DeletedTime = deletedTime, Owner = owner",
						"outputStream": "[variables('dCRStreamNameConnections')]"
					},
					{
						"streams": [
							"[variables('dCRStreamNameFlows')]"
						],
						"destinations": [
							"clv2ws1"
						],
						"transformKql": "source| extend TimeGenerated = now()| project-rename FlowType = type, SubType = subType, ResourceId = resourceId, Name = name, EnvironmentTenantId = tenantId, EnvironmentId = environmentId, ResourceVersion = resourceVersion, LifecycleState = lifecycleState, EventsCreatedTimestamp = events_created_timestamp, EventsCreatedPrincipalId = events_created_principalId, EventsModifiedTimestamp = events_modified_timestamp, SharedUsers = sharedUsers, SharedGroups = sharedGroups, IsDeleted = isDeleted, WorkflowEntityId = workflowEntityId, FlowSuspensionReason = flowSuspensionReason, TemplateName = templateName, FlowFailureAlertSubscribed = flowFailureAlertSubscribed, SharingType = sharingType",
						"outputStream": "[variables('dCRStreamNameFlows')]"
					}
				]
			}
		},
		{
			"type": "Microsoft.Insights/dataCollectionEndpoints",
			"apiVersion": "2021-09-01-preview",
			"name": "[variables('dataCollectionEndpointName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Insights/dataCollectionEndpoints'), parameters('tagsByResource')['Microsoft.Insights/dataCollectionEndpoints'], json('{}')) ]",
			"location": "[parameters('sentinelWorkspace').location]",
			"dependsOn": [
				"[variables('inventoryTablesDeploymentName')]"
			],
			"properties": {
				"networkAcls": {
					"publicNetworkAccess": "Enabled"
				}
			}
		},
		{
			"condition": "[parameters('roleAssignmentDcr')]",
			"type": "Microsoft.Authorization/roleAssignments",
			"apiVersion": "2022-04-01",
			"name": "[guid(parameters('functionAppName'), variables('dataCollectionRuleName'), variables('monitoringMetricsPublisherRoleId'))]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Authorization/roleAssignments'), parameters('tagsByResource')['Microsoft.Authorization/roleAssignments'], json('{}')) ]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
				"[resourceId('Microsoft.Insights/dataCollectionRules', variables('dataCollectionRuleName'))]"
			],
			"properties": {
				"roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('monitoringMetricsPublisherRoleId'))]",
				"principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
				"principalType": "ServicePrincipal"
			},
			"scope": "[concat('Microsoft.Insights/dataCollectionRules', '/', variables('dataCollectionRuleName'))]"
		},
		{
			"condition": "[parameters('roleAssignmentADLSv2')]",
			"type": "Microsoft.Resources/deployments",
			"apiVersion": "2022-09-01",
			"name": "[variables('inventoryRoleAssingmentDeploymentName')]",
			"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Resources/deployments'), parameters('tagsByResource')['Microsoft.Resources/deployments'], json('{}')) ]",
			"resourceGroup": "[parameters('inventoryStorageAccount').resourceGroup]",
			"subscriptionId": "[parameters('inventoryStorageAccount').subscriptionId]",
			"dependsOn": [
				"[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
			],
			"properties": {
				"mode": "Incremental",
				"template": {
					"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
					"contentVersion": "1.0.0.0",
					"variables": {},
					"resources": [
						{
							"type": "Microsoft.Authorization/roleAssignments",
							"apiVersion": "2022-04-01",
							"name": "[guid(parameters('functionAppName'), parameters('storageAccountUrl'), variables('storageBlobDataReaderRoleId'))]",
							"tags": "[ if(contains(parameters('tagsByResource'), 'Microsoft.Authorization/roleAssignments'), parameters('tagsByResource')['Microsoft.Authorization/roleAssignments'], json('{}')) ]",
							"properties": {
								"roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('storageBlobDataReaderRoleId'))]",
								"principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
								"principalType": "ServicePrincipal"
							},
							"scope": "[parameters('inventoryStorageAccount').resourceId]"
						}
					],
					"outputs": {}
				}
			}
		}
	],
	"outputs": {}
}